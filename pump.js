var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.TRUSTED_SITE = true;
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if(goog.getObjectByName(namespace)) {
        break
      }
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name)
  };
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      return
    }
    if(goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if(path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if(goog.global.console) {
      goog.global.console["error"](errorMessage)
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if(ctor.instance_) {
      return ctor.instance_
    }
    if(goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor
    }
    return ctor.instance_ = new ctor
  }
};
goog.instantiatedSingletons_ = [];
if(!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if(doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if(isDeps) {
          return false
        }else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(!goog.isProvided_(requireName)) {
            if(requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName])
            }else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call((value));
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments))
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if(!fn) {
    throw new Error;
  }
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs)
    }
  }else {
    return function() {
      return fn.apply(selfObj, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if(!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.getMsgWithFallback = function(a, b) {
  return a
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str))
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "\x26amp;").replace(goog.string.ltRe_, "\x26lt;").replace(goog.string.gtRe_, "\x26gt;").replace(goog.string.quotRe_, "\x26quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.amperRe_, "\x26amp;")
    }
    if(str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.ltRe_, "\x26lt;")
    }
    if(str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.gtRe_, "\x26gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "\x26quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "\x26")) {
    if("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if(value) {
      return value
    }
    if(entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if(!isNaN(n)) {
        value = String.fromCharCode(n)
      }
    }
    if(!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1)
    }
    return seen[s] = value
  })
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"\x26";
      case "lt":
        return"\x3c";
      case "gt":
        return"\x3e";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars && str.length > chars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  })
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase()
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase()
  })
};
goog.string.parseInt = function(value) {
  if(isFinite(value)) {
    value = String(value)
  }
  if(goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10)
  }
  return NaN
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if(Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error)
  }else {
    this.stack = (new Error).stack || ""
  }
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
  return(value)
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if(f.call(opt_obj, element, index, arr)) {
      ++count
    }
  }, opt_obj);
  return count
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.toArray = function(object) {
  var length = object.length;
  if(length > 0) {
    var rv = new Array(length);
    for(var i = 0;i < length;i++) {
      rv[i] = object[i]
    }
    return rv
  }
  return[]
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for(var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if(result != 0) {
      return result
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element
  });
  return ret
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if(opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end
  }
  if(step * (end - start) < 0) {
    return[]
  }
  if(step > 0) {
    for(var i = start;i < end;i += step) {
      array.push(i)
    }
  }else {
    for(var i = start;i > end;i += step) {
      array.push(i)
    }
  }
  return array
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if(Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result)
  }
  return result
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj)
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if(opt_a2 != null) {
    for(var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i]
    }
  }
  return this
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = ""
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 4441712502), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1017252215), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 1014004081), cljs.core._STAR_print_dup_STAR_], true)
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number"
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x)
};
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  var x__$1 = x == null ? null : x;
  if(p[goog.typeOf(x__$1)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3941__auto__ = ty;
    if(cljs.core.truth_(and__3941__auto__)) {
      return ty.cljs$lang$type
    }else {
      return and__3941__auto__
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""))
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4090__auto__ = ty.cljs$lang$ctorStr;
  if(cljs.core.truth_(temp__4090__auto__)) {
    var s = temp__4090__auto__;
    return s
  }else {
    return[cljs.core.str(ty)].join("")
  }
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__4789__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__4789 = function(array, i, var_args) {
      var idxs = null;
      if(arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__4789__delegate.call(this, array, i, idxs)
    };
    G__4789.cljs$lang$maxFixedArity = 2;
    G__4789.cljs$lang$applyTo = function(arglist__4790) {
      var array = cljs.core.first(arglist__4790);
      arglist__4790 = cljs.core.next(arglist__4790);
      var i = cljs.core.first(arglist__4790);
      var idxs = cljs.core.rest(arglist__4790);
      return G__4789__delegate(array, i, idxs)
    };
    G__4789.cljs$core$IFn$_invoke$arity$variadic = G__4789__delegate;
    return G__4789
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val
  };
  var aset__4 = function() {
    var G__4791__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv)
    };
    var G__4791 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if(arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__4791__delegate.call(this, array, idx, idx2, idxv)
    };
    G__4791.cljs$lang$maxFixedArity = 3;
    G__4791.cljs$lang$applyTo = function(arglist__4792) {
      var array = cljs.core.first(arglist__4792);
      arglist__4792 = cljs.core.next(arglist__4792);
      var idx = cljs.core.first(arglist__4792);
      arglist__4792 = cljs.core.next(arglist__4792);
      var idx2 = cljs.core.first(arglist__4792);
      var idxv = cljs.core.rest(arglist__4792);
      return G__4791__delegate(array, idx, idx2, idxv)
    };
    G__4791.cljs$core$IFn$_invoke$arity$variadic = G__4791__delegate;
    return G__4791
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset
}();
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array
}();
cljs.core.Fn = {};
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__3543__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3543__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__3543__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3543__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__3543__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3543__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__3543__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3543__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__3543__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3543__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__3543__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3543__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__3543__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3543__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__3543__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3543__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__3543__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3543__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__3543__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3543__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__3543__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3543__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__3543__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3543__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__3543__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3543__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__3543__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3543__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__3543__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3543__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__3543__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3543__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__3543__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3543__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__3543__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3543__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__3543__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3543__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__3543__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3543__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__3543__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3543__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__3543__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._count[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._count["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__3543__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._empty[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._empty["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__3543__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._conj[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._conj["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3941__auto__ = coll;
      if(and__3941__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__3543__auto__ = coll == null ? null : coll;
      return function() {
        var or__3943__auto__ = cljs.core._nth[goog.typeOf(x__3543__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._nth["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3941__auto__ = coll;
      if(and__3941__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__3543__auto__ = coll == null ? null : coll;
      return function() {
        var or__3943__auto__ = cljs.core._nth[goog.typeOf(x__3543__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._nth["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__3543__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._first[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._first["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__3543__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._rest[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._rest["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__3543__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._next[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._next["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3941__auto__ = o;
      if(and__3941__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__3543__auto__ = o == null ? null : o;
      return function() {
        var or__3943__auto__ = cljs.core._lookup[goog.typeOf(x__3543__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._lookup["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3941__auto__ = o;
      if(and__3941__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__3543__auto__ = o == null ? null : o;
      return function() {
        var or__3943__auto__ = cljs.core._lookup[goog.typeOf(x__3543__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._lookup["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__3543__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__3543__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._assoc[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._assoc["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__3543__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._dissoc[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._dissoc["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__3543__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._key[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._key["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__3543__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._val[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._val["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__3543__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._disjoin[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._disjoin["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__3543__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._peek[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._peek["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__3543__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._pop[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._pop["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__3543__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._assoc_n[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._assoc_n["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__3543__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._deref[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._deref["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__3543__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._deref_with_timeout["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__3543__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._meta[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._meta["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__3543__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._with_meta[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._with_meta["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3941__auto__ = coll;
      if(and__3941__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__3543__auto__ = coll == null ? null : coll;
      return function() {
        var or__3943__auto__ = cljs.core._reduce[goog.typeOf(x__3543__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._reduce["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3941__auto__ = coll;
      if(and__3941__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__3543__auto__ = coll == null ? null : coll;
      return function() {
        var or__3943__auto__ = cljs.core._reduce[goog.typeOf(x__3543__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._reduce["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__3543__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._kv_reduce[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._kv_reduce["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__3543__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._equiv[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._equiv["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__3543__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._hash[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._hash["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__3543__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._seq[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._seq["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__3543__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._rseq[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._rseq["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__3543__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._sorted_seq[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._sorted_seq["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__3543__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._sorted_seq_from["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__3543__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._entry_key[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._entry_key["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__3543__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._comparator[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._comparator["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IWriter = {};
cljs.core._write = function _write(writer, s) {
  if(function() {
    var and__3941__auto__ = writer;
    if(and__3941__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s)
  }else {
    var x__3543__auto__ = writer == null ? null : writer;
    return function() {
      var or__3943__auto__ = cljs.core._write[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._write["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s)
  }
};
cljs.core._flush = function _flush(writer) {
  if(function() {
    var and__3941__auto__ = writer;
    if(and__3941__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer)
  }else {
    var x__3543__auto__ = writer == null ? null : writer;
    return function() {
      var or__3943__auto__ = cljs.core._flush[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._flush["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer)
  }
};
cljs.core.IPrintWithWriter = {};
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts)
  }else {
    var x__3543__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._pr_writer[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._pr_writer["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3941__auto__ = d;
    if(and__3941__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__3543__auto__ = d == null ? null : d;
    return function() {
      var or__3943__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._realized_QMARK_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__3543__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = cljs.core._notify_watches[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._notify_watches["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__3543__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = cljs.core._add_watch[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._add_watch["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__3543__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = cljs.core._remove_watch[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._remove_watch["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__3543__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._as_transient[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._as_transient["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__3543__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._conj_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__3543__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._persistent_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__3543__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._assoc_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__3543__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__3543__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__3543__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._pop_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__3543__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__3543__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._compare[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._compare["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__3543__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._drop_first[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._drop_first["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__3543__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._chunked_first[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._chunked_first["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__3543__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._chunked_rest[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._chunked_rest["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__3543__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._chunked_next[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._chunked_next["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INamed = {};
cljs.core._name = function _name(x) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$INamed$_name$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x)
  }else {
    var x__3543__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._name[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._name["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core._namespace = function _namespace(x) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x)
  }else {
    var x__3543__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._namespace[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._namespace["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x)
  }
};
goog.provide("cljs.core.StringBufferWriter");
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/StringBufferWriter")
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  return self__.sb.append(s)
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  return null
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb)
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return[cljs.core.str(sb)].join("")
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.hash.call(null, sym.ns), cljs.core.hash.call(null, sym.name))
};
goog.provide("cljs.core.Symbol");
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/Symbol")
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  return cljs.core._write.call(null, writer, self__.str)
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  return self__.name
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  return self__.ns
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var h__3364__auto__ = self__._hash;
  if(!(h__3364__auto__ == null)) {
    return h__3364__auto__
  }else {
    var h__3364__auto____$1 = cljs.core.hash_symbol.call(null, sym);
    self__._hash = h__3364__auto____$1;
    return h__3364__auto____$1
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta)
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  return self__._meta
};
cljs.core.Symbol.prototype.call = function() {
  var G__4794 = null;
  var G__4794__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null)
  };
  var G__4794__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found)
  };
  G__4794 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__4794__2.call(this, self__, coll);
      case 3:
        return G__4794__3.call(this, self__, coll, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__4794
}();
cljs.core.Symbol.prototype.apply = function(self__, args4793) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args4793.slice()))
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  if(other instanceof cljs.core.Symbol) {
    return self__.str === other.str
  }else {
    return false
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta)
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(name instanceof cljs.core.Symbol) {
      return name
    }else {
      return symbol.call(null, null, name)
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null)
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol
}();
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__4796 = coll;
      if(G__4796) {
        if(function() {
          var or__3943__auto__ = G__4796.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__4796.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._seq.call(null, coll)
    }else {
      if(coll instanceof Array) {
        if(coll.length === 0) {
          return null
        }else {
          return new cljs.core.IndexedSeq(coll, 0)
        }
      }else {
        if(typeof coll === "string") {
          if(coll.length === 0) {
            return null
          }else {
            return new cljs.core.IndexedSeq(coll, 0)
          }
        }else {
          if(cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw new Error([cljs.core.str(coll), cljs.core.str("is not ISeqable")].join(""));
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__4798 = coll;
      if(G__4798) {
        if(function() {
          var or__3943__auto__ = G__4798.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__4798.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s = cljs.core.seq.call(null, coll);
      if(s == null) {
        return null
      }else {
        return cljs.core._first.call(null, s)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__4800 = coll;
      if(G__4800) {
        if(function() {
          var or__3943__auto__ = G__4800.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__4800.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s = cljs.core.seq.call(null, coll);
      if(!(s == null)) {
        return cljs.core._rest.call(null, s)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__4802 = coll;
      if(G__4802) {
        if(function() {
          var or__3943__auto__ = G__4802.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__4802.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3943__auto__ = x === y;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__4803__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__4804 = y;
            var G__4805 = cljs.core.first.call(null, more);
            var G__4806 = cljs.core.next.call(null, more);
            x = G__4804;
            y = G__4805;
            more = G__4806;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__4803 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__4803__delegate.call(this, x, y, more)
    };
    G__4803.cljs$lang$maxFixedArity = 2;
    G__4803.cljs$lang$applyTo = function(arglist__4807) {
      var x = cljs.core.first(arglist__4807);
      arglist__4807 = cljs.core.next(arglist__4807);
      var y = cljs.core.first(arglist__4807);
      var more = cljs.core.rest(arglist__4807);
      return G__4803__delegate(x, y, more)
    };
    G__4803.cljs$core$IFn$_invoke$arity$variadic = G__4803__delegate;
    return G__4803
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_
}();
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.IKVReduce["null"] = true;
cljs.core._kv_reduce["null"] = function(_, f, init) {
  return init
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var and__3941__auto__ = other instanceof Date;
  if(and__3941__auto__) {
    return o.toString() === other.toString()
  }else {
    return and__3941__auto__
  }
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return Math.floor(o) % 2147483647
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
goog.provide("cljs.core.Reduced");
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  return self__.val
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if(cnt === 0) {
      return f.call(null)
    }else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while(true) {
        if(n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if(cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval)
          }else {
            var G__4808 = nval;
            var G__4809 = n + 1;
            val = G__4808;
            n = G__4809;
            continue
          }
        }else {
          return val
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__4810 = nval;
          var G__4811 = n + 1;
          val__$1 = G__4810;
          n = G__4811;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__4812 = nval;
          var G__4813 = n + 1;
          val__$1 = G__4812;
          n = G__4813;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val = arr[0];
      var n = 1;
      while(true) {
        if(n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if(cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval)
          }else {
            var G__4814 = nval;
            var G__4815 = n + 1;
            val = G__4814;
            n = G__4815;
            continue
          }
        }else {
          return val
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__4816 = nval;
          var G__4817 = n + 1;
          val__$1 = G__4816;
          n = G__4817;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__4818 = nval;
          var G__4819 = n + 1;
          val__$1 = G__4818;
          n = G__4819;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__4821 = x;
  if(G__4821) {
    if(function() {
      var or__3943__auto__ = G__4821.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__4821.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__4821.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__4821)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__4821)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__4823 = x;
  if(G__4823) {
    if(function() {
      var or__3943__auto__ = G__4823.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__4823.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__4823.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__4823)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__4823)
  }
};
goog.provide("cljs.core.IndexedSeq");
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199550
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  if(self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var c = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c > 0) {
    return new cljs.core.RSeq(coll, c - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i)
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  return self__.arr.length - self__.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  return self__.arr[self__.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  if(self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var i__$1 = n + self__.i;
  if(i__$1 < self__.arr.length) {
    return self__.arr[i__$1]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var i__$1 = n + self__.i;
  if(i__$1 < self__.arr.length) {
    return self__.arr[i__$1]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.List.EMPTY
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i)
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i)
    }else {
      return null
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq
}();
goog.provide("cljs.core.RSeq");
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, col)
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, col)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._nth.call(null, self__.ci, self__.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta)
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn = cljs.core.next.call(null, s);
    if(!(sn == null)) {
      var G__4824 = sn;
      s = G__4824;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    if(!(coll == null)) {
      return cljs.core._conj.call(null, coll, x)
    }else {
      return cljs.core.list.call(null, x)
    }
  };
  var conj__3 = function() {
    var G__4825__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__4826 = conj.call(null, coll, x);
          var G__4827 = cljs.core.first.call(null, xs);
          var G__4828 = cljs.core.next.call(null, xs);
          coll = G__4826;
          x = G__4827;
          xs = G__4828;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__4825 = function(coll, x, var_args) {
      var xs = null;
      if(arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__4825__delegate.call(this, coll, x, xs)
    };
    G__4825.cljs$lang$maxFixedArity = 2;
    G__4825.cljs$lang$applyTo = function(arglist__4829) {
      var coll = cljs.core.first(arglist__4829);
      arglist__4829 = cljs.core.next(arglist__4829);
      var x = cljs.core.first(arglist__4829);
      var xs = cljs.core.rest(arglist__4829);
      return G__4825__delegate(coll, x, xs)
    };
    G__4825.cljs$core$IFn$_invoke$arity$variadic = G__4825__delegate;
    return G__4825
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s)
    }else {
      var G__4830 = cljs.core.next.call(null, s);
      var G__4831 = acc + 1;
      s = G__4830;
      acc = G__4831;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__4833 = coll;
      if(G__4833) {
        if(function() {
          var or__3943__auto__ = G__4833.cljs$lang$protocol_mask$partition0$ & 2;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__4833.cljs$core$ICounted$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._count.call(null, coll)
    }else {
      if(coll instanceof Array) {
        return coll.length
      }else {
        if(typeof coll === "string") {
          return coll.length
        }else {
          if(cljs.core.type_satisfies_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.accumulating_seq_count.call(null, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  }else {
    return 0
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while(true) {
      if(coll == null) {
        throw new Error("Index out of bounds");
      }else {
        if(n === 0) {
          if(cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll)
          }else {
            throw new Error("Index out of bounds");
          }
        }else {
          if(cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n)
          }else {
            if(cljs.core.seq.call(null, coll)) {
              var G__4834 = cljs.core.next.call(null, coll);
              var G__4835 = n - 1;
              coll = G__4834;
              n = G__4835;
              continue
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw new Error("Index out of bounds");
              }else {
                return null
              }
            }
          }
        }
      }
      break
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while(true) {
      if(coll == null) {
        return not_found
      }else {
        if(n === 0) {
          if(cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll)
          }else {
            return not_found
          }
        }else {
          if(cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found)
          }else {
            if(cljs.core.seq.call(null, coll)) {
              var G__4836 = cljs.core.next.call(null, coll);
              var G__4837 = n - 1;
              var G__4838 = not_found;
              coll = G__4836;
              n = G__4837;
              not_found = G__4838;
              continue
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found
              }else {
                return null
              }
            }
          }
        }
      }
      break
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__4843 = coll;
        if(G__4843) {
          if(function() {
            var or__3943__auto__ = G__4843.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__4843.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        if(coll instanceof Array) {
          if(n < coll.length) {
            return coll[n]
          }else {
            return null
          }
        }else {
          if(typeof coll === "string") {
            if(n < coll.length) {
              return coll[n]
            }else {
              return null
            }
          }else {
            if(cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if(function() {
                  var G__4844 = coll;
                  if(G__4844) {
                    if(function() {
                      var or__3943__auto__ = G__4844.cljs$lang$protocol_mask$partition0$ & 64;
                      if(or__3943__auto__) {
                        return or__3943__auto__
                      }else {
                        return G__4844.cljs$core$ISeq$
                      }
                    }()) {
                      return true
                    }else {
                      if(!G__4844.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__4844)
                      }else {
                        return false
                      }
                    }
                  }else {
                    return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__4844)
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
                }else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              }else {
                return null
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__4845 = coll;
        if(G__4845) {
          if(function() {
            var or__3943__auto__ = G__4845.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__4845.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        if(coll instanceof Array) {
          if(n < coll.length) {
            return coll[n]
          }else {
            return not_found
          }
        }else {
          if(typeof coll === "string") {
            if(n < coll.length) {
              return coll[n]
            }else {
              return not_found
            }
          }else {
            if(cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if(function() {
                  var G__4846 = coll;
                  if(G__4846) {
                    if(function() {
                      var or__3943__auto__ = G__4846.cljs$lang$protocol_mask$partition0$ & 64;
                      if(or__3943__auto__) {
                        return or__3943__auto__
                      }else {
                        return G__4846.cljs$core$ISeq$
                      }
                    }()) {
                      return true
                    }else {
                      if(!G__4846.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__4846)
                      }else {
                        return false
                      }
                    }
                  }else {
                    return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__4846)
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
                }else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              }else {
                return null
              }
            }
          }
        }
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if(o == null) {
      return null
    }else {
      if(function() {
        var G__4849 = o;
        if(G__4849) {
          if(function() {
            var or__3943__auto__ = G__4849.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__4849.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._lookup.call(null, o, k)
      }else {
        if(o instanceof Array) {
          if(k < o.length) {
            return o[k]
          }else {
            return null
          }
        }else {
          if(typeof o === "string") {
            if(k < o.length) {
              return o[k]
            }else {
              return null
            }
          }else {
            if(cljs.core.type_satisfies_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return null
              }else {
                return null
              }
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if(!(o == null)) {
      if(function() {
        var G__4850 = o;
        if(G__4850) {
          if(function() {
            var or__3943__auto__ = G__4850.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__4850.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found)
      }else {
        if(o instanceof Array) {
          if(k < o.length) {
            return o[k]
          }else {
            return not_found
          }
        }else {
          if(typeof o === "string") {
            if(k < o.length) {
              return o[k]
            }else {
              return not_found
            }
          }else {
            if(cljs.core.type_satisfies_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found
              }else {
                return null
              }
            }
          }
        }
      }
    }else {
      return not_found
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if(!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v)
    }else {
      return cljs.core.hash_map.call(null, k, v)
    }
  };
  var assoc__4 = function() {
    var G__4851__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__4852 = ret;
          var G__4853 = cljs.core.first.call(null, kvs);
          var G__4854 = cljs.core.second.call(null, kvs);
          var G__4855 = cljs.core.nnext.call(null, kvs);
          coll = G__4852;
          k = G__4853;
          v = G__4854;
          kvs = G__4855;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__4851 = function(coll, k, v, var_args) {
      var kvs = null;
      if(arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__4851__delegate.call(this, coll, k, v, kvs)
    };
    G__4851.cljs$lang$maxFixedArity = 3;
    G__4851.cljs$lang$applyTo = function(arglist__4856) {
      var coll = cljs.core.first(arglist__4856);
      arglist__4856 = cljs.core.next(arglist__4856);
      var k = cljs.core.first(arglist__4856);
      arglist__4856 = cljs.core.next(arglist__4856);
      var v = cljs.core.first(arglist__4856);
      var kvs = cljs.core.rest(arglist__4856);
      return G__4851__delegate(coll, k, v, kvs)
    };
    G__4851.cljs$core$IFn$_invoke$arity$variadic = G__4851__delegate;
    return G__4851
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__4857__delegate = function(coll, k, ks) {
      while(true) {
        var ret = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__4858 = ret;
          var G__4859 = cljs.core.first.call(null, ks);
          var G__4860 = cljs.core.next.call(null, ks);
          coll = G__4858;
          k = G__4859;
          ks = G__4860;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__4857 = function(coll, k, var_args) {
      var ks = null;
      if(arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__4857__delegate.call(this, coll, k, ks)
    };
    G__4857.cljs$lang$maxFixedArity = 2;
    G__4857.cljs$lang$applyTo = function(arglist__4861) {
      var coll = cljs.core.first(arglist__4861);
      arglist__4861 = cljs.core.next(arglist__4861);
      var k = cljs.core.first(arglist__4861);
      var ks = cljs.core.rest(arglist__4861);
      return G__4857__delegate(coll, k, ks)
    };
    G__4857.cljs$core$IFn$_invoke$arity$variadic = G__4857__delegate;
    return G__4857
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3943__auto__ = goog.isFunction(f);
  if(or__3943__auto__) {
    return or__3943__auto__
  }else {
    var G__4863 = f;
    if(G__4863) {
      if(cljs.core.truth_(function() {
        var or__3943__auto____$1 = null;
        if(cljs.core.truth_(or__3943__auto____$1)) {
          return or__3943__auto____$1
        }else {
          return G__4863.cljs$core$Fn$
        }
      }())) {
        return true
      }else {
        if(!G__4863.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.Fn, G__4863)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.Fn, G__4863)
    }
  }
};
cljs.core.with_meta = function with_meta(o, meta) {
  if(function() {
    var and__3941__auto__ = cljs.core.fn_QMARK_.call(null, o);
    if(and__3941__auto__) {
      return!function() {
        var G__4869 = o;
        if(G__4869) {
          if(function() {
            var or__3943__auto__ = G__4869.cljs$lang$protocol_mask$partition0$ & 262144;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__4869.cljs$core$IWithMeta$
            }
          }()) {
            return true
          }else {
            if(!G__4869.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__4869)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__4869)
        }
      }()
    }else {
      return and__3941__auto__
    }
  }()) {
    return with_meta.call(null, function() {
      if(typeof cljs.core.t4870 !== "undefined") {
      }else {
        goog.provide("cljs.core.t4870");
        cljs.core.t4870 = function(meta, o, with_meta, meta4871) {
          this.meta = meta;
          this.o = o;
          this.with_meta = with_meta;
          this.meta4871 = meta4871;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217
        };
        cljs.core.t4870.cljs$lang$type = true;
        cljs.core.t4870.cljs$lang$ctorStr = "cljs.core/t4870";
        cljs.core.t4870.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
          return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/t4870")
        };
        cljs.core.t4870.prototype.call = function() {
          var G__4874__delegate = function(self__, args) {
            var self____$1 = this;
            var _ = self____$1;
            return cljs.core.apply.call(null, self__.o, args)
          };
          var G__4874 = function(self__, var_args) {
            var self__ = this;
            var args = null;
            if(arguments.length > 1) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
            }
            return G__4874__delegate.call(this, self__, args)
          };
          G__4874.cljs$lang$maxFixedArity = 1;
          G__4874.cljs$lang$applyTo = function(arglist__4875) {
            var self__ = cljs.core.first(arglist__4875);
            var args = cljs.core.rest(arglist__4875);
            return G__4874__delegate(self__, args)
          };
          G__4874.cljs$core$IFn$_invoke$arity$variadic = G__4874__delegate;
          return G__4874
        }();
        cljs.core.t4870.prototype.apply = function(self__, args4873) {
          var self__ = this;
          return self__.call.apply(self__, [self__].concat(args4873.slice()))
        };
        cljs.core.t4870.prototype.cljs$core$Fn$ = true;
        cljs.core.t4870.prototype.cljs$core$IMeta$_meta$arity$1 = function(_4872) {
          var self__ = this;
          return self__.meta4871
        };
        cljs.core.t4870.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_4872, meta4871__$1) {
          var self__ = this;
          return new cljs.core.t4870(self__.meta, self__.o, self__.with_meta, meta4871__$1)
        };
        cljs.core.__GT_t4870 = function __GT_t4870(meta__$1, o__$1, with_meta__$1, meta4871) {
          return new cljs.core.t4870(meta__$1, o__$1, with_meta__$1, meta4871)
        }
      }
      return new cljs.core.t4870(meta, o, with_meta, null)
    }(), meta)
  }else {
    return cljs.core._with_meta.call(null, o, meta)
  }
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__4877 = o;
    if(G__4877) {
      if(function() {
        var or__3943__auto__ = G__4877.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__4877.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__4877.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__4877)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__4877)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__4878__delegate = function(coll, k, ks) {
      while(true) {
        var ret = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__4879 = ret;
          var G__4880 = cljs.core.first.call(null, ks);
          var G__4881 = cljs.core.next.call(null, ks);
          coll = G__4879;
          k = G__4880;
          ks = G__4881;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__4878 = function(coll, k, var_args) {
      var ks = null;
      if(arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__4878__delegate.call(this, coll, k, ks)
    };
    G__4878.cljs$lang$maxFixedArity = 2;
    G__4878.cljs$lang$applyTo = function(arglist__4882) {
      var coll = cljs.core.first(arglist__4882);
      arglist__4882 = cljs.core.next(arglist__4882);
      var k = cljs.core.first(arglist__4882);
      var ks = cljs.core.rest(arglist__4882);
      return G__4878__delegate(coll, k, ks)
    };
    G__4878.cljs$core$IFn$_invoke$arity$variadic = G__4878__delegate;
    return G__4878
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h = cljs.core.string_hash_cache[k];
  if(typeof h === "number") {
    return h
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3941__auto__ = goog.isString(o);
      if(and__3941__auto__) {
        return check_cache
      }else {
        return and__3941__auto__
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash.cljs$core$IFn$_invoke$arity$1 = hash__1;
  hash.cljs$core$IFn$_invoke$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  var or__3943__auto__ = coll == null;
  if(or__3943__auto__) {
    return or__3943__auto__
  }else {
    return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
  }
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__4884 = x;
    if(G__4884) {
      if(function() {
        var or__3943__auto__ = G__4884.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__4884.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__4884.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__4884)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__4884)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__4886 = x;
    if(G__4886) {
      if(function() {
        var or__3943__auto__ = G__4886.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__4886.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__4886.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__4886)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__4886)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__4888 = x;
  if(G__4888) {
    if(function() {
      var or__3943__auto__ = G__4888.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__4888.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__4888.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__4888)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__4888)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__4890 = x;
  if(G__4890) {
    if(function() {
      var or__3943__auto__ = G__4890.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__4890.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__4890.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__4890)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__4890)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__4892 = x;
  if(G__4892) {
    if(function() {
      var or__3943__auto__ = G__4892.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__4892.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__4892.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__4892)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__4892)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__4894 = x;
    if(G__4894) {
      if(function() {
        var or__3943__auto__ = G__4894.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__4894.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__4894.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__4894)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__4894)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__4896 = x;
  if(G__4896) {
    if(function() {
      var or__3943__auto__ = G__4896.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__4896.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__4896.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__4896)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__4896)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__4898 = x;
  if(G__4898) {
    if(function() {
      var or__3943__auto__ = G__4898.cljs$lang$protocol_mask$partition1$ & 512;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__4898.cljs$core$IChunkedSeq$
      }
    }()) {
      return true
    }else {
      return false
    }
  }else {
    return false
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__4899__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__4899 = function(var_args) {
      var keyvals = null;
      if(arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__4899__delegate.call(this, keyvals)
    };
    G__4899.cljs$lang$maxFixedArity = 0;
    G__4899.cljs$lang$applyTo = function(arglist__4900) {
      var keyvals = cljs.core.seq(arglist__4900);
      return G__4899__delegate(keyvals)
    };
    G__4899.cljs$core$IFn$_invoke$arity$variadic = G__4899__delegate;
    return G__4899
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(val, key, obj__$1) {
    return keys.push(key)
  });
  return keys
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while(true) {
    if(len__$1 === 0) {
      return to
    }else {
      to[j__$1] = from[i__$1];
      var G__4901 = i__$1 + 1;
      var G__4902 = j__$1 + 1;
      var G__4903 = len__$1 - 1;
      i__$1 = G__4901;
      j__$1 = G__4902;
      len__$1 = G__4903;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while(true) {
    if(len__$1 === 0) {
      return to
    }else {
      to[j__$1] = from[i__$1];
      var G__4904 = i__$1 - 1;
      var G__4905 = j__$1 - 1;
      var G__4906 = len__$1 - 1;
      i__$1 = G__4904;
      j__$1 = G__4905;
      len__$1 = G__4906;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__4908 = s;
    if(G__4908) {
      if(function() {
        var or__3943__auto__ = G__4908.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__4908.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__4908.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__4908)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__4908)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__4910 = s;
  if(G__4910) {
    if(function() {
      var or__3943__auto__ = G__4910.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__4910.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__4910.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__4910)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__4910)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3943__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if(or__3943__auto__) {
    return or__3943__auto__
  }else {
    var G__4912 = f;
    if(G__4912) {
      if(function() {
        var or__3943__auto____$1 = G__4912.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          return G__4912.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__4912.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__4912)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__4912)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3941__auto__ = typeof n === "number";
  if(and__3941__auto__) {
    var and__3941__auto____$1 = !isNaN(n);
    if(and__3941__auto____$1) {
      var and__3941__auto____$2 = !(n === Infinity);
      if(and__3941__auto____$2) {
        return parseFloat(n) === parseInt(n, 10)
      }else {
        return and__3941__auto____$2
      }
    }else {
      return and__3941__auto____$1
    }
  }else {
    return and__3941__auto__
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(function() {
    var and__3941__auto__ = !(coll == null);
    if(and__3941__auto__) {
      var and__3941__auto____$1 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3941__auto____$1) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3941__auto____$1
      }
    }else {
      return and__3941__auto__
    }
  }()) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core.get.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__4913__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([y, null, x, null], true);
        var xs = more;
        while(true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if(cljs.core.truth_(xs)) {
            if(cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false
            }else {
              var G__4914 = cljs.core.conj.call(null, s, x__$1);
              var G__4915 = etc;
              s = G__4914;
              xs = G__4915;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__4913 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__4913__delegate.call(this, x, y, more)
    };
    G__4913.cljs$lang$maxFixedArity = 2;
    G__4913.cljs$lang$applyTo = function(arglist__4916) {
      var x = cljs.core.first(arglist__4916);
      arglist__4916 = cljs.core.next(arglist__4916);
      var y = cljs.core.first(arglist__4916);
      var more = cljs.core.rest(arglist__4916);
      return G__4913__delegate(x, y, more)
    };
    G__4913.cljs$core$IFn$_invoke$arity$variadic = G__4913__delegate;
    return G__4913
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__4918 = x;
            if(G__4918) {
              if(function() {
                var or__3943__auto__ = G__4918.cljs$lang$protocol_mask$partition1$ & 2048;
                if(or__3943__auto__) {
                  return or__3943__auto__
                }else {
                  return G__4918.cljs$core$IComparable$
                }
              }()) {
                return true
              }else {
                return false
              }
            }else {
              return false
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if(xl < yl) {
      return-1
    }else {
      if(xl > yl) {
        return 1
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return compare_indexed.call(null, xs, ys, xl, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3941__auto__ = d === 0;
        if(and__3941__auto__) {
          return n + 1 < len
        }else {
          return and__3941__auto__
        }
      }()) {
        var G__4919 = xs;
        var G__4920 = ys;
        var G__4921 = len;
        var G__4922 = n + 1;
        xs = G__4919;
        ys = G__4920;
        len = G__4921;
        n = G__4922;
        continue
      }else {
        return d
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if(typeof r === "number") {
        return r
      }else {
        if(cljs.core.truth_(r)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4090__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4090__auto__) {
      var s = temp__4090__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__4923 = nval;
          var G__4924 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__4923;
          coll__$1 = G__4924;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__4927 = coll;
      if(G__4927) {
        if(function() {
          var or__3943__auto__ = G__4927.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__4927.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      if(coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f)
      }else {
        if(typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f)
        }else {
          if(cljs.core.type_satisfies_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__4928 = coll;
      if(G__4928) {
        if(function() {
          var or__3943__auto__ = G__4928.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__4928.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      if(coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val)
      }else {
        if(typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val)
        }else {
          if(cljs.core.type_satisfies_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, val, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__4929__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__4929 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__4929__delegate.call(this, x, y, more)
    };
    G__4929.cljs$lang$maxFixedArity = 2;
    G__4929.cljs$lang$applyTo = function(arglist__4930) {
      var x = cljs.core.first(arglist__4930);
      arglist__4930 = cljs.core.next(arglist__4930);
      var y = cljs.core.first(arglist__4930);
      var more = cljs.core.rest(arglist__4930);
      return G__4929__delegate(x, y, more)
    };
    G__4929.cljs$core$IFn$_invoke$arity$variadic = G__4929__delegate;
    return G__4929
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__4931__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__4931 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__4931__delegate.call(this, x, y, more)
    };
    G__4931.cljs$lang$maxFixedArity = 2;
    G__4931.cljs$lang$applyTo = function(arglist__4932) {
      var x = cljs.core.first(arglist__4932);
      arglist__4932 = cljs.core.next(arglist__4932);
      var y = cljs.core.first(arglist__4932);
      var more = cljs.core.rest(arglist__4932);
      return G__4931__delegate(x, y, more)
    };
    G__4931.cljs$core$IFn$_invoke$arity$variadic = G__4931__delegate;
    return G__4931
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__4933__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__4933 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__4933__delegate.call(this, x, y, more)
    };
    G__4933.cljs$lang$maxFixedArity = 2;
    G__4933.cljs$lang$applyTo = function(arglist__4934) {
      var x = cljs.core.first(arglist__4934);
      arglist__4934 = cljs.core.next(arglist__4934);
      var y = cljs.core.first(arglist__4934);
      var more = cljs.core.rest(arglist__4934);
      return G__4933__delegate(x, y, more)
    };
    G__4933.cljs$core$IFn$_invoke$arity$variadic = G__4933__delegate;
    return G__4933
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__4935__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__4935 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__4935__delegate.call(this, x, y, more)
    };
    G__4935.cljs$lang$maxFixedArity = 2;
    G__4935.cljs$lang$applyTo = function(arglist__4936) {
      var x = cljs.core.first(arglist__4936);
      arglist__4936 = cljs.core.next(arglist__4936);
      var y = cljs.core.first(arglist__4936);
      var more = cljs.core.rest(arglist__4936);
      return G__4935__delegate(x, y, more)
    };
    G__4935.cljs$core$IFn$_invoke$arity$variadic = G__4935__delegate;
    return G__4935
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__4937__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__4938 = y;
            var G__4939 = cljs.core.first.call(null, more);
            var G__4940 = cljs.core.next.call(null, more);
            x = G__4938;
            y = G__4939;
            more = G__4940;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__4937 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__4937__delegate.call(this, x, y, more)
    };
    G__4937.cljs$lang$maxFixedArity = 2;
    G__4937.cljs$lang$applyTo = function(arglist__4941) {
      var x = cljs.core.first(arglist__4941);
      arglist__4941 = cljs.core.next(arglist__4941);
      var y = cljs.core.first(arglist__4941);
      var more = cljs.core.rest(arglist__4941);
      return G__4937__delegate(x, y, more)
    };
    G__4937.cljs$core$IFn$_invoke$arity$variadic = G__4937__delegate;
    return G__4937
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__4942__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__4943 = y;
            var G__4944 = cljs.core.first.call(null, more);
            var G__4945 = cljs.core.next.call(null, more);
            x = G__4943;
            y = G__4944;
            more = G__4945;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__4942 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__4942__delegate.call(this, x, y, more)
    };
    G__4942.cljs$lang$maxFixedArity = 2;
    G__4942.cljs$lang$applyTo = function(arglist__4946) {
      var x = cljs.core.first(arglist__4946);
      arglist__4946 = cljs.core.next(arglist__4946);
      var y = cljs.core.first(arglist__4946);
      var more = cljs.core.rest(arglist__4946);
      return G__4942__delegate(x, y, more)
    };
    G__4942.cljs$core$IFn$_invoke$arity$variadic = G__4942__delegate;
    return G__4942
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__4947__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__4948 = y;
            var G__4949 = cljs.core.first.call(null, more);
            var G__4950 = cljs.core.next.call(null, more);
            x = G__4948;
            y = G__4949;
            more = G__4950;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__4947 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__4947__delegate.call(this, x, y, more)
    };
    G__4947.cljs$lang$maxFixedArity = 2;
    G__4947.cljs$lang$applyTo = function(arglist__4951) {
      var x = cljs.core.first(arglist__4951);
      arglist__4951 = cljs.core.next(arglist__4951);
      var y = cljs.core.first(arglist__4951);
      var more = cljs.core.rest(arglist__4951);
      return G__4947__delegate(x, y, more)
    };
    G__4947.cljs$core$IFn$_invoke$arity$variadic = G__4947__delegate;
    return G__4947
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__4952__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__4953 = y;
            var G__4954 = cljs.core.first.call(null, more);
            var G__4955 = cljs.core.next.call(null, more);
            x = G__4953;
            y = G__4954;
            more = G__4955;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__4952 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__4952__delegate.call(this, x, y, more)
    };
    G__4952.cljs$lang$maxFixedArity = 2;
    G__4952.cljs$lang$applyTo = function(arglist__4956) {
      var x = cljs.core.first(arglist__4956);
      arglist__4956 = cljs.core.next(arglist__4956);
      var y = cljs.core.first(arglist__4956);
      var more = cljs.core.rest(arglist__4956);
      return G__4952__delegate(x, y, more)
    };
    G__4952.cljs$core$IFn$_invoke$arity$variadic = G__4952__delegate;
    return G__4952
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    var x__3265__auto__ = x;
    var y__3266__auto__ = y;
    return x__3265__auto__ > y__3266__auto__ ? x__3265__auto__ : y__3266__auto__
  };
  var max__3 = function() {
    var G__4957__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3265__auto__ = x;
        var y__3266__auto__ = y;
        return x__3265__auto__ > y__3266__auto__ ? x__3265__auto__ : y__3266__auto__
      }(), more)
    };
    var G__4957 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__4957__delegate.call(this, x, y, more)
    };
    G__4957.cljs$lang$maxFixedArity = 2;
    G__4957.cljs$lang$applyTo = function(arglist__4958) {
      var x = cljs.core.first(arglist__4958);
      arglist__4958 = cljs.core.next(arglist__4958);
      var y = cljs.core.first(arglist__4958);
      var more = cljs.core.rest(arglist__4958);
      return G__4957__delegate(x, y, more)
    };
    G__4957.cljs$core$IFn$_invoke$arity$variadic = G__4957__delegate;
    return G__4957
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    var x__3272__auto__ = x;
    var y__3273__auto__ = y;
    return x__3272__auto__ < y__3273__auto__ ? x__3272__auto__ : y__3273__auto__
  };
  var min__3 = function() {
    var G__4959__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3272__auto__ = x;
        var y__3273__auto__ = y;
        return x__3272__auto__ < y__3273__auto__ ? x__3272__auto__ : y__3273__auto__
      }(), more)
    };
    var G__4959 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__4959__delegate.call(this, x, y, more)
    };
    G__4959.cljs$lang$maxFixedArity = 2;
    G__4959.cljs$lang$applyTo = function(arglist__4960) {
      var x = cljs.core.first(arglist__4960);
      arglist__4960 = cljs.core.next(arglist__4960);
      var y = cljs.core.first(arglist__4960);
      var more = cljs.core.rest(arglist__4960);
      return G__4959__delegate(x, y, more)
    };
    G__4959.cljs$core$IFn$_invoke$arity$variadic = G__4959__delegate;
    return G__4959
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min
}();
cljs.core.byte$ = function byte$(x) {
  return x
};
cljs.core.char$ = function char$(x) {
  if(typeof x === "number") {
    return String.fromCharCode(x)
  }else {
    if(function() {
      var and__3941__auto__ = typeof x === "string";
      if(and__3941__auto__) {
        return x.length === 1
      }else {
        return and__3941__auto__
      }
    }()) {
      return x
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error("Argument to char must be a character or number");
      }else {
        return null
      }
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x
};
cljs.core.float$ = function float$(x) {
  return x
};
cljs.core.double$ = function double$(x) {
  return x
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0
  };
  var unchecked_add__1 = function(x) {
    return x
  };
  var unchecked_add__2 = function(x, y) {
    return x + y
  };
  var unchecked_add__3 = function() {
    var G__4961__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more)
    };
    var G__4961 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__4961__delegate.call(this, x, y, more)
    };
    G__4961.cljs$lang$maxFixedArity = 2;
    G__4961.cljs$lang$applyTo = function(arglist__4962) {
      var x = cljs.core.first(arglist__4962);
      arglist__4962 = cljs.core.next(arglist__4962);
      var y = cljs.core.first(arglist__4962);
      var more = cljs.core.rest(arglist__4962);
      return G__4961__delegate(x, y, more)
    };
    G__4961.cljs$core$IFn$_invoke$arity$variadic = G__4961__delegate;
    return G__4961
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0
  };
  var unchecked_add_int__1 = function(x) {
    return x
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y
  };
  var unchecked_add_int__3 = function() {
    var G__4963__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more)
    };
    var G__4963 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__4963__delegate.call(this, x, y, more)
    };
    G__4963.cljs$lang$maxFixedArity = 2;
    G__4963.cljs$lang$applyTo = function(arglist__4964) {
      var x = cljs.core.first(arglist__4964);
      arglist__4964 = cljs.core.next(arglist__4964);
      var y = cljs.core.first(arglist__4964);
      var more = cljs.core.rest(arglist__4964);
      return G__4963__delegate(x, y, more)
    };
    G__4963.cljs$core$IFn$_invoke$arity$variadic = G__4963__delegate;
    return G__4963
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x)
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y
  };
  var unchecked_divide_int__3 = function() {
    var G__4965__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more)
    };
    var G__4965 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__4965__delegate.call(this, x, y, more)
    };
    G__4965.cljs$lang$maxFixedArity = 2;
    G__4965.cljs$lang$applyTo = function(arglist__4966) {
      var x = cljs.core.first(arglist__4966);
      arglist__4966 = cljs.core.next(arglist__4966);
      var y = cljs.core.first(arglist__4966);
      var more = cljs.core.rest(arglist__4966);
      return G__4965__delegate(x, y, more)
    };
    G__4965.cljs$core$IFn$_invoke$arity$variadic = G__4965__delegate;
    return G__4965
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1
  };
  var unchecked_multiply__1 = function(x) {
    return x
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y
  };
  var unchecked_multiply__3 = function() {
    var G__4967__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more)
    };
    var G__4967 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__4967__delegate.call(this, x, y, more)
    };
    G__4967.cljs$lang$maxFixedArity = 2;
    G__4967.cljs$lang$applyTo = function(arglist__4968) {
      var x = cljs.core.first(arglist__4968);
      arglist__4968 = cljs.core.next(arglist__4968);
      var y = cljs.core.first(arglist__4968);
      var more = cljs.core.rest(arglist__4968);
      return G__4967__delegate(x, y, more)
    };
    G__4967.cljs$core$IFn$_invoke$arity$variadic = G__4967__delegate;
    return G__4967
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1
  };
  var unchecked_multiply_int__1 = function(x) {
    return x
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y
  };
  var unchecked_multiply_int__3 = function() {
    var G__4969__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more)
    };
    var G__4969 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__4969__delegate.call(this, x, y, more)
    };
    G__4969.cljs$lang$maxFixedArity = 2;
    G__4969.cljs$lang$applyTo = function(arglist__4970) {
      var x = cljs.core.first(arglist__4970);
      arglist__4970 = cljs.core.next(arglist__4970);
      var y = cljs.core.first(arglist__4970);
      var more = cljs.core.rest(arglist__4970);
      return G__4969__delegate(x, y, more)
    };
    G__4969.cljs$core$IFn$_invoke$arity$variadic = G__4969__delegate;
    return G__4969
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n)
};
cljs.core.unchecked_substract = function() {
  var unchecked_substract = null;
  var unchecked_substract__1 = function(x) {
    return-x
  };
  var unchecked_substract__2 = function(x, y) {
    return x - y
  };
  var unchecked_substract__3 = function() {
    var G__4971__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract, x - y, more)
    };
    var G__4971 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__4971__delegate.call(this, x, y, more)
    };
    G__4971.cljs$lang$maxFixedArity = 2;
    G__4971.cljs$lang$applyTo = function(arglist__4972) {
      var x = cljs.core.first(arglist__4972);
      arglist__4972 = cljs.core.next(arglist__4972);
      var y = cljs.core.first(arglist__4972);
      var more = cljs.core.rest(arglist__4972);
      return G__4971__delegate(x, y, more)
    };
    G__4971.cljs$core$IFn$_invoke$arity$variadic = G__4971__delegate;
    return G__4971
  }();
  unchecked_substract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract__1.call(this, x);
      case 2:
        return unchecked_substract__2.call(this, x, y);
      default:
        return unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract.cljs$lang$maxFixedArity = 2;
  unchecked_substract.cljs$lang$applyTo = unchecked_substract__3.cljs$lang$applyTo;
  unchecked_substract.cljs$core$IFn$_invoke$arity$1 = unchecked_substract__1;
  unchecked_substract.cljs$core$IFn$_invoke$arity$2 = unchecked_substract__2;
  unchecked_substract.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract
}();
cljs.core.unchecked_substract_int = function() {
  var unchecked_substract_int = null;
  var unchecked_substract_int__1 = function(x) {
    return-x
  };
  var unchecked_substract_int__2 = function(x, y) {
    return x - y
  };
  var unchecked_substract_int__3 = function() {
    var G__4973__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract_int, x - y, more)
    };
    var G__4973 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__4973__delegate.call(this, x, y, more)
    };
    G__4973.cljs$lang$maxFixedArity = 2;
    G__4973.cljs$lang$applyTo = function(arglist__4974) {
      var x = cljs.core.first(arglist__4974);
      arglist__4974 = cljs.core.next(arglist__4974);
      var y = cljs.core.first(arglist__4974);
      var more = cljs.core.rest(arglist__4974);
      return G__4973__delegate(x, y, more)
    };
    G__4973.cljs$core$IFn$_invoke$arity$variadic = G__4973__delegate;
    return G__4973
  }();
  unchecked_substract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract_int__1.call(this, x);
      case 2:
        return unchecked_substract_int__2.call(this, x, y);
      default:
        return unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract_int.cljs$lang$maxFixedArity = 2;
  unchecked_substract_int.cljs$lang$applyTo = unchecked_substract_int__3.cljs$lang$applyTo;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_substract_int__1;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_substract_int__2;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract_int
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.booleans = function booleans(x) {
  return x
};
cljs.core.bytes = function bytes(x) {
  return x
};
cljs.core.chars = function chars(x) {
  return x
};
cljs.core.shorts = function shorts(x) {
  return x
};
cljs.core.ints = function ints(x) {
  return x
};
cljs.core.floats = function floats(x) {
  return x
};
cljs.core.doubles = function doubles(x) {
  return x
};
cljs.core.longs = function longs(x) {
  return x
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d)
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__4975__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__4976 = y;
            var G__4977 = cljs.core.first.call(null, more);
            var G__4978 = cljs.core.next.call(null, more);
            x = G__4976;
            y = G__4977;
            more = G__4978;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__4975 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__4975__delegate.call(this, x, y, more)
    };
    G__4975.cljs$lang$maxFixedArity = 2;
    G__4975.cljs$lang$applyTo = function(arglist__4979) {
      var x = cljs.core.first(arglist__4979);
      arglist__4979 = cljs.core.next(arglist__4979);
      var y = cljs.core.first(arglist__4979);
      var more = cljs.core.rest(arglist__4979);
      return G__4975__delegate(x, y, more)
    };
    G__4975.cljs$core$IFn$_invoke$arity$variadic = G__4975__delegate;
    return G__4975
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3941__auto__ = xs;
      if(and__3941__auto__) {
        return n__$1 > 0
      }else {
        return and__3941__auto__
      }
    }())) {
      var G__4980 = n__$1 - 1;
      var G__4981 = cljs.core.next.call(null, xs);
      n__$1 = G__4980;
      xs = G__4981;
      continue
    }else {
      return xs
    }
    break
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(x == null) {
      return""
    }else {
      return x.toString()
    }
  };
  var str__2 = function() {
    var G__4982__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__4983 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__4984 = cljs.core.next.call(null, more);
            sb = G__4983;
            more = G__4984;
            continue
          }else {
            return sb.toString()
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__4982 = function(x, var_args) {
      var ys = null;
      if(arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__4982__delegate.call(this, x, ys)
    };
    G__4982.cljs$lang$maxFixedArity = 1;
    G__4982.cljs$lang$applyTo = function(arglist__4985) {
      var x = cljs.core.first(arglist__4985);
      var ys = cljs.core.rest(arglist__4985);
      return G__4982__delegate(x, ys)
    };
    G__4982.cljs$core$IFn$_invoke$arity$variadic = G__4982__delegate;
    return G__4982
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while(true) {
      if(xs == null) {
        return ys == null
      }else {
        if(ys == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__4986 = cljs.core.next.call(null, xs);
            var G__4987 = cljs.core.next.call(null, ys);
            xs = G__4986;
            ys = G__4987;
            continue
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__4988_SHARP_, p2__4989_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__4988_SHARP_, cljs.core.hash.call(null, p2__4989_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while(true) {
    if(s) {
      var e = cljs.core.first.call(null, s);
      var G__4990 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__4991 = cljs.core.next.call(null, s);
      h = G__4990;
      s = G__4991;
      continue
    }else {
      return h
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__4992 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__4993 = cljs.core.next.call(null, s__$1);
      h = G__4992;
      s__$1 = G__4993;
      continue
    }else {
      return h
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__5000_5006 = cljs.core.seq.call(null, fn_map);
  var chunk__5001_5007 = null;
  var count__5002_5008 = 0;
  var i__5003_5009 = 0;
  while(true) {
    if(i__5003_5009 < count__5002_5008) {
      var vec__5004_5010 = cljs.core._nth.call(null, chunk__5001_5007, i__5003_5009);
      var key_name_5011 = cljs.core.nth.call(null, vec__5004_5010, 0, null);
      var f_5012 = cljs.core.nth.call(null, vec__5004_5010, 1, null);
      var str_name_5013 = cljs.core.name.call(null, key_name_5011);
      obj[str_name_5013] = f_5012;
      var G__5014 = seq__5000_5006;
      var G__5015 = chunk__5001_5007;
      var G__5016 = count__5002_5008;
      var G__5017 = i__5003_5009 + 1;
      seq__5000_5006 = G__5014;
      chunk__5001_5007 = G__5015;
      count__5002_5008 = G__5016;
      i__5003_5009 = G__5017;
      continue
    }else {
      var temp__4092__auto___5018 = cljs.core.seq.call(null, seq__5000_5006);
      if(temp__4092__auto___5018) {
        var seq__5000_5019__$1 = temp__4092__auto___5018;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__5000_5019__$1)) {
          var c__3674__auto___5020 = cljs.core.chunk_first.call(null, seq__5000_5019__$1);
          var G__5021 = cljs.core.chunk_rest.call(null, seq__5000_5019__$1);
          var G__5022 = c__3674__auto___5020;
          var G__5023 = cljs.core.count.call(null, c__3674__auto___5020);
          var G__5024 = 0;
          seq__5000_5006 = G__5021;
          chunk__5001_5007 = G__5022;
          count__5002_5008 = G__5023;
          i__5003_5009 = G__5024;
          continue
        }else {
          var vec__5005_5025 = cljs.core.first.call(null, seq__5000_5019__$1);
          var key_name_5026 = cljs.core.nth.call(null, vec__5005_5025, 0, null);
          var f_5027 = cljs.core.nth.call(null, vec__5005_5025, 1, null);
          var str_name_5028 = cljs.core.name.call(null, key_name_5026);
          obj[str_name_5028] = f_5027;
          var G__5029 = cljs.core.next.call(null, seq__5000_5019__$1);
          var G__5030 = null;
          var G__5031 = 0;
          var G__5032 = 0;
          seq__5000_5006 = G__5029;
          chunk__5001_5007 = G__5030;
          count__5002_5008 = G__5031;
          i__5003_5009 = G__5032;
          continue
        }
      }else {
      }
    }
    break
  }
  return obj
};
goog.provide("cljs.core.List");
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65937646
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3364__auto__ = self__.__hash;
  if(!(h__3364__auto__ == null)) {
    return h__3364__auto__
  }else {
    var h__3364__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3364__auto____$1;
    return h__3364__auto____$1
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.count === 1) {
    return null
  }else {
    return self__.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.List(self__.meta, o, coll, self__.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  return self__.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return self__.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return self__.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.List.EMPTY
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash)
};
goog.provide("cljs.core.EmptyList");
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65937614
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.List(self__.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.EmptyList(meta__$1)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta)
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__5034 = coll;
  if(G__5034) {
    if(function() {
      var or__3943__auto__ = G__5034.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__5034.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__5034.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__5034)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__5034)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while(true) {
        if(!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__5035 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__5035;
          continue
        }else {
          return arr
        }
        break
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while(true) {
      if(i > 0) {
        var G__5036 = i - 1;
        var G__5037 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__5036;
        r = G__5037;
        continue
      }else {
        return r
      }
      break
    }
  };
  var list = function(var_args) {
    var xs = null;
    if(arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return list__delegate.call(this, xs)
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__5038) {
    var xs = cljs.core.seq(arglist__5038);
    return list__delegate(xs)
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list
}();
goog.provide("cljs.core.Cons");
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65929452
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3364__auto__ = self__.__hash;
  if(!(h__3364__auto__ == null)) {
    return h__3364__auto__
  }else {
    var h__3364__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3364__auto____$1;
    return h__3364__auto____$1
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.rest == null) {
    return null
  }else {
    return cljs.core.seq.call(null, self__.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.Cons(null, o, coll, self__.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return self__.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return self__.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash)
};
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3943__auto__ = coll == null;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      var G__5040 = coll;
      if(G__5040) {
        if(function() {
          var or__3943__auto____$1 = G__5040.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            return G__5040.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__5042 = x;
  if(G__5042) {
    if(function() {
      var or__3943__auto__ = G__5042.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__5042.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__5042.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__5042)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__5042)
  }
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
goog.provide("cljs.core.Keyword");
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  return cljs.core._write.call(null, writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""))
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  return self__.name
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  return self__.ns
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  if(self__._hash == null) {
    self__._hash = cljs.core.hash_combine.call(null, cljs.core.hash.call(null, self__.ns), cljs.core.hash.call(null, self__.name)) + 2654435769;
    return self__._hash
  }else {
    return self__._hash
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__5046 = null;
  var G__5046__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__5044 = coll;
        if(G__5044) {
          if(function() {
            var or__3943__auto__ = G__5044.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__5044.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            if(!G__5044.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__5044)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__5044)
        }
      }()) {
        return cljs.core._lookup.call(null, coll, kw, null)
      }else {
        return null
      }
    }
  };
  var G__5046__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    if(coll == null) {
      return not_found
    }else {
      if(function() {
        var G__5045 = coll;
        if(G__5045) {
          if(function() {
            var or__3943__auto__ = G__5045.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__5045.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            if(!G__5045.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__5045)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__5045)
        }
      }()) {
        return cljs.core._lookup.call(null, coll, kw, not_found)
      }else {
        return not_found
      }
    }
  };
  G__5046 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5046__2.call(this, self__, coll);
      case 3:
        return G__5046__3.call(this, self__, coll, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__5046
}();
cljs.core.Keyword.prototype.apply = function(self__, args5043) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args5043.slice()))
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  if(other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn
  }else {
    return false
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("")
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash)
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if(x === y) {
    return true
  }else {
    if(function() {
      var and__3941__auto__ = x instanceof cljs.core.Keyword;
      if(and__3941__auto__) {
        return y instanceof cljs.core.Keyword
      }else {
        return and__3941__auto__
      }
    }()) {
      return x.fqn === y.fqn
    }else {
      return false
    }
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(name instanceof cljs.core.Keyword) {
      return name
    }else {
      if(name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(null, cljs.core.name.call(null, name), cljs.core.name.call(null, name), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.Keyword(null, name, name, null)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null)
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword
}();
goog.provide("cljs.core.LazySeq");
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3364__auto__ = self__.__hash;
  if(!(h__3364__auto__ == null)) {
    return h__3364__auto__
  }else {
    var h__3364__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3364__auto____$1;
    return h__3364__auto____$1
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  coll.cljs$core$ISeqable$_seq$arity$1(coll);
  if(self__.s == null) {
    return null
  }else {
    return cljs.core.next.call(null, self__.s)
  }
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if(self__.fn == null) {
    return self__.s
  }else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s
  }
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  coll.sval();
  if(self__.s == null) {
    return null
  }else {
    var ls = self__.s;
    while(true) {
      if(ls instanceof cljs.core.LazySeq) {
        var G__5047 = ls.sval();
        ls = G__5047;
        continue
      }else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s)
      }
      break
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  coll.cljs$core$ISeqable$_seq$arity$1(coll);
  if(self__.s == null) {
    return null
  }else {
    return cljs.core.first.call(null, self__.s)
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  coll.cljs$core$ISeqable$_seq$arity$1(coll);
  if(!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash)
};
goog.provide("cljs.core.ChunkBuffer");
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  return self__.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end)
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0)
};
goog.provide("cljs.core.ArrayChunk");
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  if(self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  return self__.arr[self__.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = i >= 0;
    if(and__3941__auto__) {
      return i < self__.end - self__.off
    }else {
      return and__3941__auto__
    }
  }()) {
    return self__.arr[self__.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  return self__.end - self__.off
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end)
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk
}();
goog.provide("cljs.core.ChunkedCons");
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3364__auto__ = self__.__hash;
  if(!(h__3364__auto__ == null)) {
    return h__3364__auto__
  }else {
    var h__3364__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3364__auto____$1;
    return h__3364__auto____$1
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null)
  }else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if(more__$1 == null) {
      return null
    }else {
      return more__$1
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._nth.call(null, self__.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null)
  }else {
    if(self__.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return self__.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.more == null) {
    return null
  }else {
    return self__.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  return self__.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return self__.more
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash)
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__5049 = s;
    if(G__5049) {
      if(function() {
        var or__3943__auto__ = G__5049.cljs$lang$protocol_mask$partition1$ & 1024;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__5049.cljs$core$IChunkedNext$
        }
      }()) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__5050 = cljs.core.next.call(null, s__$1);
      s__$1 = G__5050;
      continue
    }else {
      return ary
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_5051 = 0;
  var xs_5052 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs_5052) {
      ret[i_5051] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_5052));
      var G__5053 = i_5051 + 1;
      var G__5054 = cljs.core.next.call(null, xs_5052);
      i_5051 = G__5053;
      xs_5052 = G__5054;
      continue
    }else {
    }
    break
  }
  return ret
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = s__$1;
          if(and__3941__auto__) {
            return i < size
          }else {
            return and__3941__auto__
          }
        }())) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__5055 = i + 1;
          var G__5056 = cljs.core.next.call(null, s__$1);
          i = G__5055;
          s__$1 = G__5056;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3721__auto___5057 = size;
      var i_5058 = 0;
      while(true) {
        if(i_5058 < n__3721__auto___5057) {
          a[i_5058] = init_val_or_seq;
          var G__5059 = i_5058 + 1;
          i_5058 = G__5059;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = s__$1;
          if(and__3941__auto__) {
            return i < size
          }else {
            return and__3941__auto__
          }
        }())) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__5060 = i + 1;
          var G__5061 = cljs.core.next.call(null, s__$1);
          i = G__5060;
          s__$1 = G__5061;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3721__auto___5062 = size;
      var i_5063 = 0;
      while(true) {
        if(i_5063 < n__3721__auto___5062) {
          a[i_5063] = init_val_or_seq;
          var G__5064 = i_5063 + 1;
          i_5063 = G__5064;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = s__$1;
          if(and__3941__auto__) {
            return i < size
          }else {
            return and__3941__auto__
          }
        }())) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__5065 = i + 1;
          var G__5066 = cljs.core.next.call(null, s__$1);
          i = G__5065;
          s__$1 = G__5066;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3721__auto___5067 = size;
      var i_5068 = 0;
      while(true) {
        if(i_5068 < n__3721__auto___5067) {
          a[i_5068] = init_val_or_seq;
          var G__5069 = i_5068 + 1;
          i_5068 = G__5069;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = s__$1;
          if(and__3941__auto__) {
            return i < size
          }else {
            return and__3941__auto__
          }
        }())) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__5070 = i + 1;
          var G__5071 = cljs.core.next.call(null, s__$1);
          i = G__5070;
          s__$1 = G__5071;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3721__auto___5072 = size;
      var i_5073 = 0;
      while(true) {
        if(i_5073 < n__3721__auto___5072) {
          a[i_5073] = init_val_or_seq;
          var G__5074 = i_5073 + 1;
          i_5073 = G__5074;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = i > 0;
        if(and__3941__auto__) {
          return cljs.core.seq.call(null, s__$1)
        }else {
          return and__3941__auto__
        }
      }())) {
        var G__5075 = cljs.core.next.call(null, s__$1);
        var G__5076 = i - 1;
        var G__5077 = sum + 1;
        s__$1 = G__5075;
        i = G__5076;
        sum = G__5077;
        continue
      }else {
        return sum
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null
    }, null, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x
    }, null, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if(s) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y))
        }
      }else {
        return y
      }
    }, null, null)
  };
  var concat__3 = function() {
    var G__5078__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if(xys__$1) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1))
            }
          }else {
            if(cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1))
            }else {
              return null
            }
          }
        }, null, null)
      };
      return cat.call(null, concat.call(null, x, y), zs)
    };
    var G__5078 = function(x, y, var_args) {
      var zs = null;
      if(arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__5078__delegate.call(this, x, y, zs)
    };
    G__5078.cljs$lang$maxFixedArity = 2;
    G__5078.cljs$lang$applyTo = function(arglist__5079) {
      var x = cljs.core.first(arglist__5079);
      arglist__5079 = cljs.core.next(arglist__5079);
      var y = cljs.core.first(arglist__5079);
      var zs = cljs.core.rest(arglist__5079);
      return G__5078__delegate(x, y, zs)
    };
    G__5078.cljs$core$IFn$_invoke$arity$variadic = G__5078__delegate;
    return G__5078
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__5080__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__5080 = function(a, b, c, d, var_args) {
      var more = null;
      if(arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__5080__delegate.call(this, a, b, c, d, more)
    };
    G__5080.cljs$lang$maxFixedArity = 4;
    G__5080.cljs$lang$applyTo = function(arglist__5081) {
      var a = cljs.core.first(arglist__5081);
      arglist__5081 = cljs.core.next(arglist__5081);
      var b = cljs.core.first(arglist__5081);
      arglist__5081 = cljs.core.next(arglist__5081);
      var c = cljs.core.first(arglist__5081);
      arglist__5081 = cljs.core.next(arglist__5081);
      var d = cljs.core.first(arglist__5081);
      var more = cljs.core.rest(arglist__5081);
      return G__5080__delegate(a, b, c, d, more)
    };
    G__5080.cljs$core$IFn$_invoke$arity$variadic = G__5080__delegate;
    return G__5080
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if(argc === 1) {
      if(f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a)
      }else {
        return f.call(null, a)
      }
    }else {
      var b = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if(argc === 2) {
        if(f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a, b)
        }else {
          return f.call(null, a, b)
        }
      }else {
        var c = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if(argc === 3) {
          if(f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a, b, c)
          }else {
            return f.call(null, a, b, c)
          }
        }else {
          var d = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if(argc === 4) {
            if(f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a, b, c, d)
            }else {
              return f.call(null, a, b, c, d)
            }
          }else {
            var e = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if(argc === 5) {
              if(f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e)
              }else {
                return f.call(null, a, b, c, d, e)
              }
            }else {
              var f__$1 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if(argc === 6) {
                if(f__$1.cljs$core$IFn$_invoke$arity$6) {
                  return f__$1.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f__$1)
                }else {
                  return f__$1.call(null, a, b, c, d, e, f__$1)
                }
              }else {
                var g = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if(argc === 7) {
                  if(f__$1.cljs$core$IFn$_invoke$arity$7) {
                    return f__$1.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f__$1, g)
                  }else {
                    return f__$1.call(null, a, b, c, d, e, f__$1, g)
                  }
                }else {
                  var h = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if(argc === 8) {
                    if(f__$1.cljs$core$IFn$_invoke$arity$8) {
                      return f__$1.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f__$1, g, h)
                    }else {
                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h)
                    }
                  }else {
                    var i = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if(argc === 9) {
                      if(f__$1.cljs$core$IFn$_invoke$arity$9) {
                        return f__$1.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f__$1, g, h, i)
                      }else {
                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i)
                      }
                    }else {
                      var j = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if(argc === 10) {
                        if(f__$1.cljs$core$IFn$_invoke$arity$10) {
                          return f__$1.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f__$1, g, h, i, j)
                        }else {
                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j)
                        }
                      }else {
                        var k = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if(argc === 11) {
                          if(f__$1.cljs$core$IFn$_invoke$arity$11) {
                            return f__$1.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f__$1, g, h, i, j, k)
                          }else {
                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k)
                          }
                        }else {
                          var l = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if(argc === 12) {
                            if(f__$1.cljs$core$IFn$_invoke$arity$12) {
                              return f__$1.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f__$1, g, h, i, j, k, l)
                            }else {
                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l)
                            }
                          }else {
                            var m = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if(argc === 13) {
                              if(f__$1.cljs$core$IFn$_invoke$arity$13) {
                                return f__$1.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f__$1, g, h, i, j, k, l, m)
                              }else {
                                return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m)
                              }
                            }else {
                              var n = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if(argc === 14) {
                                if(f__$1.cljs$core$IFn$_invoke$arity$14) {
                                  return f__$1.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n)
                                }else {
                                  return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n)
                                }
                              }else {
                                var o = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if(argc === 15) {
                                  if(f__$1.cljs$core$IFn$_invoke$arity$15) {
                                    return f__$1.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o)
                                  }else {
                                    return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o)
                                  }
                                }else {
                                  var p = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if(argc === 16) {
                                    if(f__$1.cljs$core$IFn$_invoke$arity$16) {
                                      return f__$1.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p)
                                    }else {
                                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p)
                                    }
                                  }else {
                                    var q = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if(argc === 17) {
                                      if(f__$1.cljs$core$IFn$_invoke$arity$17) {
                                        return f__$1.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q)
                                      }else {
                                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q)
                                      }
                                    }else {
                                      var r = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if(argc === 18) {
                                        if(f__$1.cljs$core$IFn$_invoke$arity$18) {
                                          return f__$1.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r)
                                        }else {
                                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r)
                                        }
                                      }else {
                                        var s = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if(argc === 19) {
                                          if(f__$1.cljs$core$IFn$_invoke$arity$19) {
                                            return f__$1.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s)
                                          }else {
                                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s)
                                          }
                                        }else {
                                          var t = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if(argc === 20) {
                                            if(f__$1.cljs$core$IFn$_invoke$arity$20) {
                                              return f__$1.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t)
                                            }else {
                                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__6 = function() {
    var G__5082__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if(f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if(bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist)
        }else {
          return f.cljs$lang$applyTo(arglist)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist))
      }
    };
    var G__5082 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__5082__delegate.call(this, f, a, b, c, d, args)
    };
    G__5082.cljs$lang$maxFixedArity = 5;
    G__5082.cljs$lang$applyTo = function(arglist__5083) {
      var f = cljs.core.first(arglist__5083);
      arglist__5083 = cljs.core.next(arglist__5083);
      var a = cljs.core.first(arglist__5083);
      arglist__5083 = cljs.core.next(arglist__5083);
      var b = cljs.core.first(arglist__5083);
      arglist__5083 = cljs.core.next(arglist__5083);
      var c = cljs.core.first(arglist__5083);
      arglist__5083 = cljs.core.next(arglist__5083);
      var d = cljs.core.first(arglist__5083);
      var args = cljs.core.rest(arglist__5083);
      return G__5082__delegate(f, a, b, c, d, args)
    };
    G__5082.cljs$core$IFn$_invoke$arity$variadic = G__5082__delegate;
    return G__5082
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__5084) {
    var obj = cljs.core.first(arglist__5084);
    arglist__5084 = cljs.core.next(arglist__5084);
    var f = cljs.core.first(arglist__5084);
    var args = cljs.core.rest(arglist__5084);
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__5085__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__5085 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__5085__delegate.call(this, x, y, more)
    };
    G__5085.cljs$lang$maxFixedArity = 2;
    G__5085.cljs$lang$applyTo = function(arglist__5086) {
      var x = cljs.core.first(arglist__5086);
      arglist__5086 = cljs.core.next(arglist__5086);
      var y = cljs.core.first(arglist__5086);
      var more = cljs.core.rest(arglist__5086);
      return G__5085__delegate(x, y, more)
    };
    G__5085.cljs$core$IFn$_invoke$arity$variadic = G__5085__delegate;
    return G__5085
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__5087 = pred;
        var G__5088 = cljs.core.next.call(null, coll);
        pred = G__5087;
        coll = G__5088;
        continue
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3943__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        var G__5089 = pred;
        var G__5090 = cljs.core.next.call(null, coll);
        pred = G__5089;
        coll = G__5090;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__5091 = null;
    var G__5091__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__5091__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__5091__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__5091__3 = function() {
      var G__5092__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__5092 = function(x, y, var_args) {
        var zs = null;
        if(arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__5092__delegate.call(this, x, y, zs)
      };
      G__5092.cljs$lang$maxFixedArity = 2;
      G__5092.cljs$lang$applyTo = function(arglist__5093) {
        var x = cljs.core.first(arglist__5093);
        arglist__5093 = cljs.core.next(arglist__5093);
        var y = cljs.core.first(arglist__5093);
        var zs = cljs.core.rest(arglist__5093);
        return G__5092__delegate(x, y, zs)
      };
      G__5092.cljs$core$IFn$_invoke$arity$variadic = G__5092__delegate;
      return G__5092
    }();
    G__5091 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__5091__0.call(this);
        case 1:
          return G__5091__1.call(this, x);
        case 2:
          return G__5091__2.call(this, x, y);
        default:
          return G__5091__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__5091.cljs$lang$maxFixedArity = 2;
    G__5091.cljs$lang$applyTo = G__5091__3.cljs$lang$applyTo;
    return G__5091
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__5094__delegate = function(args) {
      return x
    };
    var G__5094 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__5094__delegate.call(this, args)
    };
    G__5094.cljs$lang$maxFixedArity = 0;
    G__5094.cljs$lang$applyTo = function(arglist__5095) {
      var args = cljs.core.seq(arglist__5095);
      return G__5094__delegate(args)
    };
    G__5094.cljs$core$IFn$_invoke$arity$variadic = G__5094__delegate;
    return G__5094
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__5096 = null;
      var G__5096__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__5096__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__5096__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__5096__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__5096__4 = function() {
        var G__5097__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__5097 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__5097__delegate.call(this, x, y, z, args)
        };
        G__5097.cljs$lang$maxFixedArity = 3;
        G__5097.cljs$lang$applyTo = function(arglist__5098) {
          var x = cljs.core.first(arglist__5098);
          arglist__5098 = cljs.core.next(arglist__5098);
          var y = cljs.core.first(arglist__5098);
          arglist__5098 = cljs.core.next(arglist__5098);
          var z = cljs.core.first(arglist__5098);
          var args = cljs.core.rest(arglist__5098);
          return G__5097__delegate(x, y, z, args)
        };
        G__5097.cljs$core$IFn$_invoke$arity$variadic = G__5097__delegate;
        return G__5097
      }();
      G__5096 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__5096__0.call(this);
          case 1:
            return G__5096__1.call(this, x);
          case 2:
            return G__5096__2.call(this, x, y);
          case 3:
            return G__5096__3.call(this, x, y, z);
          default:
            return G__5096__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__5096.cljs$lang$maxFixedArity = 3;
      G__5096.cljs$lang$applyTo = G__5096__4.cljs$lang$applyTo;
      return G__5096
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__5099 = null;
      var G__5099__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__5099__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__5099__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__5099__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__5099__4 = function() {
        var G__5100__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__5100 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__5100__delegate.call(this, x, y, z, args)
        };
        G__5100.cljs$lang$maxFixedArity = 3;
        G__5100.cljs$lang$applyTo = function(arglist__5101) {
          var x = cljs.core.first(arglist__5101);
          arglist__5101 = cljs.core.next(arglist__5101);
          var y = cljs.core.first(arglist__5101);
          arglist__5101 = cljs.core.next(arglist__5101);
          var z = cljs.core.first(arglist__5101);
          var args = cljs.core.rest(arglist__5101);
          return G__5100__delegate(x, y, z, args)
        };
        G__5100.cljs$core$IFn$_invoke$arity$variadic = G__5100__delegate;
        return G__5100
      }();
      G__5099 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__5099__0.call(this);
          case 1:
            return G__5099__1.call(this, x);
          case 2:
            return G__5099__2.call(this, x, y);
          case 3:
            return G__5099__3.call(this, x, y, z);
          default:
            return G__5099__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__5099.cljs$lang$maxFixedArity = 3;
      G__5099.cljs$lang$applyTo = G__5099__4.cljs$lang$applyTo;
      return G__5099
    }()
  };
  var comp__4 = function() {
    var G__5102__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__5103__delegate = function(args) {
          var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
          var fs__$2 = cljs.core.next.call(null, fs__$1);
          while(true) {
            if(fs__$2) {
              var G__5104 = cljs.core.first.call(null, fs__$2).call(null, ret);
              var G__5105 = cljs.core.next.call(null, fs__$2);
              ret = G__5104;
              fs__$2 = G__5105;
              continue
            }else {
              return ret
            }
            break
          }
        };
        var G__5103 = function(var_args) {
          var args = null;
          if(arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__5103__delegate.call(this, args)
        };
        G__5103.cljs$lang$maxFixedArity = 0;
        G__5103.cljs$lang$applyTo = function(arglist__5106) {
          var args = cljs.core.seq(arglist__5106);
          return G__5103__delegate(args)
        };
        G__5103.cljs$core$IFn$_invoke$arity$variadic = G__5103__delegate;
        return G__5103
      }()
    };
    var G__5102 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__5102__delegate.call(this, f1, f2, f3, fs)
    };
    G__5102.cljs$lang$maxFixedArity = 3;
    G__5102.cljs$lang$applyTo = function(arglist__5107) {
      var f1 = cljs.core.first(arglist__5107);
      arglist__5107 = cljs.core.next(arglist__5107);
      var f2 = cljs.core.first(arglist__5107);
      arglist__5107 = cljs.core.next(arglist__5107);
      var f3 = cljs.core.first(arglist__5107);
      var fs = cljs.core.rest(arglist__5107);
      return G__5102__delegate(f1, f2, f3, fs)
    };
    G__5102.cljs$core$IFn$_invoke$arity$variadic = G__5102__delegate;
    return G__5102
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__5108__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__5108 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__5108__delegate.call(this, args)
      };
      G__5108.cljs$lang$maxFixedArity = 0;
      G__5108.cljs$lang$applyTo = function(arglist__5109) {
        var args = cljs.core.seq(arglist__5109);
        return G__5108__delegate(args)
      };
      G__5108.cljs$core$IFn$_invoke$arity$variadic = G__5108__delegate;
      return G__5108
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__5110__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__5110 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__5110__delegate.call(this, args)
      };
      G__5110.cljs$lang$maxFixedArity = 0;
      G__5110.cljs$lang$applyTo = function(arglist__5111) {
        var args = cljs.core.seq(arglist__5111);
        return G__5110__delegate(args)
      };
      G__5110.cljs$core$IFn$_invoke$arity$variadic = G__5110__delegate;
      return G__5110
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__5112__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__5112 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__5112__delegate.call(this, args)
      };
      G__5112.cljs$lang$maxFixedArity = 0;
      G__5112.cljs$lang$applyTo = function(arglist__5113) {
        var args = cljs.core.seq(arglist__5113);
        return G__5112__delegate(args)
      };
      G__5112.cljs$core$IFn$_invoke$arity$variadic = G__5112__delegate;
      return G__5112
    }()
  };
  var partial__5 = function() {
    var G__5114__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__5115__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__5115 = function(var_args) {
          var args = null;
          if(arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__5115__delegate.call(this, args)
        };
        G__5115.cljs$lang$maxFixedArity = 0;
        G__5115.cljs$lang$applyTo = function(arglist__5116) {
          var args = cljs.core.seq(arglist__5116);
          return G__5115__delegate(args)
        };
        G__5115.cljs$core$IFn$_invoke$arity$variadic = G__5115__delegate;
        return G__5115
      }()
    };
    var G__5114 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__5114__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__5114.cljs$lang$maxFixedArity = 4;
    G__5114.cljs$lang$applyTo = function(arglist__5117) {
      var f = cljs.core.first(arglist__5117);
      arglist__5117 = cljs.core.next(arglist__5117);
      var arg1 = cljs.core.first(arglist__5117);
      arglist__5117 = cljs.core.next(arglist__5117);
      var arg2 = cljs.core.first(arglist__5117);
      arglist__5117 = cljs.core.next(arglist__5117);
      var arg3 = cljs.core.first(arglist__5117);
      var more = cljs.core.rest(arglist__5117);
      return G__5114__delegate(f, arg1, arg2, arg3, more)
    };
    G__5114.cljs$core$IFn$_invoke$arity$variadic = G__5114__delegate;
    return G__5114
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__5118 = null;
      var G__5118__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__5118__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__5118__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__5118__4 = function() {
        var G__5119__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__5119 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__5119__delegate.call(this, a, b, c, ds)
        };
        G__5119.cljs$lang$maxFixedArity = 3;
        G__5119.cljs$lang$applyTo = function(arglist__5120) {
          var a = cljs.core.first(arglist__5120);
          arglist__5120 = cljs.core.next(arglist__5120);
          var b = cljs.core.first(arglist__5120);
          arglist__5120 = cljs.core.next(arglist__5120);
          var c = cljs.core.first(arglist__5120);
          var ds = cljs.core.rest(arglist__5120);
          return G__5119__delegate(a, b, c, ds)
        };
        G__5119.cljs$core$IFn$_invoke$arity$variadic = G__5119__delegate;
        return G__5119
      }();
      G__5118 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__5118__1.call(this, a);
          case 2:
            return G__5118__2.call(this, a, b);
          case 3:
            return G__5118__3.call(this, a, b, c);
          default:
            return G__5118__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__5118.cljs$lang$maxFixedArity = 3;
      G__5118.cljs$lang$applyTo = G__5118__4.cljs$lang$applyTo;
      return G__5118
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__5121 = null;
      var G__5121__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__5121__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__5121__4 = function() {
        var G__5122__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__5122 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__5122__delegate.call(this, a, b, c, ds)
        };
        G__5122.cljs$lang$maxFixedArity = 3;
        G__5122.cljs$lang$applyTo = function(arglist__5123) {
          var a = cljs.core.first(arglist__5123);
          arglist__5123 = cljs.core.next(arglist__5123);
          var b = cljs.core.first(arglist__5123);
          arglist__5123 = cljs.core.next(arglist__5123);
          var c = cljs.core.first(arglist__5123);
          var ds = cljs.core.rest(arglist__5123);
          return G__5122__delegate(a, b, c, ds)
        };
        G__5122.cljs$core$IFn$_invoke$arity$variadic = G__5122__delegate;
        return G__5122
      }();
      G__5121 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__5121__2.call(this, a, b);
          case 3:
            return G__5121__3.call(this, a, b, c);
          default:
            return G__5121__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__5121.cljs$lang$maxFixedArity = 3;
      G__5121.cljs$lang$applyTo = G__5121__4.cljs$lang$applyTo;
      return G__5121
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__5124 = null;
      var G__5124__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__5124__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__5124__4 = function() {
        var G__5125__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__5125 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__5125__delegate.call(this, a, b, c, ds)
        };
        G__5125.cljs$lang$maxFixedArity = 3;
        G__5125.cljs$lang$applyTo = function(arglist__5126) {
          var a = cljs.core.first(arglist__5126);
          arglist__5126 = cljs.core.next(arglist__5126);
          var b = cljs.core.first(arglist__5126);
          arglist__5126 = cljs.core.next(arglist__5126);
          var c = cljs.core.first(arglist__5126);
          var ds = cljs.core.rest(arglist__5126);
          return G__5125__delegate(a, b, c, ds)
        };
        G__5125.cljs$core$IFn$_invoke$arity$variadic = G__5125__delegate;
        return G__5125
      }();
      G__5124 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__5124__2.call(this, a, b);
          case 3:
            return G__5124__3.call(this, a, b, c);
          default:
            return G__5124__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__5124.cljs$lang$maxFixedArity = 3;
      G__5124.cljs$lang$applyTo = G__5124__4.cljs$lang$applyTo;
      return G__5124
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__3721__auto___5127 = size;
          var i_5128 = 0;
          while(true) {
            if(i_5128 < n__3721__auto___5127) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_5128, cljs.core._nth.call(null, c, i_5128)));
              var G__5129 = i_5128 + 1;
              i_5128 = G__5129;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)))
        }
      }else {
        return null
      }
    }, null, null)
  };
  return mapi.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__3721__auto___5130 = size;
        var i_5131 = 0;
        while(true) {
          if(i_5131 < n__3721__auto___5130) {
            var x_5132 = f.call(null, cljs.core._nth.call(null, c, i_5131));
            if(x_5132 == null) {
            }else {
              cljs.core.chunk_append.call(null, b, x_5132)
            }
            var G__5133 = i_5131 + 1;
            i_5131 = G__5133;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)))
      }else {
        var x = f.call(null, cljs.core.first.call(null, s));
        if(x == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s))
        }else {
          return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)))
        }
      }
    }else {
      return null
    }
  }, null, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi = function keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__3721__auto___5134 = size;
          var i_5135 = 0;
          while(true) {
            if(i_5135 < n__3721__auto___5134) {
              var x_5136 = f.call(null, idx + i_5135, cljs.core._nth.call(null, c, i_5135));
              if(x_5136 == null) {
              }else {
                cljs.core.chunk_append.call(null, b, x_5136)
              }
              var G__5137 = i_5135 + 1;
              i_5135 = G__5137;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)))
        }else {
          var x = f.call(null, idx, cljs.core.first.call(null, s));
          if(x == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s))
          }else {
            return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)))
          }
        }
      }else {
        return null
      }
    }, null, null)
  };
  return keepi.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            return p.call(null, y)
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p.call(null, y);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              return p.call(null, z)
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep1__4 = function() {
        var G__5144__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto__ = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto__)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3941__auto__
            }
          }())
        };
        var G__5144 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__5144__delegate.call(this, x, y, z, args)
        };
        G__5144.cljs$lang$maxFixedArity = 3;
        G__5144.cljs$lang$applyTo = function(arglist__5145) {
          var x = cljs.core.first(arglist__5145);
          arglist__5145 = cljs.core.next(arglist__5145);
          var y = cljs.core.first(arglist__5145);
          arglist__5145 = cljs.core.next(arglist__5145);
          var z = cljs.core.first(arglist__5145);
          var args = cljs.core.rest(arglist__5145);
          return G__5144__delegate(x, y, z, args)
        };
        G__5144.cljs$core$IFn$_invoke$arity$variadic = G__5144__delegate;
        return G__5144
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            return p2.call(null, x)
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p1.call(null, y);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              var and__3941__auto____$2 = p2.call(null, x);
              if(cljs.core.truth_(and__3941__auto____$2)) {
                return p2.call(null, y)
              }else {
                return and__3941__auto____$2
              }
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p1.call(null, y);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              var and__3941__auto____$2 = p1.call(null, z);
              if(cljs.core.truth_(and__3941__auto____$2)) {
                var and__3941__auto____$3 = p2.call(null, x);
                if(cljs.core.truth_(and__3941__auto____$3)) {
                  var and__3941__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____$4)) {
                    return p2.call(null, z)
                  }else {
                    return and__3941__auto____$4
                  }
                }else {
                  return and__3941__auto____$3
                }
              }else {
                return and__3941__auto____$2
              }
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep2__4 = function() {
        var G__5146__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto__ = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto__)) {
              return cljs.core.every_QMARK_.call(null, function(p1__5138_SHARP_) {
                var and__3941__auto____$1 = p1.call(null, p1__5138_SHARP_);
                if(cljs.core.truth_(and__3941__auto____$1)) {
                  return p2.call(null, p1__5138_SHARP_)
                }else {
                  return and__3941__auto____$1
                }
              }, args)
            }else {
              return and__3941__auto__
            }
          }())
        };
        var G__5146 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__5146__delegate.call(this, x, y, z, args)
        };
        G__5146.cljs$lang$maxFixedArity = 3;
        G__5146.cljs$lang$applyTo = function(arglist__5147) {
          var x = cljs.core.first(arglist__5147);
          arglist__5147 = cljs.core.next(arglist__5147);
          var y = cljs.core.first(arglist__5147);
          arglist__5147 = cljs.core.next(arglist__5147);
          var z = cljs.core.first(arglist__5147);
          var args = cljs.core.rest(arglist__5147);
          return G__5146__delegate(x, y, z, args)
        };
        G__5146.cljs$core$IFn$_invoke$arity$variadic = G__5146__delegate;
        return G__5146
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              return p3.call(null, x)
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              var and__3941__auto____$2 = p3.call(null, x);
              if(cljs.core.truth_(and__3941__auto____$2)) {
                var and__3941__auto____$3 = p1.call(null, y);
                if(cljs.core.truth_(and__3941__auto____$3)) {
                  var and__3941__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____$4)) {
                    return p3.call(null, y)
                  }else {
                    return and__3941__auto____$4
                  }
                }else {
                  return and__3941__auto____$3
                }
              }else {
                return and__3941__auto____$2
              }
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              var and__3941__auto____$2 = p3.call(null, x);
              if(cljs.core.truth_(and__3941__auto____$2)) {
                var and__3941__auto____$3 = p1.call(null, y);
                if(cljs.core.truth_(and__3941__auto____$3)) {
                  var and__3941__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____$4)) {
                    var and__3941__auto____$5 = p3.call(null, y);
                    if(cljs.core.truth_(and__3941__auto____$5)) {
                      var and__3941__auto____$6 = p1.call(null, z);
                      if(cljs.core.truth_(and__3941__auto____$6)) {
                        var and__3941__auto____$7 = p2.call(null, z);
                        if(cljs.core.truth_(and__3941__auto____$7)) {
                          return p3.call(null, z)
                        }else {
                          return and__3941__auto____$7
                        }
                      }else {
                        return and__3941__auto____$6
                      }
                    }else {
                      return and__3941__auto____$5
                    }
                  }else {
                    return and__3941__auto____$4
                  }
                }else {
                  return and__3941__auto____$3
                }
              }else {
                return and__3941__auto____$2
              }
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep3__4 = function() {
        var G__5148__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto__ = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto__)) {
              return cljs.core.every_QMARK_.call(null, function(p1__5139_SHARP_) {
                var and__3941__auto____$1 = p1.call(null, p1__5139_SHARP_);
                if(cljs.core.truth_(and__3941__auto____$1)) {
                  var and__3941__auto____$2 = p2.call(null, p1__5139_SHARP_);
                  if(cljs.core.truth_(and__3941__auto____$2)) {
                    return p3.call(null, p1__5139_SHARP_)
                  }else {
                    return and__3941__auto____$2
                  }
                }else {
                  return and__3941__auto____$1
                }
              }, args)
            }else {
              return and__3941__auto__
            }
          }())
        };
        var G__5148 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__5148__delegate.call(this, x, y, z, args)
        };
        G__5148.cljs$lang$maxFixedArity = 3;
        G__5148.cljs$lang$applyTo = function(arglist__5149) {
          var x = cljs.core.first(arglist__5149);
          arglist__5149 = cljs.core.next(arglist__5149);
          var y = cljs.core.first(arglist__5149);
          arglist__5149 = cljs.core.next(arglist__5149);
          var z = cljs.core.first(arglist__5149);
          var args = cljs.core.rest(arglist__5149);
          return G__5148__delegate(x, y, z, args)
        };
        G__5148.cljs$core$IFn$_invoke$arity$variadic = G__5148__delegate;
        return G__5148
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__5150__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__5140_SHARP_) {
            return p1__5140_SHARP_.call(null, x)
          }, ps__$1)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__5141_SHARP_) {
            var and__3941__auto__ = p1__5141_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3941__auto__)) {
              return p1__5141_SHARP_.call(null, y)
            }else {
              return and__3941__auto__
            }
          }, ps__$1)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__5142_SHARP_) {
            var and__3941__auto__ = p1__5142_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3941__auto__)) {
              var and__3941__auto____$1 = p1__5142_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3941__auto____$1)) {
                return p1__5142_SHARP_.call(null, z)
              }else {
                return and__3941__auto____$1
              }
            }else {
              return and__3941__auto__
            }
          }, ps__$1)
        };
        var epn__4 = function() {
          var G__5151__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3941__auto__ = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3941__auto__)) {
                return cljs.core.every_QMARK_.call(null, function(p1__5143_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__5143_SHARP_, args)
                }, ps__$1)
              }else {
                return and__3941__auto__
              }
            }())
          };
          var G__5151 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__5151__delegate.call(this, x, y, z, args)
          };
          G__5151.cljs$lang$maxFixedArity = 3;
          G__5151.cljs$lang$applyTo = function(arglist__5152) {
            var x = cljs.core.first(arglist__5152);
            arglist__5152 = cljs.core.next(arglist__5152);
            var y = cljs.core.first(arglist__5152);
            arglist__5152 = cljs.core.next(arglist__5152);
            var z = cljs.core.first(arglist__5152);
            var args = cljs.core.rest(arglist__5152);
            return G__5151__delegate(x, y, z, args)
          };
          G__5151.cljs$core$IFn$_invoke$arity$variadic = G__5151__delegate;
          return G__5151
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
        epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
        epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
        epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
        epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
        return epn
      }()
    };
    var G__5150 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__5150__delegate.call(this, p1, p2, p3, ps)
    };
    G__5150.cljs$lang$maxFixedArity = 3;
    G__5150.cljs$lang$applyTo = function(arglist__5153) {
      var p1 = cljs.core.first(arglist__5153);
      arglist__5153 = cljs.core.next(arglist__5153);
      var p2 = cljs.core.first(arglist__5153);
      arglist__5153 = cljs.core.next(arglist__5153);
      var p3 = cljs.core.first(arglist__5153);
      var ps = cljs.core.rest(arglist__5153);
      return G__5150__delegate(p1, p2, p3, ps)
    };
    G__5150.cljs$core$IFn$_invoke$arity$variadic = G__5150__delegate;
    return G__5150
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3943__auto__ = p.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3943__auto__ = p.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p.call(null, y);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__5160__delegate = function(x, y, z, args) {
          var or__3943__auto__ = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__5160 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__5160__delegate.call(this, x, y, z, args)
        };
        G__5160.cljs$lang$maxFixedArity = 3;
        G__5160.cljs$lang$applyTo = function(arglist__5161) {
          var x = cljs.core.first(arglist__5161);
          arglist__5161 = cljs.core.next(arglist__5161);
          var y = cljs.core.first(arglist__5161);
          arglist__5161 = cljs.core.next(arglist__5161);
          var z = cljs.core.first(arglist__5161);
          var args = cljs.core.rest(arglist__5161);
          return G__5160__delegate(x, y, z, args)
        };
        G__5160.cljs$core$IFn$_invoke$arity$variadic = G__5160__delegate;
        return G__5160
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p1.call(null, y);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = p2.call(null, x);
            if(cljs.core.truth_(or__3943__auto____$2)) {
              return or__3943__auto____$2
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p1.call(null, y);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = p1.call(null, z);
            if(cljs.core.truth_(or__3943__auto____$2)) {
              return or__3943__auto____$2
            }else {
              var or__3943__auto____$3 = p2.call(null, x);
              if(cljs.core.truth_(or__3943__auto____$3)) {
                return or__3943__auto____$3
              }else {
                var or__3943__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____$4)) {
                  return or__3943__auto____$4
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__5162__delegate = function(x, y, z, args) {
          var or__3943__auto__ = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return cljs.core.some.call(null, function(p1__5154_SHARP_) {
              var or__3943__auto____$1 = p1.call(null, p1__5154_SHARP_);
              if(cljs.core.truth_(or__3943__auto____$1)) {
                return or__3943__auto____$1
              }else {
                return p2.call(null, p1__5154_SHARP_)
              }
            }, args)
          }
        };
        var G__5162 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__5162__delegate.call(this, x, y, z, args)
        };
        G__5162.cljs$lang$maxFixedArity = 3;
        G__5162.cljs$lang$applyTo = function(arglist__5163) {
          var x = cljs.core.first(arglist__5163);
          arglist__5163 = cljs.core.next(arglist__5163);
          var y = cljs.core.first(arglist__5163);
          arglist__5163 = cljs.core.next(arglist__5163);
          var z = cljs.core.first(arglist__5163);
          var args = cljs.core.rest(arglist__5163);
          return G__5162__delegate(x, y, z, args)
        };
        G__5162.cljs$core$IFn$_invoke$arity$variadic = G__5162__delegate;
        return G__5162
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = p3.call(null, x);
            if(cljs.core.truth_(or__3943__auto____$2)) {
              return or__3943__auto____$2
            }else {
              var or__3943__auto____$3 = p1.call(null, y);
              if(cljs.core.truth_(or__3943__auto____$3)) {
                return or__3943__auto____$3
              }else {
                var or__3943__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____$4)) {
                  return or__3943__auto____$4
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = p3.call(null, x);
            if(cljs.core.truth_(or__3943__auto____$2)) {
              return or__3943__auto____$2
            }else {
              var or__3943__auto____$3 = p1.call(null, y);
              if(cljs.core.truth_(or__3943__auto____$3)) {
                return or__3943__auto____$3
              }else {
                var or__3943__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____$4)) {
                  return or__3943__auto____$4
                }else {
                  var or__3943__auto____$5 = p3.call(null, y);
                  if(cljs.core.truth_(or__3943__auto____$5)) {
                    return or__3943__auto____$5
                  }else {
                    var or__3943__auto____$6 = p1.call(null, z);
                    if(cljs.core.truth_(or__3943__auto____$6)) {
                      return or__3943__auto____$6
                    }else {
                      var or__3943__auto____$7 = p2.call(null, z);
                      if(cljs.core.truth_(or__3943__auto____$7)) {
                        return or__3943__auto____$7
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__5164__delegate = function(x, y, z, args) {
          var or__3943__auto__ = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return cljs.core.some.call(null, function(p1__5155_SHARP_) {
              var or__3943__auto____$1 = p1.call(null, p1__5155_SHARP_);
              if(cljs.core.truth_(or__3943__auto____$1)) {
                return or__3943__auto____$1
              }else {
                var or__3943__auto____$2 = p2.call(null, p1__5155_SHARP_);
                if(cljs.core.truth_(or__3943__auto____$2)) {
                  return or__3943__auto____$2
                }else {
                  return p3.call(null, p1__5155_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__5164 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__5164__delegate.call(this, x, y, z, args)
        };
        G__5164.cljs$lang$maxFixedArity = 3;
        G__5164.cljs$lang$applyTo = function(arglist__5165) {
          var x = cljs.core.first(arglist__5165);
          arglist__5165 = cljs.core.next(arglist__5165);
          var y = cljs.core.first(arglist__5165);
          arglist__5165 = cljs.core.next(arglist__5165);
          var z = cljs.core.first(arglist__5165);
          var args = cljs.core.rest(arglist__5165);
          return G__5164__delegate(x, y, z, args)
        };
        G__5164.cljs$core$IFn$_invoke$arity$variadic = G__5164__delegate;
        return G__5164
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__5166__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__5156_SHARP_) {
            return p1__5156_SHARP_.call(null, x)
          }, ps__$1)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__5157_SHARP_) {
            var or__3943__auto__ = p1__5157_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return p1__5157_SHARP_.call(null, y)
            }
          }, ps__$1)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__5158_SHARP_) {
            var or__3943__auto__ = p1__5158_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              var or__3943__auto____$1 = p1__5158_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3943__auto____$1)) {
                return or__3943__auto____$1
              }else {
                return p1__5158_SHARP_.call(null, z)
              }
            }
          }, ps__$1)
        };
        var spn__4 = function() {
          var G__5167__delegate = function(x, y, z, args) {
            var or__3943__auto__ = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return cljs.core.some.call(null, function(p1__5159_SHARP_) {
                return cljs.core.some.call(null, p1__5159_SHARP_, args)
              }, ps__$1)
            }
          };
          var G__5167 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__5167__delegate.call(this, x, y, z, args)
          };
          G__5167.cljs$lang$maxFixedArity = 3;
          G__5167.cljs$lang$applyTo = function(arglist__5168) {
            var x = cljs.core.first(arglist__5168);
            arglist__5168 = cljs.core.next(arglist__5168);
            var y = cljs.core.first(arglist__5168);
            arglist__5168 = cljs.core.next(arglist__5168);
            var z = cljs.core.first(arglist__5168);
            var args = cljs.core.rest(arglist__5168);
            return G__5167__delegate(x, y, z, args)
          };
          G__5167.cljs$core$IFn$_invoke$arity$variadic = G__5167__delegate;
          return G__5167
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
        spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
        spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
        spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
        spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
        return spn
      }()
    };
    var G__5166 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__5166__delegate.call(this, p1, p2, p3, ps)
    };
    G__5166.cljs$lang$maxFixedArity = 3;
    G__5166.cljs$lang$applyTo = function(arglist__5169) {
      var p1 = cljs.core.first(arglist__5169);
      arglist__5169 = cljs.core.next(arglist__5169);
      var p2 = cljs.core.first(arglist__5169);
      arglist__5169 = cljs.core.next(arglist__5169);
      var p3 = cljs.core.first(arglist__5169);
      var ps = cljs.core.rest(arglist__5169);
      return G__5166__delegate(p1, p2, p3, ps)
    };
    G__5166.cljs$core$IFn$_invoke$arity$variadic = G__5166__delegate;
    return G__5166
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__3721__auto___5171 = size;
          var i_5172 = 0;
          while(true) {
            if(i_5172 < n__3721__auto___5171) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_5172)));
              var G__5173 = i_5172 + 1;
              i_5172 = G__5173;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)))
        }
      }else {
        return null
      }
    }, null, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3941__auto__ = s1;
        if(and__3941__auto__) {
          return s2
        }else {
          return and__3941__auto__
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)))
      }else {
        return null
      }
    }, null, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3941__auto__ = s1;
        if(and__3941__auto__) {
          var and__3941__auto____$1 = s2;
          if(and__3941__auto____$1) {
            return s3
          }else {
            return and__3941__auto____$1
          }
        }else {
          return and__3941__auto__
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)))
      }else {
        return null
      }
    }, null, null)
  };
  var map__5 = function() {
    var G__5174__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)))
          }else {
            return null
          }
        }, null, null)
      };
      return map.call(null, function(p1__5170_SHARP_) {
        return cljs.core.apply.call(null, f, p1__5170_SHARP_)
      }, step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__5174 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__5174__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__5174.cljs$lang$maxFixedArity = 4;
    G__5174.cljs$lang$applyTo = function(arglist__5175) {
      var f = cljs.core.first(arglist__5175);
      arglist__5175 = cljs.core.next(arglist__5175);
      var c1 = cljs.core.first(arglist__5175);
      arglist__5175 = cljs.core.next(arglist__5175);
      var c2 = cljs.core.first(arglist__5175);
      arglist__5175 = cljs.core.next(arglist__5175);
      var c3 = cljs.core.first(arglist__5175);
      var colls = cljs.core.rest(arglist__5175);
      return G__5174__delegate(f, c1, c2, c3, colls)
    };
    G__5174.cljs$core$IFn$_invoke$arity$variadic = G__5174__delegate;
    return G__5174
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    if(n > 0) {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null, null)
};
cljs.core.drop = function drop(n, coll) {
  var step = function(n__$1, coll__$1) {
    while(true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = n__$1 > 0;
        if(and__3941__auto__) {
          return s
        }else {
          return and__3941__auto__
        }
      }())) {
        var G__5176 = n__$1 - 1;
        var G__5177 = cljs.core.rest.call(null, s);
        n__$1 = G__5176;
        coll__$1 = G__5177;
        continue
      }else {
        return s
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step.call(null, n, coll)
  }, null, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead) {
      var G__5178 = cljs.core.next.call(null, s);
      var G__5179 = cljs.core.next.call(null, lead);
      s = G__5178;
      lead = G__5179;
      continue
    }else {
      return s
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while(true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = s;
        if(and__3941__auto__) {
          return pred__$1.call(null, cljs.core.first.call(null, s))
        }else {
          return and__3941__auto__
        }
      }())) {
        var G__5180 = pred__$1;
        var G__5181 = cljs.core.rest.call(null, s);
        pred__$1 = G__5180;
        coll__$1 = G__5181;
        continue
      }else {
        return s
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step.call(null, pred, coll)
  }, null, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s))
    }else {
      return null
    }
  }, null, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3941__auto__ = s1;
        if(and__3941__auto__) {
          return s2
        }else {
          return and__3941__auto__
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))))
      }else {
        return null
      }
    }, null, null)
  };
  var interleave__3 = function() {
    var G__5182__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)))
        }else {
          return null
        }
      }, null, null)
    };
    var G__5182 = function(c1, c2, var_args) {
      var colls = null;
      if(arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__5182__delegate.call(this, c1, c2, colls)
    };
    G__5182.cljs$lang$maxFixedArity = 2;
    G__5182.cljs$lang$applyTo = function(arglist__5183) {
      var c1 = cljs.core.first(arglist__5183);
      arglist__5183 = cljs.core.next(arglist__5183);
      var c2 = cljs.core.first(arglist__5183);
      var colls = cljs.core.rest(arglist__5183);
      return G__5182__delegate(c1, c2, colls)
    };
    G__5182.cljs$core$IFn$_invoke$arity$variadic = G__5182__delegate;
    return G__5182
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4090__auto__) {
        var coll__$1 = temp__4090__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1))
      }else {
        if(cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1))
        }else {
          return null
        }
      }
    }, null, null)
  };
  return cat.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__5184__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__5184 = function(f, coll, var_args) {
      var colls = null;
      if(arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__5184__delegate.call(this, f, coll, colls)
    };
    G__5184.cljs$lang$maxFixedArity = 2;
    G__5184.cljs$lang$applyTo = function(arglist__5185) {
      var f = cljs.core.first(arglist__5185);
      arglist__5185 = cljs.core.next(arglist__5185);
      var coll = cljs.core.first(arglist__5185);
      var colls = cljs.core.rest(arglist__5185);
      return G__5184__delegate(f, coll, colls)
    };
    G__5184.cljs$core$IFn$_invoke$arity$variadic = G__5184__delegate;
    return G__5184
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__3721__auto___5186 = size;
        var i_5187 = 0;
        while(true) {
          if(i_5187 < n__3721__auto___5186) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_5187)))) {
              cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_5187))
            }else {
            }
            var G__5188 = i_5187 + 1;
            i_5187 = G__5188;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)))
      }else {
        var f = cljs.core.first.call(null, s);
        var r = cljs.core.rest.call(null, s);
        if(cljs.core.truth_(pred.call(null, f))) {
          return cljs.core.cons.call(null, f, filter.call(null, pred, r))
        }else {
          return filter.call(null, pred, r)
        }
      }
    }else {
      return null
    }
  }, null, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null, null)
  };
  return walk.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__5189_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__5189_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(!(to == null)) {
    if(function() {
      var G__5191 = to;
      if(G__5191) {
        if(function() {
          var or__3943__auto__ = G__5191.cljs$lang$protocol_mask$partition1$ & 4;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__5191.cljs$core$IEditableCollection$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
    }else {
      return cljs.core.reduce.call(null, cljs.core._conj, to, from)
    }
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__5192__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__5192 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__5192__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__5192.cljs$lang$maxFixedArity = 4;
    G__5192.cljs$lang$applyTo = function(arglist__5193) {
      var f = cljs.core.first(arglist__5193);
      arglist__5193 = cljs.core.next(arglist__5193);
      var c1 = cljs.core.first(arglist__5193);
      arglist__5193 = cljs.core.next(arglist__5193);
      var c2 = cljs.core.first(arglist__5193);
      arglist__5193 = cljs.core.next(arglist__5193);
      var c3 = cljs.core.first(arglist__5193);
      var colls = cljs.core.rest(arglist__5193);
      return G__5192__delegate(f, c1, c2, c3, colls)
    };
    G__5192.cljs$core$IFn$_invoke$arity$variadic = G__5192__delegate;
    return G__5192
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if(n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if(n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)))
        }
      }else {
        return null
      }
    }, null, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__$1) {
        if(!function() {
          var G__5195 = m__$1;
          if(G__5195) {
            if(function() {
              var or__3943__auto__ = G__5195.cljs$lang$protocol_mask$partition0$ & 256;
              if(or__3943__auto__) {
                return or__3943__auto__
              }else {
                return G__5195.cljs$core$ILookup$
              }
            }()) {
              return true
            }else {
              if(!G__5195.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__5195)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__5195)
          }
        }()) {
          return not_found
        }else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if(sentinel === m__$2) {
            return not_found
          }else {
            var G__5196 = sentinel;
            var G__5197 = m__$2;
            var G__5198 = cljs.core.next.call(null, ks__$1);
            sentinel = G__5196;
            m__$1 = G__5197;
            ks__$1 = G__5198;
            continue
          }
        }
      }else {
        return m__$1
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__5199, v) {
  var vec__5201 = p__5199;
  var k = cljs.core.nth.call(null, vec__5201, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__5201, 1);
  if(cljs.core.truth_(ks)) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v))
  }else {
    return cljs.core.assoc.call(null, m, k, v)
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__5202, f) {
    var vec__5212 = p__5202;
    var k = cljs.core.nth.call(null, vec__5212, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__5212, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)))
    }
  };
  var update_in__4 = function(m, p__5203, f, a) {
    var vec__5213 = p__5203;
    var k = cljs.core.nth.call(null, vec__5213, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__5213, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a))
    }
  };
  var update_in__5 = function(m, p__5204, f, a, b) {
    var vec__5214 = p__5204;
    var k = cljs.core.nth.call(null, vec__5214, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__5214, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b))
    }
  };
  var update_in__6 = function(m, p__5205, f, a, b, c) {
    var vec__5215 = p__5205;
    var k = cljs.core.nth.call(null, vec__5215, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__5215, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c))
    }
  };
  var update_in__7 = function() {
    var G__5217__delegate = function(m, p__5206, f, a, b, c, args) {
      var vec__5216 = p__5206;
      var k = cljs.core.nth.call(null, vec__5216, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__5216, 1);
      if(cljs.core.truth_(ks)) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args))
      }else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args))
      }
    };
    var G__5217 = function(m, p__5206, f, a, b, c, var_args) {
      var args = null;
      if(arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0)
      }
      return G__5217__delegate.call(this, m, p__5206, f, a, b, c, args)
    };
    G__5217.cljs$lang$maxFixedArity = 6;
    G__5217.cljs$lang$applyTo = function(arglist__5218) {
      var m = cljs.core.first(arglist__5218);
      arglist__5218 = cljs.core.next(arglist__5218);
      var p__5206 = cljs.core.first(arglist__5218);
      arglist__5218 = cljs.core.next(arglist__5218);
      var f = cljs.core.first(arglist__5218);
      arglist__5218 = cljs.core.next(arglist__5218);
      var a = cljs.core.first(arglist__5218);
      arglist__5218 = cljs.core.next(arglist__5218);
      var b = cljs.core.first(arglist__5218);
      arglist__5218 = cljs.core.next(arglist__5218);
      var c = cljs.core.first(arglist__5218);
      var args = cljs.core.rest(arglist__5218);
      return G__5217__delegate(m, p__5206, f, a, b, c, args)
    };
    G__5217.cljs$core$IFn$_invoke$arity$variadic = G__5217__delegate;
    return G__5217
  }();
  update_in = function(m, p__5206, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__5206, f);
      case 4:
        return update_in__4.call(this, m, p__5206, f, a);
      case 5:
        return update_in__5.call(this, m, p__5206, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__5206, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__5206, f, a, b, c, cljs.core.array_seq(arguments, 6))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in
}();
goog.provide("cljs.core.VectorNode");
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__3487__auto__, writer__3488__auto__, opts__3489__auto__) {
  return cljs.core._write.call(null, writer__3488__auto__, "cljs.core/VectorNode")
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr)
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, new Array(32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if(cnt < 32) {
    return 0
  }else {
    return cnt - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while(true) {
    if(ll === 0) {
      return ret
    }else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__5219 = ll - 5;
      var G__5220 = r;
      ll = G__5219;
      ret = G__5220;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret
  }else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if(!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret
    }else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3941__auto__ = 0 <= i;
    if(and__3941__auto__) {
      return i < pv.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node = pv.root;
      var level = pv.shift;
      while(true) {
        if(level > 0) {
          var G__5221 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
          var G__5222 = level - 5;
          node = G__5221;
          level = G__5222;
          continue
        }else {
          return node.arr
        }
        break
      }
    }
  }else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt)
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret
  }else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if(function() {
      var and__3941__auto__ = new_child == null;
      if(and__3941__auto__) {
        return subidx === 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return null
    }else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret
    }
  }else {
    if(subidx === 0) {
      return null
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var ret = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret, subidx, null);
        return ret
      }else {
        return null
      }
    }
  }
};
goog.provide("cljs.core.PersistentVector");
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3364__auto__ = self__.__hash;
  if(!(h__3364__auto__ == null)) {
    return h__3364__auto__
  }else {
    var h__3364__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3364__auto____$1;
    return h__3364__auto____$1
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = 0 <= k;
    if(and__3941__auto__) {
      return k < self__.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail = self__.tail.slice();
      new_tail[k & 31] = v;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null)
    }else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll, self__.shift, self__.root, k, v), self__.tail, null)
    }
  }else {
    if(k === self__.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__5224 = null;
  var G__5224__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, k)
  };
  var G__5224__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
  };
  G__5224 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5224__2.call(this, self__, k);
      case 3:
        return G__5224__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__5224
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args5223) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args5223.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var step_init = [0, init];
  var i = 0;
  while(true) {
    if(i < self__.cnt) {
      var arr = cljs.core.array_for.call(null, v, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while(true) {
          if(j < len) {
            var init__$2 = f.call(null, init__$1, j + i, arr[j]);
            if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
              return init__$2
            }else {
              var G__5225 = j + 1;
              var G__5226 = init__$2;
              j = G__5225;
              init__$1 = G__5226;
              continue
            }
          }else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
        return cljs.core.deref.call(null, init__$1)
      }else {
        var G__5227 = i + step_init[0];
        i = G__5227;
        continue
      }
    }else {
      return step_init[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  if(self__.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail = self__.tail.slice();
    new_tail.push(o);
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null)
  }else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r
    }() : cljs.core.push_tail.call(null, coll, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    return new cljs.core.RSeq(coll, self__.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt === 0) {
    return null
  }else {
    if(self__.cnt < 32) {
      return cljs.core.array_seq.call(null, self__.tail)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.chunked_seq.call(null, coll, 0, 0)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, self__.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
    }else {
      if(1 < self__.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_tail = cljs.core.array_for.call(null, coll, self__.cnt - 2);
          var nr = cljs.core.pop_tail.call(null, coll, self__.shift, self__.root);
          var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
          var cnt_1 = self__.cnt - 1;
          if(function() {
            var and__3941__auto__ = 5 < self__.shift;
            if(and__3941__auto__) {
              return cljs.core.pv_aget.call(null, new_root, 1) == null
            }else {
              return and__3941__auto__
            }
          }()) {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null)
          }else {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = 0 <= n;
    if(and__3941__auto__) {
      return n < self__.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash)
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, new Array(32));
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : xs.slice();
  if(l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null)
  }else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while(true) {
      if(i < l) {
        var G__5228 = i + 1;
        var G__5229 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__5228;
        out = G__5229;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__5230) {
    var args = cljs.core.seq(arglist__5230);
    return vector__delegate(args)
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector
}();
goog.provide("cljs.core.ChunkedSeq");
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32243948;
  this.cljs$lang$protocol_mask$partition1$ = 1536
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3364__auto__ = self__.__hash;
  if(!(h__3364__auto__ == null)) {
    return h__3364__auto__
  }else {
    var h__3364__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3364__auto____$1;
    return h__3364__auto____$1
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if(s == null) {
      return null
    }else {
      return s
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return self__.node[self__.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if(s == null) {
      return cljs.core.List.EMPTY
    }else {
      return s
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if(s == null) {
    return null
  }else {
    return s
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if(s == null) {
    return cljs.core.List.EMPTY
  }else {
    return s
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash)
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq
}();
goog.provide("cljs.core.Subvec");
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3364__auto__ = self__.__hash;
  if(!(h__3364__auto__ == null)) {
    return h__3364__auto__
  }else {
    var h__3364__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3364__auto____$1;
    return h__3364__auto____$1
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var v_pos = self__.start + key;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3265__auto__ = self__.end;
    var y__3266__auto__ = v_pos + 1;
    return x__3265__auto__ > y__3266__auto__ ? x__3265__auto__ : y__3266__auto__
  }(), null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__5232 = null;
  var G__5232__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, k)
  };
  var G__5232__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
  };
  G__5232 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5232__2.call(this, self__, k);
      case 3:
        return G__5232__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__5232
}();
cljs.core.Subvec.prototype.apply = function(self__, args5231) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args5231.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, coll, f, start__$1)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var subvec_seq = function subvec_seq(i) {
    if(i === self__.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function() {
        return subvec_seq.call(null, i + 1)
      }, null, null))
    }
  };
  return subvec_seq.call(null, self__.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.end - self__.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  if(self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  if(function() {
    var or__3943__auto__ = n < 0;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return self__.end <= self__.start + n
    }
  }()) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start)
  }else {
    return cljs.core._nth.call(null, self__.v, self__.start + n)
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  if(function() {
    var or__3943__auto__ = n < 0;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return self__.end <= self__.start + n
    }
  }()) {
    return not_found
  }else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found)
  }
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash)
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while(true) {
    if(v instanceof cljs.core.Subvec) {
      var G__5233 = meta;
      var G__5234 = v.v;
      var G__5235 = v.start + start;
      var G__5236 = v.start + end;
      var G__5237 = __hash;
      meta = G__5233;
      v = G__5234;
      start = G__5235;
      end = G__5236;
      __hash = G__5237;
      continue
    }else {
      var c = cljs.core.count.call(null, v);
      if(function() {
        var or__3943__auto__ = start < 0;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = end < 0;
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = start > c;
            if(or__3943__auto____$2) {
              return or__3943__auto____$2
            }else {
              return end > c
            }
          }
        }
      }()) {
        throw new Error("Index out of bounds");
      }else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash)
    }
    break
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = new Array(32);
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if(!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if(function() {
      var and__3941__auto__ = new_child == null;
      if(and__3941__auto__) {
        return subidx === 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1
    }
  }else {
    if(subidx === 0) {
      return null
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        cljs.core.pv_aset.call(null, node__$1, subidx, null);
        return node__$1
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3941__auto__ = 0 <= i;
    if(and__3941__auto__) {
      return i < tv.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root = tv.root;
      var node = root;
      var level = tv.shift;
      while(true) {
        if(level > 0) {
          var G__5238 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
          var G__5239 = level - 5;
          node = G__5238;
          level = G__5239;
          continue
        }else {
          return node.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
goog.provide("cljs.core.TransientVector");
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__5241 = null;
  var G__5241__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__5241__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__5241 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5241__2.call(this, self__, k);
      case 3:
        return G__5241__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__5241
}();
cljs.core.TransientVector.prototype.apply = function(self__, args5240) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args5240.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  if(self__.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = 0 <= n;
    if(and__3941__auto__) {
      return n < self__.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  if(self__.root.edit) {
    return self__.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  if(self__.root.edit) {
    if(function() {
      var and__3941__auto__ = 0 <= n;
      if(and__3941__auto__) {
        return n < self__.cnt
      }else {
        return and__3941__auto__
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        self__.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root = function go(level, node) {
          var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__$1, n & 31, val);
            return node__$1
          }else {
            var subidx = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
            return node__$1
          }
        }.call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll
      }
    }else {
      if(n === self__.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  if(self__.root.edit) {
    if(self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll
      }else {
        if((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var new_tail = cljs.core.editable_array_for.call(null, tcoll, self__.cnt - 2);
            var new_root = function() {
              var nr = cljs.core.tv_pop_tail.call(null, tcoll, self__.shift, self__.root);
              if(!(nr == null)) {
                return nr
              }else {
                return new cljs.core.VectorNode(self__.root.edit, new Array(32))
              }
            }();
            if(function() {
              var and__3941__auto__ = 5 < self__.shift;
              if(and__3941__auto__) {
                return cljs.core.pv_aget.call(null, new_root, 1) == null
              }else {
                return and__3941__auto__
              }
            }()) {
              var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
              self__.root = new_root__$1;
              self__.shift = self__.shift - 5;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll
            }else {
              self__.root = new_root;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  if(self__.root.edit) {
    if(self__.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll
    }else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = new Array(32);
      new_tail[0] = o;
      self__.tail = new_tail;
      if(self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = new Array(32);
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll
      }else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  if(self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail)
};
goog.provide("cljs.core.PersistentQueueSeq");
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3364__auto__ = self__.__hash;
  if(!(h__3364__auto__ == null)) {
    return h__3364__auto__
  }else {
    var h__3364__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3364__auto____$1;
    return h__3364__auto____$1
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
  if(temp__4090__auto__) {
    var f1 = temp__4090__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null)
  }else {
    if(self__.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash)
};
goog.provide("cljs.core.PersistentQueue");
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3364__auto__ = self__.__hash;
  if(!(h__3364__auto__ == null)) {
    return h__3364__auto__
  }else {
    var h__3364__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3364__auto____$1;
    return h__3364__auto____$1
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  if(cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3943__auto__ = self__.rear;
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if(cljs.core.truth_(function() {
    var or__3943__auto__ = self__.front;
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return rear__$1
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  if(cljs.core.truth_(self__.front)) {
    var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
    if(temp__4090__auto__) {
      var f1 = temp__4090__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null)
    }else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash)
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
goog.provide("cljs.core.NeverEquiv");
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  return false
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while(true) {
    if(i < len) {
      if(k === array[i]) {
        return i
      }else {
        var G__5242 = i + incr;
        i = G__5242;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if(a__$1 < b__$1) {
    return-1
  }else {
    if(a__$1 > b__$1) {
      return 1
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i < len) {
      var k__$1 = ks[i];
      var G__5243 = i + 1;
      var G__5244 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__5243;
      out = G__5244;
      continue
    }else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm)
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_5245 = 0;
  while(true) {
    if(i_5245 < l) {
      var k_5246 = ks[i_5245];
      new_obj[k_5246] = obj[k_5246];
      var G__5247 = i_5245 + 1;
      i_5245 = G__5247;
      continue
    }else {
    }
    break
  }
  return new_obj
};
goog.provide("cljs.core.ObjMap");
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3364__auto__ = self__.__hash;
  if(!(h__3364__auto__ == null)) {
    return h__3364__auto__
  }else {
    var h__3364__auto____$1 = cljs.core.hash_imap.call(null, coll);
    self__.__hash = h__3364__auto____$1;
    return h__3364__auto____$1
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = goog.isString(k);
    if(and__3941__auto__) {
      return!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)
    }else {
      return and__3941__auto__
    }
  }()) {
    return self__.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3943__auto__ = self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null)
      }else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = self__.keys.slice();
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = goog.isString(k);
    if(and__3941__auto__) {
      return!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)
    }else {
      return and__3941__auto__
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__5250 = null;
  var G__5250__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__5250__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__5250 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5250__2.call(this, self__, k);
      case 3:
        return G__5250__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__5250
}();
cljs.core.ObjMap.prototype.apply = function(self__, args5249) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args5249.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while(true) {
    if(cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__5251 = cljs.core.rest.call(null, keys__$1);
        var G__5252 = init__$2;
        keys__$1 = G__5251;
        init__$1 = G__5252;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__5248_SHARP_) {
      return cljs.core.vector.call(null, p1__5248_SHARP_, self__.strobj[p1__5248_SHARP_])
    }, self__.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = goog.isString(k);
    if(and__3941__auto__) {
      return!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)
    }else {
      return and__3941__auto__
    }
  }()) {
    var new_keys = self__.keys.slice();
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash)
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(arr[i] == null) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__5253 = i + 2;
          i = G__5253;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(function() {
        var k_SINGLEQUOTE_ = arr[i];
        var and__3941__auto__ = k_SINGLEQUOTE_ instanceof cljs.core.Keyword;
        if(and__3941__auto__) {
          return kstr === k_SINGLEQUOTE_.fqn
        }else {
          return and__3941__auto__
        }
      }()) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__5254 = i + 2;
          i = G__5254;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(function() {
        var k_SINGLEQUOTE_ = arr[i];
        var and__3941__auto__ = k_SINGLEQUOTE_ instanceof cljs.core.Symbol;
        if(and__3941__auto__) {
          return kstr === k_SINGLEQUOTE_.str
        }else {
          return and__3941__auto__
        }
      }()) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__5255 = i + 2;
          i = G__5255;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(k === arr[i]) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__5256 = i + 2;
          i = G__5256;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, k, arr[i])) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__5257 = i + 2;
          i = G__5257;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if(k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k)
  }else {
    if(function() {
      var or__3943__auto__ = goog.isString(k);
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return typeof k === "number"
      }
    }()) {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k)
    }else {
      if(k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k)
      }else {
        if(k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k)
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k)
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_5258 = 0;
  while(true) {
    if(i_5258 < l) {
      narr[i_5258] = arr[i_5258];
      var G__5259 = i_5258 + 1;
      i_5258 = G__5259;
      continue
    }else {
    }
    break
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr
};
goog.provide("cljs.core.PersistentArrayMapSeq");
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/PersistentArrayMapSeq")
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return(self__.arr.length - self__.i) / 2
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.arr[self__.i], self__.arr[self__.i + 1]], true)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__._meta
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta)
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if(i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta)
  }else {
    return null
  }
};
goog.provide("cljs.core.PersistentArrayMap");
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, self__.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3364__auto__ = self__.__hash;
  if(!(h__3364__auto__ == null)) {
    return h__3364__auto__
  }else {
    var h__3364__auto____$1 = cljs.core.hash_imap.call(null, coll);
    self__.__hash = h__3364__auto____$1;
    return h__3364__auto____$1
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var idx = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx === -1) {
    return not_found
  }else {
    return self__.arr[idx + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var idx = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx === -1) {
    if(self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null)
    }else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll), k, v), self__.meta)
    }
  }else {
    if(v === self__.arr[idx + 1]) {
      return coll
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var arr__$1 = function() {
          var G__5261 = self__.arr.slice();
          G__5261[idx + 1] = v;
          return G__5261
        }();
        return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__5262 = null;
  var G__5262__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__5262__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__5262 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5262__2.call(this, self__, k);
      case 3:
        return G__5262__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__5262
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args5260) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args5260.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__5263 = i + 2;
        var G__5264 = init__$2;
        i = G__5263;
        init__$1 = G__5264;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var idx = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if(new_len === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while(true) {
        if(s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null)
        }else {
          if(cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__5265 = s + 2;
            var G__5266 = d;
            s = G__5265;
            d = G__5266;
            continue
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              new_arr[d] = self__.arr[s];
              new_arr[d + 1] = self__.arr[s + 1];
              var G__5267 = s + 2;
              var G__5268 = d + 2;
              s = G__5267;
              d = G__5268;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash)
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : arr.slice();
  var cnt = arr__$1.length / 2;
  return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null)
};
goog.provide("cljs.core.TransientArrayMap");
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__5269_5271 = self__.arr;
      G__5269_5271.pop();
      G__5269_5271.pop();
      self__.len = self__.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx === -1) {
      if(self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val)
      }
    }else {
      if(val === self__.arr[idx + 1]) {
        return tcoll
      }else {
        self__.arr[idx + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    if(function() {
      var G__5270 = o;
      if(G__5270) {
        if(function() {
          var or__3943__auto__ = G__5270.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__5270.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__5270.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__5270)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__5270)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while(true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if(cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__5272 = cljs.core.next.call(null, es);
          var G__5273 = tcoll__$1.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__$1, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__5272;
          tcoll__$1 = G__5273;
          continue
        }else {
          return tcoll__$1
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx === -1) {
      return not_found
    }else {
      return self__.arr[idx + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr)
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while(true) {
    if(i < len) {
      var G__5274 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__5275 = i + 2;
      out = G__5274;
      i = G__5275;
      continue
    }else {
      return out
    }
    break
  }
};
goog.provide("cljs.core.Box");
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__3487__auto__, writer__3488__auto__, opts__3489__auto__) {
  return cljs.core._write.call(null, writer__3488__auto__, "cljs.core/Box")
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val)
};
cljs.core.key_test = function key_test(key, other) {
  if(key === other) {
    return true
  }else {
    if(cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core._EQ_.call(null, key, other)
      }else {
        return null
      }
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__5278 = arr.slice();
    G__5278[i] = a;
    return G__5278
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__5279 = arr.slice();
    G__5279[i] = a;
    G__5279[j] = b;
    return G__5279
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if(!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1])
        }else {
          var node = arr[i + 1];
          if(!(node == null)) {
            return node.kv_reduce(f, init__$1)
          }else {
            return init__$1
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__5280 = i + 2;
        var G__5281 = init__$2;
        i = G__5280;
        init__$1 = G__5281;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
goog.provide("cljs.core.BitmapIndexedNode");
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if(self__.bitmap === bit) {
    return null
  }else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if(2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable
    }else {
      if(n >= 16) {
        var nodes = new Array(32);
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_5282 = 0;
        var j_5283 = 0;
        while(true) {
          if(i_5282 < 32) {
            if((self__.bitmap >>> i_5282 & 1) === 0) {
              var G__5284 = i_5282 + 1;
              var G__5285 = j_5283;
              i_5282 = G__5284;
              j_5283 = G__5285;
              continue
            }else {
              nodes[i_5282] = !(self__.arr[j_5283] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_5283]), self__.arr[j_5283], self__.arr[j_5283 + 1], added_leaf_QMARK_) : self__.arr[j_5283 + 1];
              var G__5286 = i_5282 + 1;
              var G__5287 = j_5283 + 2;
              i_5282 = G__5286;
              j_5283 = G__5287;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_arr = new Array(2 * (n + 4));
          cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
          new_arr[2 * idx] = key;
          new_arr[2 * idx + 1] = val;
          cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
          added_leaf_QMARK_.val = true;
          var editable = inode.ensure_editable(edit__$1);
          editable.arr = new_arr;
          editable.bitmap = editable.bitmap | bit;
          return editable
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        if(val === val_or_node) {
          return inode
        }else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val)
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return inode
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        if(!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n)
        }else {
          if(self__.bitmap === bit) {
            return null
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return inode.edit_and_remove_pair(edit__$1, bit, idx)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return not_found
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil, val_or_node], true)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return inode
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if(n === val_or_node) {
        return inode
      }else {
        if(!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n))
        }else {
          if(self__.bitmap === bit) {
            return null
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx))
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if(n >= 16) {
      var nodes = new Array(32);
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_5288 = 0;
      var j_5289 = 0;
      while(true) {
        if(i_5288 < 32) {
          if((self__.bitmap >>> i_5288 & 1) === 0) {
            var G__5290 = i_5288 + 1;
            var G__5291 = j_5289;
            i_5288 = G__5290;
            j_5289 = G__5291;
            continue
          }else {
            nodes[i_5288] = !(self__.arr[j_5289] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_5289]), self__.arr[j_5289], self__.arr[j_5289 + 1], added_leaf_QMARK_) : self__.arr[j_5289 + 1];
            var G__5292 = i_5288 + 1;
            var G__5293 = j_5289 + 2;
            i_5288 = G__5292;
            j_5289 = G__5293;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes)
    }else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr)
    }
  }else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        if(val === val_or_node) {
          return inode
        }else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val))
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return not_found
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr)
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, new Array(0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while(true) {
    if(i < len) {
      if(function() {
        var and__3941__auto__ = !(i === idx);
        if(and__3941__auto__) {
          return!(arr[i] == null)
        }else {
          return and__3941__auto__
        }
      }()) {
        new_arr[j] = arr[i];
        var G__5294 = i + 1;
        var G__5295 = j + 2;
        var G__5296 = bitmap | 1 << i;
        i = G__5294;
        j = G__5295;
        bitmap = G__5296;
        continue
      }else {
        var G__5297 = i + 1;
        var G__5298 = j;
        var G__5299 = bitmap;
        i = G__5297;
        j = G__5298;
        bitmap = G__5299;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr)
    }
    break
  }
};
goog.provide("cljs.core.ArrayNode");
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable
  }else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    return inode
  }else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      if(n == null) {
        if(self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx)
        }else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    return new cljs.core.ArrayNode(e, self__.cnt, self__.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var node = self__.arr[i];
      if(!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2)
        }else {
          var G__5300 = i + 1;
          var G__5301 = init__$2;
          i = G__5300;
          init__$1 = G__5301;
          continue
        }
      }else {
        var G__5302 = i + 1;
        var G__5303 = init__$1;
        i = G__5302;
        init__$1 = G__5303;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if(n === node) {
      return inode
    }else {
      if(n == null) {
        if(self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx)
        }else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
        }else {
          return null
        }
      }
    }
  }else {
    return inode
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr)
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while(true) {
    if(i < lim) {
      if(cljs.core.key_test.call(null, key, arr[i])) {
        return i
      }else {
        var G__5304 = i + 2;
        i = G__5304;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
goog.provide("cljs.core.HashCollisionNode");
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if(hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if(idx === -1) {
      if(self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable
      }else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr)
      }
    }else {
      if(self__.arr[idx + 1] === val) {
        return inode
      }else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx === -1) {
    return inode
  }else {
    removed_leaf_QMARK_[0] = true;
    if(self__.cnt === 1) {
      return null
    }else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return cljs.core.PersistentVector.fromArray([self__.arr[idx], self__.arr[idx + 1]], true)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx === -1) {
    return inode
  }else {
    if(self__.cnt === 1) {
      return null
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if(hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if(idx === -1) {
      var len = self__.arr.length;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr)
    }else {
      if(cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode
      }else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1]
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode
  }else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array)
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr)
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if(key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if(key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node
}();
goog.provide("cljs.core.NodeSeq");
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3364__auto__ = self__.__hash;
  if(!(h__3364__auto__ == null)) {
    return h__3364__auto__
  }else {
    var h__3364__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3364__auto____$1;
    return h__3364__auto____$1
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  if(self__.s == null) {
    return cljs.core.PersistentVector.fromArray([self__.nodes[self__.i], self__.nodes[self__.i + 1]], true)
  }else {
    return cljs.core.first.call(null, self__.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash)
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len = nodes.length;
      var j = i;
      while(true) {
        if(j < len) {
          if(!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null)
          }else {
            var temp__4090__auto__ = nodes[j + 1];
            if(cljs.core.truth_(temp__4090__auto__)) {
              var node = temp__4090__auto__;
              var temp__4090__auto____$1 = node.inode_seq();
              if(cljs.core.truth_(temp__4090__auto____$1)) {
                var node_seq = temp__4090__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null)
              }else {
                var G__5305 = j + 2;
                j = G__5305;
                continue
              }
            }else {
              var G__5306 = j + 2;
              j = G__5306;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
goog.provide("cljs.core.ArrayNodeSeq");
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3364__auto__ = self__.__hash;
  if(!(h__3364__auto__ == null)) {
    return h__3364__auto__
  }else {
    var h__3364__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3364__auto____$1;
    return h__3364__auto____$1
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, self__.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash)
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len = nodes.length;
      var j = i;
      while(true) {
        if(j < len) {
          var temp__4090__auto__ = nodes[j];
          if(cljs.core.truth_(temp__4090__auto__)) {
            var nj = temp__4090__auto__;
            var temp__4090__auto____$1 = nj.inode_seq();
            if(cljs.core.truth_(temp__4090__auto____$1)) {
              var ns = temp__4090__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null)
            }else {
              var G__5307 = j + 1;
              j = G__5307;
              continue
            }
          }else {
            var G__5308 = j + 1;
            j = G__5308;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
goog.provide("cljs.core.PersistentHashMap");
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3364__auto__ = self__.__hash;
  if(!(h__3364__auto__ == null)) {
    return h__3364__auto__
  }else {
    var h__3364__auto____$1 = cljs.core.hash_imap.call(null, coll);
    self__.__hash = h__3364__auto____$1;
    return h__3364__auto____$1
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return not_found
    }
  }else {
    if(self__.root == null) {
      return not_found
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  if(k == null) {
    if(function() {
      var and__3941__auto__ = self__.has_nil_QMARK_;
      if(and__3941__auto__) {
        return v === self__.nil_val
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if(new_root === self__.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  if(k == null) {
    return self__.has_nil_QMARK_
  }else {
    if(self__.root == null) {
      return false
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__5310 = null;
  var G__5310__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__5310__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__5310 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5310__2.call(this, self__, k);
      case 3:
        return G__5310__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__5310
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args5309) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args5309.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1)
  }else {
    if(!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return init__$1
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if(self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, self__.nil_val], true), s)
    }else {
      return s
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(self__.root == null) {
      return coll
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root === self__.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash)
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i < len) {
      var G__5311 = i + 1;
      var G__5312 = cljs.core.assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__5311;
      out = G__5312;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out)
    }
    break
  }
};
goog.provide("cljs.core.TransientHashMap");
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return null
    }
  }else {
    if(self__.root == null) {
      return null
    }else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return not_found
    }
  }else {
    if(self__.root == null) {
      return not_found
    }else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  if(self__.edit) {
    return self__.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(function() {
      var G__5313 = o;
      if(G__5313) {
        if(function() {
          var or__3943__auto__ = G__5313.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__5313.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__5313.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__5313)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__5313)
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while(true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if(cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__5314 = cljs.core.next.call(null, es);
          var G__5315 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__5314;
          tcoll__$1 = G__5315;
          continue
        }else {
          return tcoll__$1
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(k == null) {
      if(self__.nil_val === v) {
      }else {
        self__.nil_val = v
      }
      if(self__.has_nil_QMARK_) {
      }else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true
      }
      return tcoll
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if(node === self__.root) {
      }else {
        self__.root = node
      }
      if(added_leaf_QMARK_.val) {
        self__.count = self__.count + 1
      }else {
      }
      return tcoll
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(k == null) {
      if(self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll
      }else {
        return tcoll
      }
    }else {
      if(self__.root == null) {
        return tcoll
      }else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if(node === self__.root) {
        }else {
          self__.root = node
        }
        if(cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1
        }else {
        }
        return tcoll
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val)
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while(true) {
    if(!(t == null)) {
      var G__5316 = ascending_QMARK_ ? t.left : t.right;
      var G__5317 = cljs.core.conj.call(null, stack__$1, t);
      t = G__5316;
      stack__$1 = G__5317;
      continue
    }else {
      return stack__$1
    }
    break
  }
};
goog.provide("cljs.core.PersistentTreeMapSeq");
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3364__auto__ = self__.__hash;
  if(!(h__3364__auto__ == null)) {
    return h__3364__auto__
  }else {
    var h__3364__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3364__auto____$1;
    return h__3364__auto____$1
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return self__.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  return cljs.core.peek.call(null, self__.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if(!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash)
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(ins instanceof cljs.core.RedNode) {
    if(ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(ins instanceof cljs.core.RedNode) {
    if(ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3941__auto__ = right instanceof cljs.core.RedNode;
        if(and__3941__auto__) {
          return right.left instanceof cljs.core.BlackNode
        }else {
          return and__3941__auto__
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3941__auto__ = left instanceof cljs.core.RedNode;
        if(and__3941__auto__) {
          return left.right instanceof cljs.core.BlackNode
        }else {
          return and__3941__auto__
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1)
  }else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2)
    }else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if(cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3)
      }else {
        return init__$3
      }
    }
  }
};
goog.provide("cljs.core.BlackNode");
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3364__auto__ = self__.__hash;
  if(!(h__3364__auto__ == null)) {
    return h__3364__auto__
  }else {
    var h__3364__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3364__auto____$1;
    return h__3364__auto____$1
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__5319 = null;
  var G__5319__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(node, k)
  };
  var G__5319__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(node, k, not_found)
  };
  G__5319 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5319__2.call(this, self__, k);
      case 3:
        return G__5319__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__5319
}();
cljs.core.BlackNode.prototype.apply = function(self__, args5318) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args5318.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.key, self__.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  return self__.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  return self__.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node)
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null)
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.list.call(null, self__.key, self__.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  return self__.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash)
};
goog.provide("cljs.core.RedNode");
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3364__auto__ = self__.__hash;
  if(!(h__3364__auto__ == null)) {
    return h__3364__auto__
  }else {
    var h__3364__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3364__auto____$1;
    return h__3364__auto____$1
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__5321 = null;
  var G__5321__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(node, k)
  };
  var G__5321__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(node, k, not_found)
  };
  G__5321 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5321__2.call(this, self__, k);
      case 3:
        return G__5321__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__5321
}();
cljs.core.RedNode.prototype.apply = function(self__, args5320) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args5320.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.key, self__.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  return self__.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  return self__.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if(self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null)
  }else {
    if(self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if(self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null)
  }else {
    if(self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.list.call(null, self__.key, self__.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  return self__.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash)
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c = comp.call(null, k, tree.key);
    if(c === 0) {
      found[0] = tree;
      return null
    }else {
      if(c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins == null)) {
          return tree.add_left(ins)
        }else {
          return null
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins == null)) {
            return tree.add_right(ins)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(left instanceof cljs.core.RedNode) {
        if(right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if(app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var app = tree_map_append.call(null, left.right, right.left);
            if(app instanceof cljs.core.RedNode) {
              return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if(c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3943__auto__ = !(del == null);
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var del = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3943__auto__ = !(del == null);
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(tree.right instanceof cljs.core.BlackNode) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if(c === 0) {
    return tree.replace(tk, v, tree.left, tree.right)
  }else {
    if(c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
goog.provide("cljs.core.PersistentTreeMap");
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3364__auto__ = self__.__hash;
  if(!(h__3364__auto__ == null)) {
    return h__3364__auto__
  }else {
    var h__3364__auto____$1 = cljs.core.hash_imap.call(null, coll);
    self__.__hash = h__3364__auto____$1;
    return h__3364__auto____$1
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var n = coll.entry_at(k);
  if(!(n == null)) {
    return n.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if(t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if(cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__5323 = null;
  var G__5323__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__5323__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__5323 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5323__2.call(this, self__, k);
      case 3:
        return G__5323__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__5323
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args5322) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args5322.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  if(!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while(true) {
    if(!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if(c === 0) {
        return t
      }else {
        if(c < 0) {
          var G__5324 = t.left;
          t = G__5324;
          continue
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var G__5325 = t.right;
            t = G__5325;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  if(self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while(true) {
      if(!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if(c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c < 0) {
              var G__5326 = cljs.core.conj.call(null, stack, t);
              var G__5327 = t.left;
              stack = G__5326;
              t = G__5327;
              continue
            }else {
              var G__5328 = stack;
              var G__5329 = t.right;
              stack = G__5328;
              t = G__5329;
              continue
            }
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              if(c > 0) {
                var G__5330 = cljs.core.conj.call(null, stack, t);
                var G__5331 = t.right;
                stack = G__5330;
                t = G__5331;
                continue
              }else {
                var G__5332 = stack;
                var G__5333 = t.left;
                stack = G__5332;
                t = G__5333;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack == null) {
          return null
        }else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null)
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  return self__.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if(t == null) {
    if(cljs.core.nth.call(null, found, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null)
  }
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash)
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in$) {
        var G__5334 = cljs.core.nnext.call(null, in$);
        var G__5335 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__5334;
        out = G__5335;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__5336) {
    var keyvals = cljs.core.seq(arglist__5336);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__5337) {
    var keyvals = cljs.core.seq(arglist__5337);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = {};
    var kvs = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__5338 = cljs.core.nnext.call(null, kvs);
        kvs = G__5338;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks, obj)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__5339) {
    var keyvals = cljs.core.seq(arglist__5339);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in$) {
        var G__5340 = cljs.core.nnext.call(null, in$);
        var G__5341 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__5340;
        out = G__5341;
        continue
      }else {
        return out
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__5342) {
    var keyvals = cljs.core.seq(arglist__5342);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while(true) {
      if(in$) {
        var G__5343 = cljs.core.nnext.call(null, in$);
        var G__5344 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__5343;
        out = G__5344;
        continue
      }else {
        return out
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__5345) {
    var comparator = cljs.core.first(arglist__5345);
    var keyvals = cljs.core.rest(arglist__5345);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
goog.provide("cljs.core.KeySeq");
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/KeySeq")
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var nseq = function() {
    var G__5346 = self__.mseq;
    if(G__5346) {
      if(function() {
        var or__3943__auto__ = G__5346.cljs$lang$protocol_mask$partition0$ & 128;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__5346.cljs$core$INext$
        }
      }()) {
        return true
      }else {
        if(!G__5346.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__5346)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__5346)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(nseq == null) {
    return null
  }else {
    return new cljs.core.KeySeq(nseq, self__._meta)
  }
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me)
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var nseq = function() {
    var G__5347 = self__.mseq;
    if(G__5347) {
      if(function() {
        var or__3943__auto__ = G__5347.cljs$lang$protocol_mask$partition0$ & 128;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__5347.cljs$core$INext$
        }
      }()) {
        return true
      }else {
        if(!G__5347.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__5347)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__5347)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta)
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__._meta
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta)
};
cljs.core.keys = function keys(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if(temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.KeySeq(mseq, null)
  }else {
    return null
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
goog.provide("cljs.core.ValSeq");
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/ValSeq")
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var nseq = function() {
    var G__5348 = self__.mseq;
    if(G__5348) {
      if(function() {
        var or__3943__auto__ = G__5348.cljs$lang$protocol_mask$partition0$ & 128;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__5348.cljs$core$INext$
        }
      }()) {
        return true
      }else {
        if(!G__5348.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__5348)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__5348)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(nseq == null) {
    return null
  }else {
    return new cljs.core.ValSeq(nseq, self__._meta)
  }
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me)
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var nseq = function() {
    var G__5349 = self__.mseq;
    if(G__5349) {
      if(function() {
        var or__3943__auto__ = G__5349.cljs$lang$protocol_mask$partition0$ & 128;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__5349.cljs$core$INext$
        }
      }()) {
        return true
      }else {
        if(!G__5349.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__5349)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__5349)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta)
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__._meta
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta)
};
cljs.core.vals = function vals(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if(temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.ValSeq(mseq, null)
  }else {
    return null
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__5350_SHARP_, p2__5351_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3943__auto__ = p1__5350_SHARP_;
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return cljs.core.PersistentArrayMap.EMPTY
          }
        }(), p2__5351_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__5352) {
    var maps = cljs.core.seq(arglist__5352);
    return merge__delegate(maps)
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v))
        }else {
          return cljs.core.assoc.call(null, m, k, v)
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3943__auto__ = m1;
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return cljs.core.PersistentArrayMap.EMPTY
            }
          }(), cljs.core.seq.call(null, m2))
        }
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__5353) {
    var f = cljs.core.first(arglist__5353);
    var maps = cljs.core.rest(arglist__5353);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789));
      var G__5354 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__5355 = cljs.core.next.call(null, keys);
      ret = G__5354;
      keys = G__5355;
      continue
    }else {
      return ret
    }
    break
  }
};
goog.provide("cljs.core.PersistentHashSet");
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3364__auto__ = self__.__hash;
  if(!(h__3364__auto__ == null)) {
    return h__3364__auto__
  }else {
    var h__3364__auto____$1 = cljs.core.hash_iset.call(null, coll);
    self__.__hash = h__3364__auto____$1;
    return h__3364__auto____$1
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__5358 = null;
  var G__5358__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__5358__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__5358 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5358__2.call(this, self__, k);
      case 3:
        return G__5358__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__5358
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args5357) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args5357.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.keys.call(null, self__.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._count.call(null, self__.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var and__3941__auto__ = cljs.core.set_QMARK_.call(null, other);
  if(and__3941__auto__) {
    var and__3941__auto____$1 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3941__auto____$1) {
      return cljs.core.every_QMARK_.call(null, function(p1__5356_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__5356_SHARP_)
      }, other)
    }else {
      return and__3941__auto____$1
    }
  }else {
    return and__3941__auto__
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash)
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if(len / 2 <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : items.slice();
    return new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.fromArray.call(null, arr, true), null)
  }else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while(true) {
      if(i < len) {
        var G__5359 = i + 2;
        var G__5360 = cljs.core.conj_BANG_.call(null, out, items[i]);
        i = G__5359;
        out = G__5360;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  }
};
goog.provide("cljs.core.TransientHashSet");
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__5362 = null;
  var G__5362__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__5362__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__5362 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5362__2.call(this, self__, k);
      case 3:
        return G__5362__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__5362
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args5361) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args5361.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  if(cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  return cljs.core.count.call(null, self__.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null)
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map)
};
goog.provide("cljs.core.PersistentTreeSet");
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3364__auto__ = self__.__hash;
  if(!(h__3364__auto__ == null)) {
    return h__3364__auto__
  }else {
    var h__3364__auto____$1 = cljs.core.hash_iset.call(null, coll);
    self__.__hash = h__3364__auto____$1;
    return h__3364__auto____$1
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var n = self__.tree_map.entry_at(v);
  if(!(n == null)) {
    return n.key
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__5365 = null;
  var G__5365__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__5365__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__5365 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5365__2.call(this, self__, k);
      case 3:
        return G__5365__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__5365
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args5364) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args5364.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._comparator.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.keys.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.count.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var and__3941__auto__ = cljs.core.set_QMARK_.call(null, other);
  if(and__3941__auto__) {
    var and__3941__auto____$1 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3941__auto____$1) {
      return cljs.core.every_QMARK_.call(null, function(p1__5363_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__5363_SHARP_)
      }, other)
    }else {
      return and__3941__auto____$1
    }
  }else {
    return and__3941__auto__
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash)
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__3715__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while(true) {
      if(i < a__3715__auto__.length) {
        var G__5366 = i + 1;
        var G__5367 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__5366;
        res = G__5367;
        continue
      }else {
        return res
      }
      break
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret)
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if(in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY
  }else {
    if(in$ instanceof cljs.core.IndexedSeq) {
      return cljs.core.set_from_indexed_seq.call(null, in$)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var in$__$1 = in$;
        var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
        while(true) {
          if(!(in$__$1 == null)) {
            var G__5368 = cljs.core._next.call(null, in$__$1);
            var G__5369 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
            in$__$1 = G__5368;
            out = G__5369;
            continue
          }else {
            return cljs.core._persistent_BANG_.call(null, out)
          }
          break
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__5370__delegate = function(keys) {
      return cljs.core.set.call(null, keys)
    };
    var G__5370 = function(var_args) {
      var keys = null;
      if(arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__5370__delegate.call(this, keys)
    };
    G__5370.cljs$lang$maxFixedArity = 0;
    G__5370.cljs$lang$applyTo = function(arglist__5371) {
      var keys = cljs.core.seq(arglist__5371);
      return G__5370__delegate(keys)
    };
    G__5370.cljs$core$IFn$_invoke$arity$variadic = G__5370__delegate;
    return G__5370
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__5372) {
    var keys = cljs.core.seq(arglist__5372);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__5373) {
    var comparator = cljs.core.first(arglist__5373);
    var keys = cljs.core.rest(arglist__5373);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__5374_SHARP_) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, p1__5374_SHARP_);
      if(cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.second.call(null, e)
      }else {
        return p1__5374_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__5381, seen__$1) {
        while(true) {
          var vec__5382 = p__5381;
          var f = cljs.core.nth.call(null, vec__5382, 0, null);
          var xs__$1 = vec__5382;
          var temp__4092__auto__ = cljs.core.seq.call(null, xs__$1);
          if(temp__4092__auto__) {
            var s = temp__4092__auto__;
            if(cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__5383 = cljs.core.rest.call(null, s);
              var G__5384 = seen__$1;
              p__5381 = G__5383;
              seen__$1 = G__5384;
              continue
            }else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null, null)
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while(true) {
    if(cljs.core.next.call(null, s__$1)) {
      var G__5385 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__5386 = cljs.core.next.call(null, s__$1);
      ret = G__5385;
      s__$1 = G__5386;
      continue
    }else {
      return cljs.core.seq.call(null, ret)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(function() {
    var G__5388 = x;
    if(G__5388) {
      if(function() {
        var or__3943__auto__ = G__5388.cljs$lang$protocol_mask$partition1$ & 4096;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__5388.cljs$core$INamed$
        }
      }()) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._name.call(null, x)
  }else {
    if(typeof x === "string") {
      return x
    }else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var G__5390 = x;
    if(G__5390) {
      if(function() {
        var or__3943__auto__ = G__5390.cljs$lang$protocol_mask$partition1$ & 4096;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__5390.cljs$core$INamed$
        }
      }()) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._namespace.call(null, x)
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3941__auto__ = ks;
      if(and__3941__auto__) {
        return vs
      }else {
        return and__3941__auto__
      }
    }()) {
      var G__5391 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__5392 = cljs.core.next.call(null, ks);
      var G__5393 = cljs.core.next.call(null, vs);
      map = G__5391;
      ks = G__5392;
      vs = G__5393;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, map)
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__5396__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__5394_SHARP_, p2__5395_SHARP_) {
        return max_key.call(null, k, p1__5394_SHARP_, p2__5395_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__5396 = function(k, x, y, var_args) {
      var more = null;
      if(arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__5396__delegate.call(this, k, x, y, more)
    };
    G__5396.cljs$lang$maxFixedArity = 3;
    G__5396.cljs$lang$applyTo = function(arglist__5397) {
      var k = cljs.core.first(arglist__5397);
      arglist__5397 = cljs.core.next(arglist__5397);
      var x = cljs.core.first(arglist__5397);
      arglist__5397 = cljs.core.next(arglist__5397);
      var y = cljs.core.first(arglist__5397);
      var more = cljs.core.rest(arglist__5397);
      return G__5396__delegate(k, x, y, more)
    };
    G__5396.cljs$core$IFn$_invoke$arity$variadic = G__5396__delegate;
    return G__5396
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__5400__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__5398_SHARP_, p2__5399_SHARP_) {
        return min_key.call(null, k, p1__5398_SHARP_, p2__5399_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__5400 = function(k, x, y, var_args) {
      var more = null;
      if(arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__5400__delegate.call(this, k, x, y, more)
    };
    G__5400.cljs$lang$maxFixedArity = 3;
    G__5400.cljs$lang$applyTo = function(arglist__5401) {
      var k = cljs.core.first(arglist__5401);
      arglist__5401 = cljs.core.next(arglist__5401);
      var x = cljs.core.first(arglist__5401);
      arglist__5401 = cljs.core.next(arglist__5401);
      var y = cljs.core.first(arglist__5401);
      var more = cljs.core.rest(arglist__5401);
      return G__5400__delegate(k, x, y, more)
    };
    G__5400.cljs$core$IFn$_invoke$arity$variadic = G__5400__delegate;
    return G__5400
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)))
      }else {
        return null
      }
    }, null, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, null, cljs.core._GT__EQ_, null], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__4092__auto__)) {
        var vec__5404 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__5404, 0, null);
        var s = vec__5404;
        if(cljs.core.truth_(include.call(null, e))) {
          return s
        }else {
          return cljs.core.next.call(null, s)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var vec__5405 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__5405, 0, null);
      var s = vec__5405;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, null, cljs.core._LT__EQ_, null], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__4092__auto__)) {
        var vec__5408 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__5408, 0, null);
        var s = vec__5408;
        if(cljs.core.truth_(include.call(null, e))) {
          return s
        }else {
          return cljs.core.next.call(null, s)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var vec__5409 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__5409, 0, null);
      var s = vec__5409;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq
}();
goog.provide("cljs.core.Range");
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var h__3364__auto__ = self__.__hash;
  if(!(h__3364__auto__ == null)) {
    return h__3364__auto__
  }else {
    var h__3364__auto____$1 = cljs.core.hash_coll.call(null, rng);
    self__.__hash = h__3364__auto____$1;
    return h__3364__auto____$1
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  if(self__.step > 0) {
    if(self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
    }else {
      return null
    }
  }else {
    if(self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  if(self__.step > 0) {
    if(self__.start < self__.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(self__.start > self__.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((self__.end - self__.start) / self__.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  return self__.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  return self__.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return self__.start + n * self__.step
  }else {
    if(function() {
      var and__3941__auto__ = self__.start > self__.end;
      if(and__3941__auto__) {
        return self__.step === 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return self__.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return self__.start + n * self__.step
  }else {
    if(function() {
      var and__3941__auto__ = self__.start > self__.end;
      if(and__3941__auto__) {
        return self__.step === 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return self__.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash)
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)))
    }else {
      return null
    }
  }, null, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      var fst = cljs.core.first.call(null, s);
      var fv = f.call(null, fst);
      var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv) {
        return function(p1__5410_SHARP_) {
          return cljs.core._EQ_.call(null, fv, f.call(null, p1__5410_SHARP_))
        }
      }(fst, fv), cljs.core.next.call(null, s)));
      return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))))
    }else {
      return null
    }
  }, null, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4090__auto__) {
        var s = temp__4090__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s))
      }else {
        return null
      }
    }, null, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__5421 = null;
      var G__5421__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__5421__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__5421__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__5421__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__5421__4 = function() {
        var G__5422__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__5422 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__5422__delegate.call(this, x, y, z, args)
        };
        G__5422.cljs$lang$maxFixedArity = 3;
        G__5422.cljs$lang$applyTo = function(arglist__5423) {
          var x = cljs.core.first(arglist__5423);
          arglist__5423 = cljs.core.next(arglist__5423);
          var y = cljs.core.first(arglist__5423);
          arglist__5423 = cljs.core.next(arglist__5423);
          var z = cljs.core.first(arglist__5423);
          var args = cljs.core.rest(arglist__5423);
          return G__5422__delegate(x, y, z, args)
        };
        G__5422.cljs$core$IFn$_invoke$arity$variadic = G__5422__delegate;
        return G__5422
      }();
      G__5421 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__5421__0.call(this);
          case 1:
            return G__5421__1.call(this, x);
          case 2:
            return G__5421__2.call(this, x, y);
          case 3:
            return G__5421__3.call(this, x, y, z);
          default:
            return G__5421__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__5421.cljs$lang$maxFixedArity = 3;
      G__5421.cljs$lang$applyTo = G__5421__4.cljs$lang$applyTo;
      return G__5421
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__5424 = null;
      var G__5424__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__5424__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__5424__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__5424__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__5424__4 = function() {
        var G__5425__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__5425 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__5425__delegate.call(this, x, y, z, args)
        };
        G__5425.cljs$lang$maxFixedArity = 3;
        G__5425.cljs$lang$applyTo = function(arglist__5426) {
          var x = cljs.core.first(arglist__5426);
          arglist__5426 = cljs.core.next(arglist__5426);
          var y = cljs.core.first(arglist__5426);
          arglist__5426 = cljs.core.next(arglist__5426);
          var z = cljs.core.first(arglist__5426);
          var args = cljs.core.rest(arglist__5426);
          return G__5425__delegate(x, y, z, args)
        };
        G__5425.cljs$core$IFn$_invoke$arity$variadic = G__5425__delegate;
        return G__5425
      }();
      G__5424 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__5424__0.call(this);
          case 1:
            return G__5424__1.call(this, x);
          case 2:
            return G__5424__2.call(this, x, y);
          case 3:
            return G__5424__3.call(this, x, y, z);
          default:
            return G__5424__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__5424.cljs$lang$maxFixedArity = 3;
      G__5424.cljs$lang$applyTo = G__5424__4.cljs$lang$applyTo;
      return G__5424
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__5427 = null;
      var G__5427__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__5427__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__5427__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__5427__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__5427__4 = function() {
        var G__5428__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__5428 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__5428__delegate.call(this, x, y, z, args)
        };
        G__5428.cljs$lang$maxFixedArity = 3;
        G__5428.cljs$lang$applyTo = function(arglist__5429) {
          var x = cljs.core.first(arglist__5429);
          arglist__5429 = cljs.core.next(arglist__5429);
          var y = cljs.core.first(arglist__5429);
          arglist__5429 = cljs.core.next(arglist__5429);
          var z = cljs.core.first(arglist__5429);
          var args = cljs.core.rest(arglist__5429);
          return G__5428__delegate(x, y, z, args)
        };
        G__5428.cljs$core$IFn$_invoke$arity$variadic = G__5428__delegate;
        return G__5428
      }();
      G__5427 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__5427__0.call(this);
          case 1:
            return G__5427__1.call(this, x);
          case 2:
            return G__5427__2.call(this, x, y);
          case 3:
            return G__5427__3.call(this, x, y, z);
          default:
            return G__5427__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__5427.cljs$lang$maxFixedArity = 3;
      G__5427.cljs$lang$applyTo = G__5427__4.cljs$lang$applyTo;
      return G__5427
    }()
  };
  var juxt__4 = function() {
    var G__5430__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__5431 = null;
        var G__5431__0 = function() {
          return cljs.core.reduce.call(null, function(p1__5411_SHARP_, p2__5412_SHARP_) {
            return cljs.core.conj.call(null, p1__5411_SHARP_, p2__5412_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__5431__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__5413_SHARP_, p2__5414_SHARP_) {
            return cljs.core.conj.call(null, p1__5413_SHARP_, p2__5414_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__5431__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__5415_SHARP_, p2__5416_SHARP_) {
            return cljs.core.conj.call(null, p1__5415_SHARP_, p2__5416_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__5431__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__5417_SHARP_, p2__5418_SHARP_) {
            return cljs.core.conj.call(null, p1__5417_SHARP_, p2__5418_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__5431__4 = function() {
          var G__5432__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__5419_SHARP_, p2__5420_SHARP_) {
              return cljs.core.conj.call(null, p1__5419_SHARP_, cljs.core.apply.call(null, p2__5420_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__$1)
          };
          var G__5432 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__5432__delegate.call(this, x, y, z, args)
          };
          G__5432.cljs$lang$maxFixedArity = 3;
          G__5432.cljs$lang$applyTo = function(arglist__5433) {
            var x = cljs.core.first(arglist__5433);
            arglist__5433 = cljs.core.next(arglist__5433);
            var y = cljs.core.first(arglist__5433);
            arglist__5433 = cljs.core.next(arglist__5433);
            var z = cljs.core.first(arglist__5433);
            var args = cljs.core.rest(arglist__5433);
            return G__5432__delegate(x, y, z, args)
          };
          G__5432.cljs$core$IFn$_invoke$arity$variadic = G__5432__delegate;
          return G__5432
        }();
        G__5431 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__5431__0.call(this);
            case 1:
              return G__5431__1.call(this, x);
            case 2:
              return G__5431__2.call(this, x, y);
            case 3:
              return G__5431__3.call(this, x, y, z);
            default:
              return G__5431__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__5431.cljs$lang$maxFixedArity = 3;
        G__5431.cljs$lang$applyTo = G__5431__4.cljs$lang$applyTo;
        return G__5431
      }()
    };
    var G__5430 = function(f, g, h, var_args) {
      var fs = null;
      if(arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__5430__delegate.call(this, f, g, h, fs)
    };
    G__5430.cljs$lang$maxFixedArity = 3;
    G__5430.cljs$lang$applyTo = function(arglist__5434) {
      var f = cljs.core.first(arglist__5434);
      arglist__5434 = cljs.core.next(arglist__5434);
      var g = cljs.core.first(arglist__5434);
      arglist__5434 = cljs.core.next(arglist__5434);
      var h = cljs.core.first(arglist__5434);
      var fs = cljs.core.rest(arglist__5434);
      return G__5430__delegate(f, g, h, fs)
    };
    G__5430.cljs$core$IFn$_invoke$arity$variadic = G__5430__delegate;
    return G__5430
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__5435 = cljs.core.next.call(null, coll);
        coll = G__5435;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = cljs.core.seq.call(null, coll);
        if(and__3941__auto__) {
          return n > 0
        }else {
          return and__3941__auto__
        }
      }())) {
        var G__5436 = n - 1;
        var G__5437 = cljs.core.next.call(null, coll);
        n = G__5436;
        coll = G__5437;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
    if(cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches)
    }else {
      return cljs.core.vec.call(null, matches)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches = re.exec(s);
  if(matches == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches)
    }else {
      return cljs.core.vec.call(null, matches)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if(cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, match_data, re_seq.call(null, re, post_match))
    }, null, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__5439 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__5439, 0, null);
  var flags = cljs.core.nth.call(null, vec__5439, 1, null);
  var pattern = cljs.core.nth.call(null, vec__5439, 2, null);
  return new RegExp(pattern, flags)
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  cljs.core._write.call(null, writer, begin);
  if(cljs.core.seq.call(null, coll)) {
    print_one.call(null, cljs.core.first.call(null, coll), writer, opts)
  }else {
  }
  var seq__5444_5448 = cljs.core.seq.call(null, cljs.core.next.call(null, coll));
  var chunk__5445_5449 = null;
  var count__5446_5450 = 0;
  var i__5447_5451 = 0;
  while(true) {
    if(i__5447_5451 < count__5446_5450) {
      var o_5452 = cljs.core._nth.call(null, chunk__5445_5449, i__5447_5451);
      cljs.core._write.call(null, writer, sep);
      print_one.call(null, o_5452, writer, opts);
      var G__5453 = seq__5444_5448;
      var G__5454 = chunk__5445_5449;
      var G__5455 = count__5446_5450;
      var G__5456 = i__5447_5451 + 1;
      seq__5444_5448 = G__5453;
      chunk__5445_5449 = G__5454;
      count__5446_5450 = G__5455;
      i__5447_5451 = G__5456;
      continue
    }else {
      var temp__4092__auto___5457 = cljs.core.seq.call(null, seq__5444_5448);
      if(temp__4092__auto___5457) {
        var seq__5444_5458__$1 = temp__4092__auto___5457;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__5444_5458__$1)) {
          var c__3674__auto___5459 = cljs.core.chunk_first.call(null, seq__5444_5458__$1);
          var G__5460 = cljs.core.chunk_rest.call(null, seq__5444_5458__$1);
          var G__5461 = c__3674__auto___5459;
          var G__5462 = cljs.core.count.call(null, c__3674__auto___5459);
          var G__5463 = 0;
          seq__5444_5448 = G__5460;
          chunk__5445_5449 = G__5461;
          count__5446_5450 = G__5462;
          i__5447_5451 = G__5463;
          continue
        }else {
          var o_5464 = cljs.core.first.call(null, seq__5444_5458__$1);
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, o_5464, writer, opts);
          var G__5465 = cljs.core.next.call(null, seq__5444_5458__$1);
          var G__5466 = null;
          var G__5467 = 0;
          var G__5468 = 0;
          seq__5444_5448 = G__5465;
          chunk__5445_5449 = G__5466;
          count__5446_5450 = G__5467;
          i__5447_5451 = G__5468;
          continue
        }
      }else {
      }
    }
    break
  }
  return cljs.core._write.call(null, writer, end)
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__5473 = cljs.core.seq.call(null, ss);
    var chunk__5474 = null;
    var count__5475 = 0;
    var i__5476 = 0;
    while(true) {
      if(i__5476 < count__5475) {
        var s = cljs.core._nth.call(null, chunk__5474, i__5476);
        cljs.core._write.call(null, writer, s);
        var G__5477 = seq__5473;
        var G__5478 = chunk__5474;
        var G__5479 = count__5475;
        var G__5480 = i__5476 + 1;
        seq__5473 = G__5477;
        chunk__5474 = G__5478;
        count__5475 = G__5479;
        i__5476 = G__5480;
        continue
      }else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__5473);
        if(temp__4092__auto__) {
          var seq__5473__$1 = temp__4092__auto__;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__5473__$1)) {
            var c__3674__auto__ = cljs.core.chunk_first.call(null, seq__5473__$1);
            var G__5481 = cljs.core.chunk_rest.call(null, seq__5473__$1);
            var G__5482 = c__3674__auto__;
            var G__5483 = cljs.core.count.call(null, c__3674__auto__);
            var G__5484 = 0;
            seq__5473 = G__5481;
            chunk__5474 = G__5482;
            count__5475 = G__5483;
            i__5476 = G__5484;
            continue
          }else {
            var s = cljs.core.first.call(null, seq__5473__$1);
            cljs.core._write.call(null, writer, s);
            var G__5485 = cljs.core.next.call(null, seq__5473__$1);
            var G__5486 = null;
            var G__5487 = 0;
            var G__5488 = 0;
            seq__5473 = G__5485;
            chunk__5474 = G__5486;
            count__5475 = G__5487;
            i__5476 = G__5488;
            continue
          }
        }else {
          return null
        }
      }
      break
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if(arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return write_all__delegate.call(this, writer, ss)
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__5489) {
    var writer = cljs.core.first(arglist__5489);
    var ss = cljs.core.rest(arglist__5489);
    return write_all__delegate(writer, ss)
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.char_escapes = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match]
  })), cljs.core.str('"')].join("")
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if(obj == null) {
    return cljs.core._write.call(null, writer, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e")
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = function() {
              var G__5493 = obj;
              if(G__5493) {
                if(function() {
                  var or__3943__auto__ = G__5493.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3943__auto__) {
                    return or__3943__auto__
                  }else {
                    return G__5493.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__5493.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__5493)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__5493)
              }
            }();
            if(cljs.core.truth_(and__3941__auto____$1)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())) {
          cljs.core._write.call(null, writer, "^");
          pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
          cljs.core._write.call(null, writer, " ")
        }else {
        }
        if(obj == null) {
          return cljs.core._write.call(null, writer, "nil")
        }else {
          if(obj.cljs$lang$type) {
            return obj.cljs$lang$ctorPrWriter(obj, writer, opts)
          }else {
            if(function() {
              var G__5494 = obj;
              if(G__5494) {
                if(function() {
                  var or__3943__auto__ = G__5494.cljs$lang$protocol_mask$partition0$ & 2147483648;
                  if(or__3943__auto__) {
                    return or__3943__auto__
                  }else {
                    return G__5494.cljs$core$IPrintWithWriter$
                  }
                }()) {
                  return true
                }else {
                  return false
                }
              }else {
                return false
              }
            }()) {
              return cljs.core._pr_writer.call(null, obj, writer, opts)
            }else {
              if(function() {
                var or__3943__auto__ = cljs.core.type.call(null, obj) === Boolean;
                if(or__3943__auto__) {
                  return or__3943__auto__
                }else {
                  return typeof obj === "number"
                }
              }()) {
                return cljs.core._write.call(null, writer, [cljs.core.str(obj)].join(""))
              }else {
                if(obj instanceof Array) {
                  return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#\x3cArray [", ", ", "]\x3e", opts, obj)
                }else {
                  if(goog.isString(obj)) {
                    if(cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 4441712502)).call(null, opts))) {
                      return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj))
                    }else {
                      return cljs.core._write.call(null, writer, obj)
                    }
                  }else {
                    if(cljs.core.fn_QMARK_.call(null, obj)) {
                      return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e")
                    }else {
                      if(obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while(true) {
                            if(cljs.core.count.call(null, ns) < len) {
                              var G__5496 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__5496;
                              continue
                            }else {
                              return ns
                            }
                            break
                          }
                        };
                        return cljs.core.write_all.call(null, writer, '#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"')
                      }else {
                        if(cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj))) {
                          return cljs.core.write_all.call(null, writer, '#"', obj.source, '"')
                        }else {
                          if(function() {
                            var G__5495 = obj;
                            if(G__5495) {
                              if(function() {
                                var or__3943__auto__ = G__5495.cljs$lang$protocol_mask$partition0$ & 2147483648;
                                if(or__3943__auto__) {
                                  return or__3943__auto__
                                }else {
                                  return G__5495.cljs$core$IPrintWithWriter$
                                }
                              }()) {
                                return true
                              }else {
                                if(!G__5495.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.type_satisfies_.call(null, cljs.core.IPrintWithWriter, G__5495)
                                }else {
                                  return false
                                }
                              }
                            }else {
                              return cljs.core.type_satisfies_.call(null, cljs.core.IPrintWithWriter, G__5495)
                            }
                          }()) {
                            return cljs.core._pr_writer.call(null, obj, writer, opts)
                          }else {
                            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e")
                            }else {
                              return null
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__5501 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__5502 = null;
  var count__5503 = 0;
  var i__5504 = 0;
  while(true) {
    if(i__5504 < count__5503) {
      var obj = cljs.core._nth.call(null, chunk__5502, i__5504);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__5505 = seq__5501;
      var G__5506 = chunk__5502;
      var G__5507 = count__5503;
      var G__5508 = i__5504 + 1;
      seq__5501 = G__5505;
      chunk__5502 = G__5506;
      count__5503 = G__5507;
      i__5504 = G__5508;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__5501);
      if(temp__4092__auto__) {
        var seq__5501__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__5501__$1)) {
          var c__3674__auto__ = cljs.core.chunk_first.call(null, seq__5501__$1);
          var G__5509 = cljs.core.chunk_rest.call(null, seq__5501__$1);
          var G__5510 = c__3674__auto__;
          var G__5511 = cljs.core.count.call(null, c__3674__auto__);
          var G__5512 = 0;
          seq__5501 = G__5509;
          chunk__5502 = G__5510;
          count__5503 = G__5511;
          i__5504 = G__5512;
          continue
        }else {
          var obj = cljs.core.first.call(null, seq__5501__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__5513 = cljs.core.next.call(null, seq__5501__$1);
          var G__5514 = null;
          var G__5515 = 0;
          var G__5516 = 0;
          seq__5501 = G__5513;
          chunk__5502 = G__5514;
          count__5503 = G__5515;
          i__5504 = G__5516;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if(cljs.core.empty_QMARK_.call(null, objs)) {
    return""
  }else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts.call(null, objs, opts))].join("")
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if(cljs.core.empty_QMARK_.call(null, objs)) {
    return"\n"
  }else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("")
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts))
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857)))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__5517) {
    var objs = cljs.core.seq(arglist__5517);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__5518) {
    var objs = cljs.core.seq(arglist__5518);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__5519) {
    var objs = cljs.core.seq(arglist__5519);
    return pr__delegate(objs)
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__5520) {
    var objs = cljs.core.seq(arglist__5520);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__5521) {
    var objs = cljs.core.seq(arglist__5521);
    return print_str__delegate(objs)
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__5522) {
    var objs = cljs.core.seq(arglist__5522);
    return println__delegate(objs)
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__5523) {
    var objs = cljs.core.seq(arglist__5523);
    return println_str__delegate(objs)
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__5524) {
    var objs = cljs.core.seq(arglist__5524);
    return prn__delegate(objs)
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll)
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core._write.call(null, writer, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
goog.provide("cljs.core.Atom");
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 2
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var seq__5525 = cljs.core.seq.call(null, self__.watches);
  var chunk__5526 = null;
  var count__5527 = 0;
  var i__5528 = 0;
  while(true) {
    if(i__5528 < count__5527) {
      var vec__5529 = cljs.core._nth.call(null, chunk__5526, i__5528);
      var key = cljs.core.nth.call(null, vec__5529, 0, null);
      var f = cljs.core.nth.call(null, vec__5529, 1, null);
      f.call(null, key, this$, oldval, newval);
      var G__5531 = seq__5525;
      var G__5532 = chunk__5526;
      var G__5533 = count__5527;
      var G__5534 = i__5528 + 1;
      seq__5525 = G__5531;
      chunk__5526 = G__5532;
      count__5527 = G__5533;
      i__5528 = G__5534;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__5525);
      if(temp__4092__auto__) {
        var seq__5525__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__5525__$1)) {
          var c__3674__auto__ = cljs.core.chunk_first.call(null, seq__5525__$1);
          var G__5535 = cljs.core.chunk_rest.call(null, seq__5525__$1);
          var G__5536 = c__3674__auto__;
          var G__5537 = cljs.core.count.call(null, c__3674__auto__);
          var G__5538 = 0;
          seq__5525 = G__5535;
          chunk__5526 = G__5536;
          count__5527 = G__5537;
          i__5528 = G__5538;
          continue
        }else {
          var vec__5530 = cljs.core.first.call(null, seq__5525__$1);
          var key = cljs.core.nth.call(null, vec__5530, 0, null);
          var f = cljs.core.nth.call(null, vec__5530, 1, null);
          f.call(null, key, this$, oldval, newval);
          var G__5539 = cljs.core.next.call(null, seq__5525__$1);
          var G__5540 = null;
          var G__5541 = 0;
          var G__5542 = 0;
          seq__5525 = G__5539;
          chunk__5526 = G__5540;
          count__5527 = G__5541;
          i__5528 = G__5542;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  return this$.watches = cljs.core.assoc.call(null, self__.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  return this$.watches = cljs.core.dissoc.call(null, self__.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  return self__.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  return self__.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  return o === other
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches)
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__5546__delegate = function(x, p__5543) {
      var map__5545 = p__5543;
      var map__5545__$1 = cljs.core.seq_QMARK_.call(null, map__5545) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5545) : map__5545;
      var validator = cljs.core.get.call(null, map__5545__$1, new cljs.core.Keyword(null, "validator", "validator", 4199087812));
      var meta = cljs.core.get.call(null, map__5545__$1, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
      return new cljs.core.Atom(x, meta, validator, null)
    };
    var G__5546 = function(x, var_args) {
      var p__5543 = null;
      if(arguments.length > 1) {
        p__5543 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__5546__delegate.call(this, x, p__5543)
    };
    G__5546.cljs$lang$maxFixedArity = 1;
    G__5546.cljs$lang$applyTo = function(arglist__5547) {
      var x = cljs.core.first(arglist__5547);
      var p__5543 = cljs.core.rest(arglist__5547);
      return G__5546__delegate(x, p__5543)
    };
    G__5546.cljs$core$IFn$_invoke$arity$variadic = G__5546__delegate;
    return G__5546
  }();
  atom = function(x, var_args) {
    var p__5543 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__4092__auto___5548 = a.validator;
  if(cljs.core.truth_(temp__4092__auto___5548)) {
    var validate_5549 = temp__4092__auto___5548;
    if(cljs.core.truth_(validate_5549.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1233162959, null), new cljs.core.Symbol(null, "new-value", "new-value", 972165309, null))))].join(""));
    }
  }else {
  }
  var old_value_5550 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value_5550, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__5551__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__5551 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(arguments.length > 5) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__5551__delegate.call(this, a, f, x, y, z, more)
    };
    G__5551.cljs$lang$maxFixedArity = 5;
    G__5551.cljs$lang$applyTo = function(arglist__5552) {
      var a = cljs.core.first(arglist__5552);
      arglist__5552 = cljs.core.next(arglist__5552);
      var f = cljs.core.first(arglist__5552);
      arglist__5552 = cljs.core.next(arglist__5552);
      var x = cljs.core.first(arglist__5552);
      arglist__5552 = cljs.core.next(arglist__5552);
      var y = cljs.core.first(arglist__5552);
      arglist__5552 = cljs.core.next(arglist__5552);
      var z = cljs.core.first(arglist__5552);
      var more = cljs.core.rest(arglist__5552);
      return G__5551__delegate(a, f, x, y, z, more)
    };
    G__5551.cljs$core$IFn$_invoke$arity$variadic = G__5551__delegate;
    return G__5551
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__5553) {
    var iref = cljs.core.first(arglist__5553);
    arglist__5553 = cljs.core.next(arglist__5553);
    var f = cljs.core.first(arglist__5553);
    var args = cljs.core.rest(arglist__5553);
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
goog.provide("cljs.core.Delay");
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  return(new cljs.core.Keyword(null, "done", "done", 1016993524)).call(null, cljs.core.deref.call(null, self__.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  return(new cljs.core.Keyword(null, "value", "value", 1125876963)).call(null, cljs.core.swap_BANG_.call(null, self__.state, function(p__5554) {
    var map__5555 = p__5554;
    var map__5555__$1 = cljs.core.seq_QMARK_.call(null, map__5555) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5555) : map__5555;
    var curr_state = map__5555__$1;
    var done = cljs.core.get.call(null, map__5555__$1, new cljs.core.Keyword(null, "done", "done", 1016993524));
    if(cljs.core.truth_(done)) {
      return curr_state
    }else {
      return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "done", "done", 1016993524), true, new cljs.core.Keyword(null, "value", "value", 1125876963), self__.f.call(null)], true)
    }
  }))
};
cljs.core.__GT_Delay = function __GT_Delay(state, f) {
  return new cljs.core.Delay(state, f)
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.IEncodeJS = {};
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x)
  }else {
    var x__3543__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._clj__GT_js["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x)
  }else {
    var x__3543__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._key__GT_js[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._key__GT_js["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if(function() {
    var G__5557 = k;
    if(G__5557) {
      if(cljs.core.truth_(function() {
        var or__3943__auto__ = null;
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return G__5557.cljs$core$IEncodeJS$
        }
      }())) {
        return true
      }else {
        if(!G__5557.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeJS, G__5557)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeJS, G__5557)
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k)
  }else {
    if(function() {
      var or__3943__auto__ = typeof k === "string";
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = typeof k === "number";
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          var or__3943__auto____$2 = k instanceof cljs.core.Keyword;
          if(or__3943__auto____$2) {
            return or__3943__auto____$2
          }else {
            return k instanceof cljs.core.Symbol
          }
        }
      }
    }()) {
      return cljs.core.clj__GT_js.call(null, k)
    }else {
      return cljs.core.pr_str.call(null, k)
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if(x == null) {
    return null
  }else {
    if(function() {
      var G__5565 = x;
      if(G__5565) {
        if(cljs.core.truth_(function() {
          var or__3943__auto__ = null;
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return G__5565.cljs$core$IEncodeJS$
          }
        }())) {
          return true
        }else {
          if(!G__5565.cljs$lang$protocol_mask$partition$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeJS, G__5565)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeJS, G__5565)
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x)
    }else {
      if(x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x)
      }else {
        if(x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("")
        }else {
          if(cljs.core.map_QMARK_.call(null, x)) {
            var m = {};
            var seq__5566_5572 = cljs.core.seq.call(null, x);
            var chunk__5567_5573 = null;
            var count__5568_5574 = 0;
            var i__5569_5575 = 0;
            while(true) {
              if(i__5569_5575 < count__5568_5574) {
                var vec__5570_5576 = cljs.core._nth.call(null, chunk__5567_5573, i__5569_5575);
                var k_5577 = cljs.core.nth.call(null, vec__5570_5576, 0, null);
                var v_5578 = cljs.core.nth.call(null, vec__5570_5576, 1, null);
                m[cljs.core.key__GT_js.call(null, k_5577)] = clj__GT_js.call(null, v_5578);
                var G__5579 = seq__5566_5572;
                var G__5580 = chunk__5567_5573;
                var G__5581 = count__5568_5574;
                var G__5582 = i__5569_5575 + 1;
                seq__5566_5572 = G__5579;
                chunk__5567_5573 = G__5580;
                count__5568_5574 = G__5581;
                i__5569_5575 = G__5582;
                continue
              }else {
                var temp__4092__auto___5583 = cljs.core.seq.call(null, seq__5566_5572);
                if(temp__4092__auto___5583) {
                  var seq__5566_5584__$1 = temp__4092__auto___5583;
                  if(cljs.core.chunked_seq_QMARK_.call(null, seq__5566_5584__$1)) {
                    var c__3674__auto___5585 = cljs.core.chunk_first.call(null, seq__5566_5584__$1);
                    var G__5586 = cljs.core.chunk_rest.call(null, seq__5566_5584__$1);
                    var G__5587 = c__3674__auto___5585;
                    var G__5588 = cljs.core.count.call(null, c__3674__auto___5585);
                    var G__5589 = 0;
                    seq__5566_5572 = G__5586;
                    chunk__5567_5573 = G__5587;
                    count__5568_5574 = G__5588;
                    i__5569_5575 = G__5589;
                    continue
                  }else {
                    var vec__5571_5590 = cljs.core.first.call(null, seq__5566_5584__$1);
                    var k_5591 = cljs.core.nth.call(null, vec__5571_5590, 0, null);
                    var v_5592 = cljs.core.nth.call(null, vec__5571_5590, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_5591)] = clj__GT_js.call(null, v_5592);
                    var G__5593 = cljs.core.next.call(null, seq__5566_5584__$1);
                    var G__5594 = null;
                    var G__5595 = 0;
                    var G__5596 = 0;
                    seq__5566_5572 = G__5593;
                    chunk__5567_5573 = G__5594;
                    count__5568_5574 = G__5595;
                    i__5569_5575 = G__5596;
                    continue
                  }
                }else {
                }
              }
              break
            }
            return m
          }else {
            if(cljs.core.coll_QMARK_.call(null, x)) {
              return cljs.core.apply.call(null, cljs.core.array, cljs.core.map.call(null, clj__GT_js, x))
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = {};
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options)
  }else {
    var x__3543__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._js__GT_clj["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options)
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), false], true))
  };
  var js__GT_clj__2 = function() {
    var G__5617__delegate = function(x, opts) {
      if(function() {
        var G__5607 = x;
        if(G__5607) {
          if(cljs.core.truth_(function() {
            var or__3943__auto__ = null;
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return G__5607.cljs$core$IEncodeClojure$
            }
          }())) {
            return true
          }else {
            if(!G__5607.cljs$lang$protocol_mask$partition$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeClojure, G__5607)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeClojure, G__5607)
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts))
      }else {
        if(cljs.core.seq.call(null, opts)) {
          var map__5608 = opts;
          var map__5608__$1 = cljs.core.seq_QMARK_.call(null, map__5608) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5608) : map__5608;
          var keywordize_keys = cljs.core.get.call(null, map__5608__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672));
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__5608, map__5608__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if(cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1))
              }else {
                if(cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1))
                }else {
                  if(x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1))
                  }else {
                    if(cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__3643__auto__ = function(map__5608, map__5608__$1, keywordize_keys, keyfn) {
                          return function iter__5613(s__5614) {
                            return new cljs.core.LazySeq(null, function(map__5608, map__5608__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__5614__$1 = s__5614;
                                while(true) {
                                  var temp__4092__auto__ = cljs.core.seq.call(null, s__5614__$1);
                                  if(temp__4092__auto__) {
                                    var s__5614__$2 = temp__4092__auto__;
                                    if(cljs.core.chunked_seq_QMARK_.call(null, s__5614__$2)) {
                                      var c__3641__auto__ = cljs.core.chunk_first.call(null, s__5614__$2);
                                      var size__3642__auto__ = cljs.core.count.call(null, c__3641__auto__);
                                      var b__5616 = cljs.core.chunk_buffer.call(null, size__3642__auto__);
                                      if(function() {
                                        var i__5615 = 0;
                                        while(true) {
                                          if(i__5615 < size__3642__auto__) {
                                            var k = cljs.core._nth.call(null, c__3641__auto__, i__5615);
                                            cljs.core.chunk_append.call(null, b__5616, cljs.core.PersistentVector.fromArray([keyfn.call(null, k), thisfn.call(null, x__$1[k])], true));
                                            var G__5618 = i__5615 + 1;
                                            i__5615 = G__5618;
                                            continue
                                          }else {
                                            return true
                                          }
                                          break
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__5616), iter__5613.call(null, cljs.core.chunk_rest.call(null, s__5614__$2)))
                                      }else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__5616), null)
                                      }
                                    }else {
                                      var k = cljs.core.first.call(null, s__5614__$2);
                                      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn.call(null, k), thisfn.call(null, x__$1[k])], true), iter__5613.call(null, cljs.core.rest.call(null, s__5614__$2)))
                                    }
                                  }else {
                                    return null
                                  }
                                  break
                                }
                              }
                            }(map__5608, map__5608__$1, keywordize_keys, keyfn), null, null)
                          }
                        }(map__5608, map__5608__$1, keywordize_keys, keyfn);
                        return iter__3643__auto__.call(null, cljs.core.js_keys.call(null, x__$1))
                      }())
                    }else {
                      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        return x__$1
                      }else {
                        return null
                      }
                    }
                  }
                }
              }
            }
          }(map__5608, map__5608__$1, keywordize_keys, keyfn);
          return f.call(null, x)
        }else {
          return null
        }
      }
    };
    var G__5617 = function(x, var_args) {
      var opts = null;
      if(arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__5617__delegate.call(this, x, opts)
    };
    G__5617.cljs$lang$maxFixedArity = 1;
    G__5617.cljs$lang$applyTo = function(arglist__5619) {
      var x = cljs.core.first(arglist__5619);
      var opts = cljs.core.rest(arglist__5619);
      return G__5617__delegate(x, opts)
    };
    G__5617.cljs$core$IFn$_invoke$arity$variadic = G__5617__delegate;
    return G__5617
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function() {
    var G__5620__delegate = function(args) {
      var temp__4090__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args);
      if(cljs.core.truth_(temp__4090__auto__)) {
        var v = temp__4090__auto__;
        return v
      }else {
        var ret = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
        return ret
      }
    };
    var G__5620 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__5620__delegate.call(this, args)
    };
    G__5620.cljs$lang$maxFixedArity = 0;
    G__5620.cljs$lang$applyTo = function(arglist__5621) {
      var args = cljs.core.seq(arglist__5621);
      return G__5620__delegate(args)
    };
    G__5620.cljs$core$IFn$_invoke$arity$variadic = G__5620__delegate;
    return G__5620
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret)) {
        var G__5622 = ret;
        f = G__5622;
        continue
      }else {
        return ret
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__5623__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__5623 = function(f, var_args) {
      var args = null;
      if(arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__5623__delegate.call(this, f, args)
    };
    G__5623.cljs$lang$maxFixedArity = 1;
    G__5623.cljs$lang$applyTo = function(arglist__5624) {
      var f = cljs.core.first(arglist__5624);
      var args = cljs.core.rest(arglist__5624);
      return G__5623__delegate(f, args)
    };
    G__5623.cljs$core$IFn$_invoke$arity$variadic = G__5623__delegate;
    return G__5623
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.PersistentArrayMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 768214664), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), cljs.core.PersistentArrayMap.EMPTY], true)
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if(cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null))
  }else {
  }
  return cljs.core._global_hierarchy
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args)
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args)
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__5625) {
    var f = cljs.core.first(arglist__5625);
    var args = cljs.core.rest(arglist__5625);
    return swap_global_hierarchy_BANG___delegate(f, args)
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3943__auto__ = cljs.core._EQ_.call(null, child, parent);
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      var or__3943__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).call(null, h).call(null, child), parent);
      if(or__3943__auto____$1) {
        return or__3943__auto____$1
      }else {
        var and__3941__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3941__auto__) {
          var and__3941__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3941__auto____$1) {
            var and__3941__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3941__auto____$2) {
              var ret = true;
              var i = 0;
              while(true) {
                if(function() {
                  var or__3943__auto____$2 = cljs.core.not.call(null, ret);
                  if(or__3943__auto____$2) {
                    return or__3943__auto____$2
                  }else {
                    return i === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret
                }else {
                  var G__5626 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__5627 = i + 1;
                  ret = G__5626;
                  i = G__5627;
                  continue
                }
                break
              }
            }else {
              return and__3941__auto____$2
            }
          }else {
            return and__3941__auto____$1
          }
        }else {
          return and__3941__auto__
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).call(null, h), tag))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).call(null, h), tag))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).call(null, h), tag))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", -388313324, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", -1637144189, null), new cljs.core.Symbol(null, "tag", "tag", -1640416941, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).call(null, h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).call(null, h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).call(null, h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
          }
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)))
      }
    }(tp, td, ta);
    var or__3943__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).call(null, h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).call(null, h), tag, td, 
      parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 768214664), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).call(null, h), parent, ta, tag, td)], true)
    }();
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).call(null, h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__5628_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__5628_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__5628_SHARP_), cljs.core.second.call(null, p1__5628_SHARP_)))
      }
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if(cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__5629_SHARP_, p2__5630_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__5629_SHARP_, p2__5630_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3943__auto__ = cljs.core.truth_(function() {
    var and__3941__auto__ = xprefs;
    if(cljs.core.truth_(and__3941__auto__)) {
      return xprefs.call(null, y)
    }else {
      return and__3941__auto__
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    var or__3943__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          }else {
          }
          var G__5631 = cljs.core.rest.call(null, ps);
          ps = G__5631;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3943__auto____$1)) {
      return or__3943__auto____$1
    }else {
      var or__3943__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            }else {
            }
            var G__5632 = cljs.core.rest.call(null, ps);
            ps = G__5632;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3943__auto____$2)) {
        return or__3943__auto____$2
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3943__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__5635) {
    var vec__5636 = p__5635;
    var k = cljs.core.nth.call(null, vec__5636, 0, null);
    var _ = cljs.core.nth.call(null, vec__5636, 1, null);
    var e = vec__5636;
    if(cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3943__auto__ = be == null;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__3543__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._reset[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._reset["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__3543__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._add_method[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._add_method["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__3543__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._remove_method[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._remove_method["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__3543__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._prefer_method[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._prefer_method["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__3543__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._get_method[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._get_method["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__3543__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._methods[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._methods["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__3543__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._prefers[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._prefers["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__3543__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._dispatch[goog.typeOf(x__3543__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._dispatch["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if(cljs.core.truth_(target_fn)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
  }
  return cljs.core.apply.call(null, target_fn, args)
};
goog.provide("cljs.core.MultiFn");
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 256
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$1) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$1) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$1) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy)
  }
  var temp__4090__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__4090__auto__)) {
    var target_fn = temp__4090__auto__;
    return target_fn
  }else {
    var temp__4090__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if(cljs.core.truth_(temp__4090__auto____$1)) {
      var target_fn = temp__4090__auto____$1;
      return target_fn
    }else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  return cljs.core.deref.call(null, self__.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  return cljs.core.deref.call(null, self__.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var self__ = this;
  return cljs.core.do_dispatch.call(null, mf, self__.dispatch_fn, args)
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
};
cljs.core.MultiFn.prototype.call = function() {
  var G__5637__delegate = function(_, args) {
    var self = this;
    return cljs.core._dispatch.call(null, self, args)
  };
  var G__5637 = function(_, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__5637__delegate.call(this, _, args)
  };
  G__5637.cljs$lang$maxFixedArity = 1;
  G__5637.cljs$lang$applyTo = function(arglist__5638) {
    var _ = cljs.core.first(arglist__5638);
    var args = cljs.core.rest(arglist__5638);
    return G__5637__delegate(_, args)
  };
  G__5637.cljs$core$IFn$_invoke$arity$variadic = G__5637__delegate;
  return G__5637
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self = this;
  return cljs.core._dispatch.call(null, self, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
goog.provide("cljs.core.UUID");
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__3484__auto__, writer__3485__auto__, opt__3486__auto__) {
  return cljs.core._write.call(null, writer__3485__auto__, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var and__3941__auto__ = other instanceof cljs.core.UUID;
  if(and__3941__auto__) {
    return self__.uuid === other.uuid
  }else {
    return and__3941__auto__
  }
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid)
};
goog.provide("cljs.core.ExceptionInfo");
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__3487__auto__, writer__3488__auto__, opts__3489__auto__) {
  return cljs.core._write.call(null, writer__3488__auto__, "cljs.core/ExceptionInfo")
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause)
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null)
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause)
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info
}();
cljs.core.ex_data = function ex_data(ex) {
  if(ex instanceof cljs.core.ExceptionInfo) {
    return ex.data
  }else {
    return null
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if(ex instanceof Error) {
    return ex.message
  }else {
    return null
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if(ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause
  }else {
    return null
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if(cljs.core.truth_(pred.call(null, x, y))) {
      return-1
    }else {
      if(cljs.core.truth_(pred.call(null, y, x))) {
        return 1
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return 0
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray([new cljs.core.Symbol(null, "deftype*", "deftype*", -978581244, null), null, new cljs.core.Symbol(null, "new", "new", -1640422567, null), null, new cljs.core.Symbol(null, "try*", "try*", -1636962424, null), null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), null, new cljs.core.Symbol(null, "\x26", "\x26", -1640531489, null), null, new cljs.core.Symbol(null, "set!", "set!", -1637004872, null), null, 
  new cljs.core.Symbol(null, "recur", "recur", -1532142362, null), null, new cljs.core.Symbol(null, ".", ".", -1640531481, null), null, new cljs.core.Symbol(null, "ns", "ns", -1640528002, null), null, new cljs.core.Symbol(null, "do", "do", -1640528316, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -1640430053, null), null, new cljs.core.Symbol(null, "throw", "throw", -1530191713, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", 1548249632, null), null, new cljs.core.Symbol(null, 
  "js*", "js*", -1640426054, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", 774272013, null), null, new cljs.core.Symbol(null, "let*", "let*", -1637213400, null), null, new cljs.core.Symbol(null, "loop*", "loop*", -1537374273, null), null, new cljs.core.Symbol(null, "if", "if", -1640528170, null), null, new cljs.core.Symbol(null, "def", "def", -1640432194, null), null], true), x)
};
goog.provide("React");
goog.provide("module$ExecutionEnvironment");
var module$ExecutionEnvironment = {};
var canUseDOM$$module$ExecutionEnvironment = typeof window !== "undefined";
var ExecutionEnvironment$$module$ExecutionEnvironment = {canUseDOM:canUseDOM$$module$ExecutionEnvironment, canUseWorkers:typeof Worker !== "undefined", isInWorker:!canUseDOM$$module$ExecutionEnvironment};
module$ExecutionEnvironment.module$exports = ExecutionEnvironment$$module$ExecutionEnvironment;
if(module$ExecutionEnvironment.module$exports) {
  module$ExecutionEnvironment = module$ExecutionEnvironment.module$exports
}
goog.provide("module$ViewportMetrics");
var module$ViewportMetrics = {};
var ViewportMetrics$$module$ViewportMetrics = {currentScrollLeft:0, currentScrollTop:0, refreshScrollValues:function() {
  ViewportMetrics$$module$ViewportMetrics.currentScrollLeft = document.body.scrollLeft + document.documentElement.scrollLeft;
  ViewportMetrics$$module$ViewportMetrics.currentScrollTop = document.body.scrollTop + document.documentElement.scrollTop
}};
module$ViewportMetrics.module$exports = ViewportMetrics$$module$ViewportMetrics;
if(module$ViewportMetrics.module$exports) {
  module$ViewportMetrics = module$ViewportMetrics.module$exports
}
goog.provide("module$adler32");
var module$adler32 = {};
var MOD$$module$adler32 = 65521;
function adler32$$module$adler32(data) {
  var a = 1;
  var b = 0;
  for(var i = 0;i < data.length;i++) {
    a = (a + data.charCodeAt(i)) % MOD$$module$adler32;
    b = (b + a) % MOD$$module$adler32
  }
  return a | b << 16
}
module$adler32.module$exports = adler32$$module$adler32;
if(module$adler32.module$exports) {
  module$adler32 = module$adler32.module$exports
}
goog.provide("module$ReactMarkupChecksum");
var module$ReactMarkupChecksum = {};
goog.require("module$adler32");
var adler32$$module$ReactMarkupChecksum = module$adler32;
var ReactMarkupChecksum$$module$ReactMarkupChecksum = {CHECKSUM_ATTR_NAME:"data-react-checksum", addChecksumToMarkup:function(markup) {
  var checksum = adler32$$module$ReactMarkupChecksum(markup);
  return markup.replace("\x3e", " " + ReactMarkupChecksum$$module$ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '\x3d"' + checksum + '"\x3e')
}, canReuseMarkup:function(markup, element) {
  var existingChecksum = element.getAttribute(ReactMarkupChecksum$$module$ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
  existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
  var markupChecksum = adler32$$module$ReactMarkupChecksum(markup);
  return markupChecksum === existingChecksum
}};
module$ReactMarkupChecksum.module$exports = ReactMarkupChecksum$$module$ReactMarkupChecksum;
if(module$ReactMarkupChecksum.module$exports) {
  module$ReactMarkupChecksum = module$ReactMarkupChecksum.module$exports
}
goog.provide("module$PooledClass");
var module$PooledClass = {};
var oneArgumentPooler$$module$PooledClass = function(copyFieldsFrom) {
  var Klass = this;
  if(Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance
  }else {
    return new Klass(copyFieldsFrom)
  }
};
var twoArgumentPooler$$module$PooledClass = function(a1, a2) {
  var Klass = this;
  if(Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance
  }else {
    return new Klass(a1, a2)
  }
};
var threeArgumentPooler$$module$PooledClass = function(a1, a2, a3) {
  var Klass = this;
  if(Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance
  }else {
    return new Klass(a1, a2, a3)
  }
};
var fiveArgumentPooler$$module$PooledClass = function(a1, a2, a3, a4, a5) {
  var Klass = this;
  if(Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4, a5);
    return instance
  }else {
    return new Klass(a1, a2, a3, a4, a5)
  }
};
var standardReleaser$$module$PooledClass = function(instance) {
  var Klass = this;
  if(instance.destructor) {
    instance.destructor()
  }
  if(Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance)
  }
};
var DEFAULT_POOL_SIZE$$module$PooledClass = 10;
var DEFAULT_POOLER$$module$PooledClass = oneArgumentPooler$$module$PooledClass;
var addPoolingTo$$module$PooledClass = function(CopyConstructor, pooler) {
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER$$module$PooledClass;
  if(!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE$$module$PooledClass
  }
  NewKlass.release = standardReleaser$$module$PooledClass;
  return NewKlass
};
var PooledClass$$module$PooledClass = {addPoolingTo:addPoolingTo$$module$PooledClass, oneArgumentPooler:oneArgumentPooler$$module$PooledClass, twoArgumentPooler:twoArgumentPooler$$module$PooledClass, threeArgumentPooler:threeArgumentPooler$$module$PooledClass, fiveArgumentPooler:fiveArgumentPooler$$module$PooledClass};
module$PooledClass.module$exports = PooledClass$$module$PooledClass;
if(module$PooledClass.module$exports) {
  module$PooledClass = module$PooledClass.module$exports
}
goog.provide("module$getEventTarget");
var module$getEventTarget = {};
function getEventTarget$$module$getEventTarget(nativeEvent) {
  var target = nativeEvent.target || nativeEvent.srcElement || window;
  return target.nodeType === 3 ? target.parentNode : target
}
module$getEventTarget.module$exports = getEventTarget$$module$getEventTarget;
if(module$getEventTarget.module$exports) {
  module$getEventTarget = module$getEventTarget.module$exports
}
goog.provide("module$getTextContentAccessor");
var module$getTextContentAccessor = {};
goog.require("module$ExecutionEnvironment");
var ExecutionEnvironment$$module$getTextContentAccessor = module$ExecutionEnvironment;
var contentKey$$module$getTextContentAccessor = null;
function getTextContentAccessor$$module$getTextContentAccessor() {
  if(!contentKey$$module$getTextContentAccessor && ExecutionEnvironment$$module$getTextContentAccessor.canUseDOM) {
    contentKey$$module$getTextContentAccessor = "innerText" in document.createElement("div") ? "innerText" : "textContent"
  }
  return contentKey$$module$getTextContentAccessor
}
module$getTextContentAccessor.module$exports = getTextContentAccessor$$module$getTextContentAccessor;
if(module$getTextContentAccessor.module$exports) {
  module$getTextContentAccessor = module$getTextContentAccessor.module$exports
}
goog.provide("module$copyProperties");
var module$copyProperties = {};
function copyProperties$$module$copyProperties(obj, a, b, c, d, e, f) {
  obj = obj || {};
  var args = [a, b, c, d, e];
  var ii = 0, v;
  while(args[ii]) {
    v = args[ii++];
    for(var k in v) {
      obj[k] = v[k]
    }
    if(v.hasOwnProperty && v.hasOwnProperty("toString") && typeof v.toString != "undefined" && obj.toString !== v.toString) {
      obj.toString = v.toString
    }
  }
  return obj
}
module$copyProperties.module$exports = copyProperties$$module$copyProperties;
if(module$copyProperties.module$exports) {
  module$copyProperties = module$copyProperties.module$exports
}
goog.provide("module$emptyFunction");
var module$emptyFunction = {};
goog.require("module$copyProperties");
var copyProperties$$module$emptyFunction = module$copyProperties;
function makeEmptyFunction$$module$emptyFunction(arg) {
  return function() {
    return arg
  }
}
function emptyFunction$$module$emptyFunction() {
}
copyProperties$$module$emptyFunction(emptyFunction$$module$emptyFunction, {thatReturns:makeEmptyFunction$$module$emptyFunction, thatReturnsFalse:makeEmptyFunction$$module$emptyFunction(false), thatReturnsTrue:makeEmptyFunction$$module$emptyFunction(true), thatReturnsNull:makeEmptyFunction$$module$emptyFunction(null), thatReturnsThis:function() {
  return this
}, thatReturnsArgument:function(arg) {
  return arg
}});
module$emptyFunction.module$exports = emptyFunction$$module$emptyFunction;
if(module$emptyFunction.module$exports) {
  module$emptyFunction = module$emptyFunction.module$exports
}
goog.provide("module$memoizeStringOnly");
var module$memoizeStringOnly = {};
function memoizeStringOnly$$module$memoizeStringOnly(callback) {
  var cache = {};
  return function(string) {
    if(cache.hasOwnProperty(string)) {
      return cache[string]
    }else {
      return cache[string] = callback.call(this, string)
    }
  }
}
module$memoizeStringOnly.module$exports = memoizeStringOnly$$module$memoizeStringOnly;
if(module$memoizeStringOnly.module$exports) {
  module$memoizeStringOnly = module$memoizeStringOnly.module$exports
}
goog.provide("module$isNode");
var module$isNode = {};
function isNode$$module$isNode(object) {
  return!!(object && (typeof Node !== "undefined" ? object instanceof Node : typeof object === "object" && typeof object.nodeType === "number" && typeof object.nodeName === "string"))
}
module$isNode.module$exports = isNode$$module$isNode;
if(module$isNode.module$exports) {
  module$isNode = module$isNode.module$exports
}
goog.provide("module$isTextNode");
var module$isTextNode = {};
goog.require("module$isNode");
var isNode$$module$isTextNode = module$isNode;
function isTextNode$$module$isTextNode(object) {
  return isNode$$module$isTextNode(object) && object.nodeType == 3
}
module$isTextNode.module$exports = isTextNode$$module$isTextNode;
if(module$isTextNode.module$exports) {
  module$isTextNode = module$isTextNode.module$exports
}
goog.provide("module$nodeContains");
var module$nodeContains = {};
goog.require("module$isTextNode");
var isTextNode$$module$nodeContains = module$isTextNode;
function nodeContains$$module$nodeContains(outerNode, innerNode) {
  if(!outerNode || !innerNode) {
    return false
  }else {
    if(outerNode === innerNode) {
      return true
    }else {
      if(isTextNode$$module$nodeContains(outerNode)) {
        return false
      }else {
        if(isTextNode$$module$nodeContains(innerNode)) {
          return nodeContains$$module$nodeContains(outerNode, innerNode.parentNode)
        }else {
          if(outerNode.contains) {
            return outerNode.contains(innerNode)
          }else {
            if(outerNode.compareDocumentPosition) {
              return!!(outerNode.compareDocumentPosition(innerNode) & 16)
            }else {
              return false
            }
          }
        }
      }
    }
  }
}
module$nodeContains.module$exports = nodeContains$$module$nodeContains;
if(module$nodeContains.module$exports) {
  module$nodeContains = module$nodeContains.module$exports
}
goog.provide("module$getNodeForCharacterOffset");
var module$getNodeForCharacterOffset = {};
function getLeafNode$$module$getNodeForCharacterOffset(node) {
  while(node && node.firstChild) {
    node = node.firstChild
  }
  return node
}
function getSiblingNode$$module$getNodeForCharacterOffset(node) {
  while(node) {
    if(node.nextSibling) {
      return node.nextSibling
    }
    node = node.parentNode
  }
}
function getNodeForCharacterOffset$$module$getNodeForCharacterOffset(root, offset) {
  var node = getLeafNode$$module$getNodeForCharacterOffset(root);
  var nodeStart = 0;
  var nodeEnd = 0;
  while(node) {
    if(node.nodeType == 3) {
      nodeEnd = nodeStart + node.textContent.length;
      if(nodeStart <= offset && nodeEnd >= offset) {
        return{node:node, offset:offset - nodeStart}
      }
      nodeStart = nodeEnd
    }
    node = getLeafNode$$module$getNodeForCharacterOffset(getSiblingNode$$module$getNodeForCharacterOffset(node))
  }
}
module$getNodeForCharacterOffset.module$exports = getNodeForCharacterOffset$$module$getNodeForCharacterOffset;
if(module$getNodeForCharacterOffset.module$exports) {
  module$getNodeForCharacterOffset = module$getNodeForCharacterOffset.module$exports
}
goog.provide("module$ReactDOMSelection");
var module$ReactDOMSelection = {};
goog.require("module$getTextContentAccessor");
goog.require("module$getNodeForCharacterOffset");
var getNodeForCharacterOffset$$module$ReactDOMSelection = module$getNodeForCharacterOffset;
var getTextContentAccessor$$module$ReactDOMSelection = module$getTextContentAccessor;
function getIESelection$$module$ReactDOMSelection(node) {
  var selection = document.selection;
  var selectedRange = selection.createRange();
  var selectedLength = selectedRange.text.length;
  var fromStart = selectedRange.duplicate();
  fromStart.moveToElementText(node);
  fromStart.setEndPoint("EndToStart", selectedRange);
  var startOffset = fromStart.text.length;
  var endOffset = startOffset + selectedLength;
  return{start:startOffset, end:endOffset}
}
function getModernSelection$$module$ReactDOMSelection(node) {
  var selection = window.getSelection();
  var anchorNode = selection.anchorNode;
  var anchorOffset = selection.anchorOffset;
  var focusNode = selection.focusNode;
  var focusOffset = selection.focusOffset;
  var currentRange = selection.getRangeAt(0);
  var rangeLength = currentRange.toString().length;
  var tempRange = currentRange.cloneRange();
  tempRange.selectNodeContents(node);
  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);
  var start = tempRange.toString().length;
  var end = start + rangeLength;
  var detectionRange = document.createRange();
  detectionRange.setStart(anchorNode, anchorOffset);
  detectionRange.setEnd(focusNode, focusOffset);
  var isBackward = detectionRange.collapsed;
  detectionRange.detach();
  return{start:isBackward ? end : start, end:isBackward ? start : end}
}
function setIESelection$$module$ReactDOMSelection(node, offsets) {
  var range = document.selection.createRange().duplicate();
  var start, end;
  if(typeof offsets.end === "undefined") {
    start = offsets.start;
    end = start
  }else {
    if(offsets.start > offsets.end) {
      start = offsets.end;
      end = offsets.start
    }else {
      start = offsets.start;
      end = offsets.end
    }
  }
  range.moveToElementText(node);
  range.moveStart("character", start);
  range.setEndPoint("EndToStart", range);
  range.moveEnd("character", end - start);
  range.select()
}
function setModernSelection$$module$ReactDOMSelection(node, offsets) {
  var selection = window.getSelection();
  var length = node[getTextContentAccessor$$module$ReactDOMSelection()].length;
  var start = Math.min(offsets.start, length);
  var end = typeof offsets.end === "undefined" ? start : Math.min(offsets.end, length);
  var startMarker = getNodeForCharacterOffset$$module$ReactDOMSelection(node, start);
  var endMarker = getNodeForCharacterOffset$$module$ReactDOMSelection(node, end);
  if(startMarker && endMarker) {
    var range = document.createRange();
    range.setStart(startMarker.node, startMarker.offset);
    selection.removeAllRanges();
    selection.addRange(range);
    selection.extend(endMarker.node, endMarker.offset);
    range.detach()
  }
}
var ReactDOMSelection$$module$ReactDOMSelection = {get:function(node) {
  var getSelection = document.selection ? getIESelection$$module$ReactDOMSelection : getModernSelection$$module$ReactDOMSelection;
  return getSelection(node)
}, set:function(node, offsets) {
  var setSelection = document.selection ? setIESelection$$module$ReactDOMSelection : setModernSelection$$module$ReactDOMSelection;
  setSelection(node, offsets)
}};
module$ReactDOMSelection.module$exports = ReactDOMSelection$$module$ReactDOMSelection;
if(module$ReactDOMSelection.module$exports) {
  module$ReactDOMSelection = module$ReactDOMSelection.module$exports
}
goog.provide("module$ReactInputSelection");
var module$ReactInputSelection = {};
goog.require("module$nodeContains");
goog.require("module$ReactDOMSelection");
var ReactDOMSelection$$module$ReactInputSelection = module$ReactDOMSelection;
var nodeContains$$module$ReactInputSelection = module$nodeContains;
function getActiveElement$$module$ReactInputSelection() {
  try {
    return document.activeElement
  }catch(e) {
  }
}
function isInDocument$$module$ReactInputSelection(node) {
  return nodeContains$$module$ReactInputSelection(document.documentElement, node)
}
var ReactInputSelection$$module$ReactInputSelection = {hasSelectionCapabilities:function(elem) {
  return elem && (elem.nodeName === "INPUT" && elem.type === "text" || elem.nodeName === "TEXTAREA" || elem.contentEditable === "true")
}, getSelectionInformation:function() {
  var focusedElem = getActiveElement$$module$ReactInputSelection();
  return{focusedElem:focusedElem, selectionRange:ReactInputSelection$$module$ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection$$module$ReactInputSelection.getSelection(focusedElem) : null}
}, restoreSelection:function(priorSelectionInformation) {
  var curFocusedElem = getActiveElement$$module$ReactInputSelection();
  var priorFocusedElem = priorSelectionInformation.focusedElem;
  var priorSelectionRange = priorSelectionInformation.selectionRange;
  if(curFocusedElem !== priorFocusedElem && isInDocument$$module$ReactInputSelection(priorFocusedElem)) {
    if(ReactInputSelection$$module$ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
      ReactInputSelection$$module$ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange)
    }
    priorFocusedElem.focus()
  }
}, getSelection:function(input) {
  var selection;
  if("selectionStart" in input) {
    selection = {start:input.selectionStart, end:input.selectionEnd}
  }else {
    if(document.selection && input.nodeName === "INPUT") {
      var range = document.selection.createRange();
      if(range.parentElement() === input) {
        selection = {start:-range.moveStart("character", -input.value.length), end:-range.moveEnd("character", -input.value.length)}
      }
    }else {
      selection = ReactDOMSelection$$module$ReactInputSelection.get(input)
    }
  }
  return selection || {start:0, end:0}
}, setSelection:function(input, offsets) {
  var start = offsets.start;
  var end = offsets.end;
  if(typeof end === "undefined") {
    end = start
  }
  if("selectionStart" in input) {
    input.selectionStart = start;
    input.selectionEnd = Math.min(end, input.value.length)
  }else {
    if(document.selection && input.nodeName === "INPUT") {
      var range = input.createTextRange();
      range.collapse(true);
      range.moveStart("character", start);
      range.moveEnd("character", end - start);
      range.select()
    }else {
      ReactDOMSelection$$module$ReactInputSelection.set(input, offsets)
    }
  }
}};
module$ReactInputSelection.module$exports = ReactInputSelection$$module$ReactInputSelection;
if(module$ReactInputSelection.module$exports) {
  module$ReactInputSelection = module$ReactInputSelection.module$exports
}
goog.provide("module$ReactPerf");
var module$ReactPerf = {};
var ReactPerf$$module$ReactPerf = {enableMeasure:false, storedMeasure:_noMeasure$$module$ReactPerf, measure:function(objName, fnName, func) {
  return func
}, injection:{injectMeasure:function(measure) {
  ReactPerf$$module$ReactPerf.storedMeasure = measure
}}};
function _noMeasure$$module$ReactPerf(objName, fnName, func) {
  return func
}
module$ReactPerf.module$exports = ReactPerf$$module$ReactPerf;
if(module$ReactPerf.module$exports) {
  module$ReactPerf = module$ReactPerf.module$exports
}
goog.provide("module$ReactCurrentOwner");
var module$ReactCurrentOwner = {};
var ReactCurrentOwner$$module$ReactCurrentOwner = {current:null};
module$ReactCurrentOwner.module$exports = ReactCurrentOwner$$module$ReactCurrentOwner;
if(module$ReactCurrentOwner.module$exports) {
  module$ReactCurrentOwner = module$ReactCurrentOwner.module$exports
}
goog.provide("module$invariant");
var module$invariant = {};
function invariant$$module$invariant(condition) {
  if(!condition) {
    throw new Error("Invariant Violation");
  }
}
module$invariant.module$exports = invariant$$module$invariant;
if(module$invariant.module$exports) {
  module$invariant = module$invariant.module$exports
}
goog.provide("module$ReactInstanceHandles");
var module$ReactInstanceHandles = {};
goog.require("module$invariant");
var invariant$$module$ReactInstanceHandles = module$invariant;
var SEPARATOR$$module$ReactInstanceHandles = ".";
var SEPARATOR_LENGTH$$module$ReactInstanceHandles = SEPARATOR$$module$ReactInstanceHandles.length;
var MAX_TREE_DEPTH$$module$ReactInstanceHandles = 100;
var GLOBAL_MOUNT_POINT_MAX$$module$ReactInstanceHandles = 9999999;
function getReactRootIDString$$module$ReactInstanceHandles(index) {
  return SEPARATOR$$module$ReactInstanceHandles + "r[" + index.toString(36) + "]"
}
function isBoundary$$module$ReactInstanceHandles(id, index) {
  return id.charAt(index) === SEPARATOR$$module$ReactInstanceHandles || index === id.length
}
function isValidID$$module$ReactInstanceHandles(id) {
  return id === "" || id.charAt(0) === SEPARATOR$$module$ReactInstanceHandles && id.charAt(id.length - 1) !== SEPARATOR$$module$ReactInstanceHandles
}
function isAncestorIDOf$$module$ReactInstanceHandles(ancestorID, descendantID) {
  return descendantID.indexOf(ancestorID) === 0 && isBoundary$$module$ReactInstanceHandles(descendantID, ancestorID.length)
}
function getParentID$$module$ReactInstanceHandles(id) {
  return id ? id.substr(0, id.lastIndexOf(SEPARATOR$$module$ReactInstanceHandles)) : ""
}
function getNextDescendantID$$module$ReactInstanceHandles(ancestorID, destinationID) {
  invariant$$module$ReactInstanceHandles(isValidID$$module$ReactInstanceHandles(ancestorID) && isValidID$$module$ReactInstanceHandles(destinationID));
  invariant$$module$ReactInstanceHandles(isAncestorIDOf$$module$ReactInstanceHandles(ancestorID, destinationID));
  if(ancestorID === destinationID) {
    return ancestorID
  }
  var start = ancestorID.length + SEPARATOR_LENGTH$$module$ReactInstanceHandles;
  for(var i = start;i < destinationID.length;i++) {
    if(isBoundary$$module$ReactInstanceHandles(destinationID, i)) {
      break
    }
  }
  return destinationID.substr(0, i)
}
function getFirstCommonAncestorID$$module$ReactInstanceHandles(oneID, twoID) {
  var minLength = Math.min(oneID.length, twoID.length);
  if(minLength === 0) {
    return""
  }
  var lastCommonMarkerIndex = 0;
  for(var i = 0;i <= minLength;i++) {
    if(isBoundary$$module$ReactInstanceHandles(oneID, i) && isBoundary$$module$ReactInstanceHandles(twoID, i)) {
      lastCommonMarkerIndex = i
    }else {
      if(oneID.charAt(i) !== twoID.charAt(i)) {
        break
      }
    }
  }
  var longestCommonID = oneID.substr(0, lastCommonMarkerIndex);
  invariant$$module$ReactInstanceHandles(isValidID$$module$ReactInstanceHandles(longestCommonID));
  return longestCommonID
}
function traverseParentPath$$module$ReactInstanceHandles(start, stop, cb, arg, skipFirst, skipLast) {
  start = start || "";
  stop = stop || "";
  invariant$$module$ReactInstanceHandles(start !== stop);
  var traverseUp = isAncestorIDOf$$module$ReactInstanceHandles(stop, start);
  invariant$$module$ReactInstanceHandles(traverseUp || isAncestorIDOf$$module$ReactInstanceHandles(start, stop));
  var depth = 0;
  var traverse = traverseUp ? getParentID$$module$ReactInstanceHandles : getNextDescendantID$$module$ReactInstanceHandles;
  for(var id = start;;id = traverse(id, stop)) {
    if((!skipFirst || id !== start) && (!skipLast || id !== stop)) {
      cb(id, traverseUp, arg)
    }
    if(id === stop) {
      break
    }
    invariant$$module$ReactInstanceHandles(depth++ < MAX_TREE_DEPTH$$module$ReactInstanceHandles)
  }
}
var ReactInstanceHandles$$module$ReactInstanceHandles = {createReactRootID:function() {
  return getReactRootIDString$$module$ReactInstanceHandles(Math.ceil(Math.random() * GLOBAL_MOUNT_POINT_MAX$$module$ReactInstanceHandles))
}, createReactID:function(rootID, name) {
  return rootID + SEPARATOR$$module$ReactInstanceHandles + name
}, getReactRootIDFromNodeID:function(id) {
  var regexResult = /\.r\[[^\]]+\]/.exec(id);
  return regexResult && regexResult[0]
}, traverseEnterLeave:function(leaveID, enterID, cb, upArg, downArg) {
  var ancestorID = getFirstCommonAncestorID$$module$ReactInstanceHandles(leaveID, enterID);
  if(ancestorID !== leaveID) {
    traverseParentPath$$module$ReactInstanceHandles(leaveID, ancestorID, cb, upArg, false, true)
  }
  if(ancestorID !== enterID) {
    traverseParentPath$$module$ReactInstanceHandles(ancestorID, enterID, cb, downArg, true, false)
  }
}, traverseTwoPhase:function(targetID, cb, arg) {
  if(targetID) {
    traverseParentPath$$module$ReactInstanceHandles("", targetID, cb, arg, true, false);
    traverseParentPath$$module$ReactInstanceHandles(targetID, "", cb, arg, false, true)
  }
}, _getFirstCommonAncestorID:getFirstCommonAncestorID$$module$ReactInstanceHandles, _getNextDescendantID:getNextDescendantID$$module$ReactInstanceHandles, isAncestorIDOf:isAncestorIDOf$$module$ReactInstanceHandles, SEPARATOR:SEPARATOR$$module$ReactInstanceHandles};
module$ReactInstanceHandles.module$exports = ReactInstanceHandles$$module$ReactInstanceHandles;
if(module$ReactInstanceHandles.module$exports) {
  module$ReactInstanceHandles = module$ReactInstanceHandles.module$exports
}
goog.provide("module$LinkedValueMixin");
var module$LinkedValueMixin = {};
goog.require("module$invariant");
var invariant$$module$LinkedValueMixin = module$invariant;
var LinkedValueMixin$$module$LinkedValueMixin = {_assertLink:function() {
  invariant$$module$LinkedValueMixin(this.props.value == null && this.props.onChange == null)
}, getValue:function() {
  if(this.props.valueLink) {
    this._assertLink();
    return this.props.valueLink.value
  }
  return this.props.value
}, getOnChange:function() {
  if(this.props.valueLink) {
    this._assertLink();
    return this._handleLinkedValueChange
  }
  return this.props.onChange
}, _handleLinkedValueChange:function(e) {
  this.props.valueLink.requestChange(e.target.value)
}};
module$LinkedValueMixin.module$exports = LinkedValueMixin$$module$LinkedValueMixin;
if(module$LinkedValueMixin.module$exports) {
  module$LinkedValueMixin = module$LinkedValueMixin.module$exports
}
goog.provide("module$mixInto");
var module$mixInto = {};
var mixInto$$module$mixInto = function(constructor, methodBag) {
  var methodName;
  for(methodName in methodBag) {
    if(!methodBag.hasOwnProperty(methodName)) {
      continue
    }
    constructor.prototype[methodName] = methodBag[methodName]
  }
};
module$mixInto.module$exports = mixInto$$module$mixInto;
if(module$mixInto.module$exports) {
  module$mixInto = module$mixInto.module$exports
}
goog.provide("module$objMap");
var module$objMap = {};
function objMap$$module$objMap(obj, func, context) {
  if(!obj) {
    return null
  }
  var i = 0;
  var ret = {};
  for(var key in obj) {
    if(obj.hasOwnProperty(key)) {
      ret[key] = func.call(context, obj[key], key, i++)
    }
  }
  return ret
}
module$objMap.module$exports = objMap$$module$objMap;
if(module$objMap.module$exports) {
  module$objMap = module$objMap.module$exports
}
goog.provide("module$ReactRefs");
var module$ReactRefs = {};
var ReactRefs$$module$ReactRefs = {getComponentRef:function(component) {
  return component.props.ref
}};
module$ReactRefs.module$exports = ReactRefs$$module$ReactRefs;
if(module$ReactRefs.module$exports) {
  module$ReactRefs = module$ReactRefs.module$exports
}
goog.provide("module$objMapKeyVal");
var module$objMapKeyVal = {};
function objMapKeyVal$$module$objMapKeyVal(obj, func, context) {
  if(!obj) {
    return null
  }
  var i = 0;
  var ret = {};
  for(var key in obj) {
    if(obj.hasOwnProperty(key)) {
      ret[key] = func.call(context, key, obj[key], i++)
    }
  }
  return ret
}
module$objMapKeyVal.module$exports = objMapKeyVal$$module$objMapKeyVal;
if(module$objMapKeyVal.module$exports) {
  module$objMapKeyVal = module$objMapKeyVal.module$exports
}
goog.provide("module$getReactRootElementInContainer");
var module$getReactRootElementInContainer = {};
function getReactRootElementInContainer$$module$getReactRootElementInContainer(container) {
  return container && container.firstChild
}
module$getReactRootElementInContainer.module$exports = getReactRootElementInContainer$$module$getReactRootElementInContainer;
if(module$getReactRootElementInContainer.module$exports) {
  module$getReactRootElementInContainer = module$getReactRootElementInContainer.module$exports
}
goog.provide("module$createObjectFrom");
var module$createObjectFrom = {};
function createObjectFrom$$module$createObjectFrom(keys, values) {
  var object = {};
  var isArray = Array.isArray(values);
  if(typeof values == "undefined") {
    values = true
  }
  for(var ii = keys.length;ii--;) {
    object[keys[ii]] = isArray ? values[ii] : values
  }
  return object
}
module$createObjectFrom.module$exports = createObjectFrom$$module$createObjectFrom;
if(module$createObjectFrom.module$exports) {
  module$createObjectFrom = module$createObjectFrom.module$exports
}
goog.provide("module$ReactPropTypes");
var module$ReactPropTypes = {};
goog.require("module$invariant");
goog.require("module$createObjectFrom");
var createObjectFrom$$module$ReactPropTypes = module$createObjectFrom;
var invariant$$module$ReactPropTypes = module$invariant;
var Props$$module$ReactPropTypes = {array:createPrimitiveTypeChecker$$module$ReactPropTypes("array"), bool:createPrimitiveTypeChecker$$module$ReactPropTypes("boolean"), func:createPrimitiveTypeChecker$$module$ReactPropTypes("function"), number:createPrimitiveTypeChecker$$module$ReactPropTypes("number"), object:createPrimitiveTypeChecker$$module$ReactPropTypes("object"), string:createPrimitiveTypeChecker$$module$ReactPropTypes("string"), oneOf:createEnumTypeChecker$$module$ReactPropTypes, instanceOf:createInstanceTypeChecker$$module$ReactPropTypes};
var ANONYMOUS$$module$ReactPropTypes = "\x3c\x3canonymous\x3e\x3e";
function createPrimitiveTypeChecker$$module$ReactPropTypes(expectedType) {
  function validatePrimitiveType(propValue, propName, componentName) {
    var propType = typeof propValue;
    if(propType === "object" && Array.isArray(propValue)) {
      propType = "array"
    }
    invariant$$module$ReactPropTypes(propType === expectedType)
  }
  return createChainableTypeChecker$$module$ReactPropTypes(validatePrimitiveType)
}
function createEnumTypeChecker$$module$ReactPropTypes(expectedValues) {
  var expectedEnum = createObjectFrom$$module$ReactPropTypes(expectedValues);
  function validateEnumType(propValue, propName, componentName) {
    invariant$$module$ReactPropTypes(expectedEnum[propValue])
  }
  return createChainableTypeChecker$$module$ReactPropTypes(validateEnumType)
}
function createInstanceTypeChecker$$module$ReactPropTypes(expectedClass) {
  function validateInstanceType(propValue, propName, componentName) {
    invariant$$module$ReactPropTypes(propValue instanceof expectedClass)
  }
  return createChainableTypeChecker$$module$ReactPropTypes(validateInstanceType)
}
function createChainableTypeChecker$$module$ReactPropTypes(validate) {
  function createTypeChecker(isRequired) {
    function checkType(props, propName, componentName) {
      var propValue = props[propName];
      if(propValue != null) {
        validate(propValue, propName, componentName || ANONYMOUS$$module$ReactPropTypes)
      }else {
        invariant$$module$ReactPropTypes(!isRequired)
      }
    }
    if(!isRequired) {
      checkType.isRequired = createTypeChecker(true)
    }
    return checkType
  }
  return createTypeChecker(false)
}
module$ReactPropTypes.module$exports = Props$$module$ReactPropTypes;
if(module$ReactPropTypes.module$exports) {
  module$ReactPropTypes = module$ReactPropTypes.module$exports
}
goog.provide("module$ReactOwner");
var module$ReactOwner = {};
goog.require("module$invariant");
var invariant$$module$ReactOwner = module$invariant;
var ReactOwner$$module$ReactOwner = {isValidOwner:function(object) {
  return!!(object && typeof object.attachRef === "function" && typeof object.detachRef === "function")
}, addComponentAsRefTo:function(component, ref, owner) {
  invariant$$module$ReactOwner(ReactOwner$$module$ReactOwner.isValidOwner(owner));
  owner.attachRef(ref, component)
}, removeComponentAsRefFrom:function(component, ref, owner) {
  invariant$$module$ReactOwner(ReactOwner$$module$ReactOwner.isValidOwner(owner));
  if(owner.refs[ref] === component) {
    owner.detachRef(ref)
  }
}, Mixin:{attachRef:function(ref, component) {
  invariant$$module$ReactOwner(component.isOwnedBy(this));
  var refs = this.refs || (this.refs = {});
  refs[ref] = component
}, detachRef:function(ref) {
  delete this.refs[ref]
}}};
module$ReactOwner.module$exports = ReactOwner$$module$ReactOwner;
if(module$ReactOwner.module$exports) {
  module$ReactOwner = module$ReactOwner.module$exports
}
goog.provide("module$ReactUpdates");
var module$ReactUpdates = {};
goog.require("module$invariant");
var invariant$$module$ReactUpdates = module$invariant;
var dirtyComponents$$module$ReactUpdates = [];
var batchingStrategy$$module$ReactUpdates = null;
function ensureBatchingStrategy$$module$ReactUpdates() {
  invariant$$module$ReactUpdates(batchingStrategy$$module$ReactUpdates)
}
function batchedUpdates$$module$ReactUpdates(callback, param) {
  ensureBatchingStrategy$$module$ReactUpdates();
  batchingStrategy$$module$ReactUpdates.batchedUpdates(callback, param)
}
function mountDepthComparator$$module$ReactUpdates(c1, c2) {
  return c1._mountDepth - c2._mountDepth
}
function runBatchedUpdates$$module$ReactUpdates() {
  dirtyComponents$$module$ReactUpdates.sort(mountDepthComparator$$module$ReactUpdates);
  for(var i = 0;i < dirtyComponents$$module$ReactUpdates.length;i++) {
    var component = dirtyComponents$$module$ReactUpdates[i];
    if(component.isMounted()) {
      var callbacks = component._pendingCallbacks;
      component._pendingCallbacks = null;
      component.performUpdateIfNecessary();
      if(callbacks) {
        for(var j = 0;j < callbacks.length;j++) {
          callbacks[j].call(component)
        }
      }
    }
  }
}
function clearDirtyComponents$$module$ReactUpdates() {
  dirtyComponents$$module$ReactUpdates.length = 0
}
function flushBatchedUpdates$$module$ReactUpdates() {
  try {
    runBatchedUpdates$$module$ReactUpdates()
  }catch(e) {
    throw e;
  }finally {
    clearDirtyComponents$$module$ReactUpdates()
  }
}
function enqueueUpdate$$module$ReactUpdates(component, callback) {
  invariant$$module$ReactUpdates(!callback || typeof callback === "function");
  ensureBatchingStrategy$$module$ReactUpdates();
  if(!batchingStrategy$$module$ReactUpdates.isBatchingUpdates) {
    component.performUpdateIfNecessary();
    callback && callback();
    return
  }
  dirtyComponents$$module$ReactUpdates.push(component);
  if(callback) {
    if(component._pendingCallbacks) {
      component._pendingCallbacks.push(callback)
    }else {
      component._pendingCallbacks = [callback]
    }
  }
}
var ReactUpdatesInjection$$module$ReactUpdates = {injectBatchingStrategy:function(_batchingStrategy) {
  invariant$$module$ReactUpdates(_batchingStrategy);
  invariant$$module$ReactUpdates(typeof _batchingStrategy.batchedUpdates === "function");
  invariant$$module$ReactUpdates(typeof _batchingStrategy.isBatchingUpdates === "boolean");
  batchingStrategy$$module$ReactUpdates = _batchingStrategy
}};
var ReactUpdates$$module$ReactUpdates = {batchedUpdates:batchedUpdates$$module$ReactUpdates, enqueueUpdate:enqueueUpdate$$module$ReactUpdates, flushBatchedUpdates:flushBatchedUpdates$$module$ReactUpdates, injection:ReactUpdatesInjection$$module$ReactUpdates};
module$ReactUpdates.module$exports = ReactUpdates$$module$ReactUpdates;
if(module$ReactUpdates.module$exports) {
  module$ReactUpdates = module$ReactUpdates.module$exports
}
goog.provide("module$keyMirror");
var module$keyMirror = {};
goog.require("module$invariant");
var invariant$$module$keyMirror = module$invariant;
var keyMirror$$module$keyMirror = function(obj) {
  var ret = {};
  var key;
  invariant$$module$keyMirror(obj instanceof Object && !Array.isArray(obj));
  for(key in obj) {
    if(!obj.hasOwnProperty(key)) {
      continue
    }
    ret[key] = key
  }
  return ret
};
module$keyMirror.module$exports = keyMirror$$module$keyMirror;
if(module$keyMirror.module$exports) {
  module$keyMirror = module$keyMirror.module$exports
}
goog.provide("module$DOMProperty");
var module$DOMProperty = {};
goog.require("module$invariant");
var invariant$$module$DOMProperty = module$invariant;
var DOMPropertyInjection$$module$DOMProperty = {MUST_USE_ATTRIBUTE:1, MUST_USE_PROPERTY:2, HAS_BOOLEAN_VALUE:4, HAS_SIDE_EFFECTS:8, injectDOMPropertyConfig:function(domPropertyConfig) {
  var Properties = domPropertyConfig.Properties || {};
  var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
  var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
  var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};
  if(domPropertyConfig.isCustomAttribute) {
    DOMProperty$$module$DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute)
  }
  for(var propName in Properties) {
    invariant$$module$DOMProperty(!DOMProperty$$module$DOMProperty.isStandardName[propName]);
    DOMProperty$$module$DOMProperty.isStandardName[propName] = true;
    var lowerCased = propName.toLowerCase();
    DOMProperty$$module$DOMProperty.getPossibleStandardName[lowerCased] = propName;
    var attributeName = DOMAttributeNames[propName];
    if(attributeName) {
      DOMProperty$$module$DOMProperty.getPossibleStandardName[attributeName] = propName
    }
    DOMProperty$$module$DOMProperty.getAttributeName[propName] = attributeName || lowerCased;
    DOMProperty$$module$DOMProperty.getPropertyName[propName] = DOMPropertyNames[propName] || propName;
    var mutationMethod = DOMMutationMethods[propName];
    if(mutationMethod) {
      DOMProperty$$module$DOMProperty.getMutationMethod[propName] = mutationMethod
    }
    var propConfig = Properties[propName];
    DOMProperty$$module$DOMProperty.mustUseAttribute[propName] = propConfig & DOMPropertyInjection$$module$DOMProperty.MUST_USE_ATTRIBUTE;
    DOMProperty$$module$DOMProperty.mustUseProperty[propName] = propConfig & DOMPropertyInjection$$module$DOMProperty.MUST_USE_PROPERTY;
    DOMProperty$$module$DOMProperty.hasBooleanValue[propName] = propConfig & DOMPropertyInjection$$module$DOMProperty.HAS_BOOLEAN_VALUE;
    DOMProperty$$module$DOMProperty.hasSideEffects[propName] = propConfig & DOMPropertyInjection$$module$DOMProperty.HAS_SIDE_EFFECTS;
    invariant$$module$DOMProperty(!DOMProperty$$module$DOMProperty.mustUseAttribute[propName] || !DOMProperty$$module$DOMProperty.mustUseProperty[propName]);
    invariant$$module$DOMProperty(DOMProperty$$module$DOMProperty.mustUseProperty[propName] || !DOMProperty$$module$DOMProperty.hasSideEffects[propName])
  }
}};
var defaultValueCache$$module$DOMProperty = {};
var DOMProperty$$module$DOMProperty = {isStandardName:{}, getPossibleStandardName:{}, getAttributeName:{}, getPropertyName:{}, getMutationMethod:{}, mustUseAttribute:{}, mustUseProperty:{}, hasBooleanValue:{}, hasSideEffects:{}, _isCustomAttributeFunctions:[], isCustomAttribute:function(attributeName) {
  return DOMProperty$$module$DOMProperty._isCustomAttributeFunctions.some(function(isCustomAttributeFn) {
    return isCustomAttributeFn.call(null, attributeName)
  })
}, getDefaultValueForProperty:function(nodeName, prop) {
  var nodeDefaults = defaultValueCache$$module$DOMProperty[nodeName];
  var testElement;
  if(!nodeDefaults) {
    defaultValueCache$$module$DOMProperty[nodeName] = nodeDefaults = {}
  }
  if(!(prop in nodeDefaults)) {
    testElement = document.createElement(nodeName);
    nodeDefaults[prop] = testElement[prop]
  }
  return nodeDefaults[prop]
}, injection:DOMPropertyInjection$$module$DOMProperty};
module$DOMProperty.module$exports = DOMProperty$$module$DOMProperty;
if(module$DOMProperty.module$exports) {
  module$DOMProperty = module$DOMProperty.module$exports
}
goog.provide("module$DefaultDOMPropertyConfig");
var module$DefaultDOMPropertyConfig = {};
goog.require("module$DOMProperty");
var DOMProperty$$module$DefaultDOMPropertyConfig = module$DOMProperty;
var MUST_USE_ATTRIBUTE$$module$DefaultDOMPropertyConfig = DOMProperty$$module$DefaultDOMPropertyConfig.injection.MUST_USE_ATTRIBUTE;
var MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig = DOMProperty$$module$DefaultDOMPropertyConfig.injection.MUST_USE_PROPERTY;
var HAS_BOOLEAN_VALUE$$module$DefaultDOMPropertyConfig = DOMProperty$$module$DefaultDOMPropertyConfig.injection.HAS_BOOLEAN_VALUE;
var HAS_SIDE_EFFECTS$$module$DefaultDOMPropertyConfig = DOMProperty$$module$DefaultDOMPropertyConfig.injection.HAS_SIDE_EFFECTS;
var DefaultDOMPropertyConfig$$module$DefaultDOMPropertyConfig = {isCustomAttribute:RegExp.prototype.test.bind(/^(data|aria)-[a-z_][a-z\d_.\-]*$/), Properties:{accessKey:null, accept:null, action:null, allowFullScreen:MUST_USE_ATTRIBUTE$$module$DefaultDOMPropertyConfig | HAS_BOOLEAN_VALUE$$module$DefaultDOMPropertyConfig, allowTransparency:MUST_USE_ATTRIBUTE$$module$DefaultDOMPropertyConfig, alt:null, autoComplete:null, autoFocus:HAS_BOOLEAN_VALUE$$module$DefaultDOMPropertyConfig, autoPlay:HAS_BOOLEAN_VALUE$$module$DefaultDOMPropertyConfig, 
cellPadding:null, cellSpacing:null, charSet:MUST_USE_ATTRIBUTE$$module$DefaultDOMPropertyConfig, checked:MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig | HAS_BOOLEAN_VALUE$$module$DefaultDOMPropertyConfig, className:MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig, colSpan:null, content:null, contentEditable:null, contextMenu:MUST_USE_ATTRIBUTE$$module$DefaultDOMPropertyConfig, controls:MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig | HAS_BOOLEAN_VALUE$$module$DefaultDOMPropertyConfig, 
data:null, dateTime:MUST_USE_ATTRIBUTE$$module$DefaultDOMPropertyConfig, dir:null, disabled:MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig | HAS_BOOLEAN_VALUE$$module$DefaultDOMPropertyConfig, draggable:null, encType:null, form:MUST_USE_ATTRIBUTE$$module$DefaultDOMPropertyConfig, frameBorder:MUST_USE_ATTRIBUTE$$module$DefaultDOMPropertyConfig, height:MUST_USE_ATTRIBUTE$$module$DefaultDOMPropertyConfig, hidden:MUST_USE_ATTRIBUTE$$module$DefaultDOMPropertyConfig | HAS_BOOLEAN_VALUE$$module$DefaultDOMPropertyConfig, 
href:null, htmlFor:null, httpEquiv:null, icon:null, id:MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig, label:null, lang:null, list:null, max:null, maxLength:MUST_USE_ATTRIBUTE$$module$DefaultDOMPropertyConfig, method:null, min:null, multiple:MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig | HAS_BOOLEAN_VALUE$$module$DefaultDOMPropertyConfig, name:null, pattern:null, poster:null, preload:null, placeholder:null, radioGroup:null, rel:null, readOnly:MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig | 
HAS_BOOLEAN_VALUE$$module$DefaultDOMPropertyConfig, required:HAS_BOOLEAN_VALUE$$module$DefaultDOMPropertyConfig, role:MUST_USE_ATTRIBUTE$$module$DefaultDOMPropertyConfig, rowSpan:null, scrollLeft:MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig, scrollTop:MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig, selected:MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig | HAS_BOOLEAN_VALUE$$module$DefaultDOMPropertyConfig, size:null, spellCheck:null, src:null, step:null, style:null, tabIndex:null, target:null, 
title:null, type:null, value:MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig | HAS_SIDE_EFFECTS$$module$DefaultDOMPropertyConfig, width:MUST_USE_ATTRIBUTE$$module$DefaultDOMPropertyConfig, wmode:MUST_USE_ATTRIBUTE$$module$DefaultDOMPropertyConfig, autoCapitalize:null, cx:MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig, cy:MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig, d:MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig, fill:MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig, fx:MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig, 
fy:MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig, points:MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig, r:MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig, stroke:MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig, strokeLinecap:MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig, strokeWidth:MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig, transform:MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig, x:MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig, x1:MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig, 
x2:MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig, version:MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig, viewBox:MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig, y:MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig, y1:MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig, y2:MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig, spreadMethod:MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig, offset:MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig, stopColor:MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig, 
stopOpacity:MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig, gradientUnits:MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig, gradientTransform:MUST_USE_PROPERTY$$module$DefaultDOMPropertyConfig}, DOMAttributeNames:{className:"class", htmlFor:"for", strokeLinecap:"stroke-linecap", strokeWidth:"stroke-width", stopColor:"stop-color", stopOpacity:"stop-opacity"}, DOMPropertyNames:{autoCapitalize:"autocapitalize", autoComplete:"autocomplete", autoFocus:"autofocus", autoPlay:"autoplay", encType:"enctype", 
radioGroup:"radiogroup", spellCheck:"spellcheck"}, DOMMutationMethods:{className:function(node, value) {
  node.className = value || ""
}}};
module$DefaultDOMPropertyConfig.module$exports = DefaultDOMPropertyConfig$$module$DefaultDOMPropertyConfig;
if(module$DefaultDOMPropertyConfig.module$exports) {
  module$DefaultDOMPropertyConfig = module$DefaultDOMPropertyConfig.module$exports
}
goog.provide("module$joinClasses");
var module$joinClasses = {};
function joinClasses$$module$joinClasses(className) {
  if(!className) {
    className = ""
  }
  var nextClass;
  var argLength = arguments.length;
  if(argLength > 1) {
    for(var ii = 1;ii < argLength;ii++) {
      nextClass = arguments[ii];
      nextClass && (className += " " + nextClass)
    }
  }
  return className
}
module$joinClasses.module$exports = joinClasses$$module$joinClasses;
if(module$joinClasses.module$exports) {
  module$joinClasses = module$joinClasses.module$exports
}
goog.provide("module$keyOf");
var module$keyOf = {};
var keyOf$$module$keyOf = function(oneKeyObj) {
  var key;
  for(key in oneKeyObj) {
    if(!oneKeyObj.hasOwnProperty(key)) {
      continue
    }
    return key
  }
  return null
};
module$keyOf.module$exports = keyOf$$module$keyOf;
if(module$keyOf.module$exports) {
  module$keyOf = module$keyOf.module$exports
}
goog.provide("module$DefaultEventPluginOrder");
var module$DefaultEventPluginOrder = {};
goog.require("module$keyOf");
var keyOf$$module$DefaultEventPluginOrder = module$keyOf;
var DefaultEventPluginOrder$$module$DefaultEventPluginOrder = [keyOf$$module$DefaultEventPluginOrder({ResponderEventPlugin:null}), keyOf$$module$DefaultEventPluginOrder({SimpleEventPlugin:null}), keyOf$$module$DefaultEventPluginOrder({TapEventPlugin:null}), keyOf$$module$DefaultEventPluginOrder({EnterLeaveEventPlugin:null}), keyOf$$module$DefaultEventPluginOrder({ChangeEventPlugin:null}), keyOf$$module$DefaultEventPluginOrder({CompositionEventPlugin:null}), keyOf$$module$DefaultEventPluginOrder({AnalyticsEventPlugin:null}), 
keyOf$$module$DefaultEventPluginOrder({MobileSafariClickEventPlugin:null})];
module$DefaultEventPluginOrder.module$exports = DefaultEventPluginOrder$$module$DefaultEventPluginOrder;
if(module$DefaultEventPluginOrder.module$exports) {
  module$DefaultEventPluginOrder = module$DefaultEventPluginOrder.module$exports
}
goog.provide("module$EventListener");
var module$EventListener = {};
var EventListener$$module$EventListener = {listen:function(el, handlerBaseName, cb) {
  if(el.addEventListener) {
    el.addEventListener(handlerBaseName, cb, false)
  }else {
    if(el.attachEvent) {
      el.attachEvent("on" + handlerBaseName, cb)
    }
  }
}, capture:function(el, handlerBaseName, cb) {
  if(!el.addEventListener) {
    return
  }else {
    el.addEventListener(handlerBaseName, cb, true)
  }
}};
module$EventListener.module$exports = EventListener$$module$EventListener;
if(module$EventListener.module$exports) {
  module$EventListener = module$EventListener.module$exports
}
goog.provide("module$isEventSupported");
var module$isEventSupported = {};
goog.require("module$ExecutionEnvironment");
var ExecutionEnvironment$$module$isEventSupported = module$ExecutionEnvironment;
var testNode$$module$isEventSupported, useHasFeature$$module$isEventSupported;
if(ExecutionEnvironment$$module$isEventSupported.canUseDOM) {
  testNode$$module$isEventSupported = document.createElement("div");
  useHasFeature$$module$isEventSupported = document.implementation && document.implementation.hasFeature && document.implementation.hasFeature("", "") !== true
}
function isEventSupported$$module$isEventSupported(eventNameSuffix, capture) {
  if(!testNode$$module$isEventSupported || capture && !testNode$$module$isEventSupported.addEventListener) {
    return false
  }
  var element = document.createElement("div");
  var eventName = "on" + eventNameSuffix;
  var isSupported = eventName in element;
  if(!isSupported) {
    element.setAttribute(eventName, "return;");
    isSupported = typeof element[eventName] === "function";
    if(typeof element[eventName] !== "undefined") {
      element[eventName] = undefined
    }
    element.removeAttribute(eventName)
  }
  if(!isSupported && useHasFeature$$module$isEventSupported && eventNameSuffix === "wheel") {
    isSupported = document.implementation.hasFeature("Events.wheel", "3.0")
  }
  element = null;
  return isSupported
}
module$isEventSupported.module$exports = isEventSupported$$module$isEventSupported;
if(module$isEventSupported.module$exports) {
  module$isEventSupported = module$isEventSupported.module$exports
}
goog.provide("module$ge");
var module$ge = {};
function ge$$module$ge(arg, root, tag) {
  return typeof arg != "string" ? arg : !root ? document.getElementById(arg) : _geFromSubtree$$module$ge(arg, root, tag)
}
function _geFromSubtree$$module$ge(id, root, tag) {
  var elem, children, ii;
  if(_getNodeID$$module$ge(root) == id) {
    return root
  }else {
    if(root.getElementsByTagName) {
      children = root.getElementsByTagName(tag || "*");
      for(ii = 0;ii < children.length;ii++) {
        if(_getNodeID$$module$ge(children[ii]) == id) {
          return children[ii]
        }
      }
    }else {
      children = root.childNodes;
      for(ii = 0;ii < children.length;ii++) {
        elem = _geFromSubtree$$module$ge(id, children[ii]);
        if(elem) {
          return elem
        }
      }
    }
  }
  return null
}
function _getNodeID$$module$ge(node) {
  var id = node.getAttributeNode && node.getAttributeNode("id");
  return id ? id.value : null
}
module$ge.module$exports = ge$$module$ge;
if(module$ge.module$exports) {
  module$ge = module$ge.module$exports
}
goog.provide("module$ex");
var module$ex = {};
var ex$$module$ex = function(errorMessage) {
  var args = Array.prototype.slice.call(arguments).map(function(arg) {
    return String(arg)
  });
  var expectedLength = errorMessage.split("%s").length - 1;
  if(expectedLength !== args.length - 1) {
    return ex$$module$ex("ex args number mismatch: %s", JSON.stringify(args))
  }
  return ex$$module$ex._prefix + JSON.stringify(args) + ex$$module$ex._suffix
};
ex$$module$ex._prefix = "\x3c![EX[";
ex$$module$ex._suffix = "]]\x3e";
module$ex.module$exports = ex$$module$ex;
if(module$ex.module$exports) {
  module$ex = module$ex.module$exports
}
goog.provide("module$$");
var module$$ = {};
goog.require("module$ex");
goog.require("module$ge");
var ge$$module$$ = module$ge;
var ex$$module$$ = module$ex;
function $$$module$$(id) {
  var element = ge$$module$$(id);
  if(!element) {
    throw new Error(ex$$module$$('Tried to get element with id of "%s" but it is not present on the page.', id));
  }
  return element
}
module$$.module$exports = $$$module$$;
if(module$$.module$exports) {
  module$$ = module$$.module$exports
}
goog.provide("module$CallbackRegistry");
var module$CallbackRegistry = {};
var listenerBank$$module$CallbackRegistry = {};
var CallbackRegistry$$module$CallbackRegistry = {putListener:function(id, registrationName, listener) {
  var bankForRegistrationName = listenerBank$$module$CallbackRegistry[registrationName] || (listenerBank$$module$CallbackRegistry[registrationName] = {});
  bankForRegistrationName[id] = listener
}, getListener:function(id, registrationName) {
  var bankForRegistrationName = listenerBank$$module$CallbackRegistry[registrationName];
  return bankForRegistrationName && bankForRegistrationName[id]
}, deleteListener:function(id, registrationName) {
  var bankForRegistrationName = listenerBank$$module$CallbackRegistry[registrationName];
  if(bankForRegistrationName) {
    delete bankForRegistrationName[id]
  }
}, deleteAllListeners:function(id) {
  for(var registrationName in listenerBank$$module$CallbackRegistry) {
    delete listenerBank$$module$CallbackRegistry[registrationName][id]
  }
}, __purge:function() {
  listenerBank$$module$CallbackRegistry = {}
}};
module$CallbackRegistry.module$exports = CallbackRegistry$$module$CallbackRegistry;
if(module$CallbackRegistry.module$exports) {
  module$CallbackRegistry = module$CallbackRegistry.module$exports
}
goog.provide("module$forEachAccumulated");
var module$forEachAccumulated = {};
var forEachAccumulated$$module$forEachAccumulated = function(arr, cb, scope) {
  if(Array.isArray(arr)) {
    arr.forEach(cb, scope)
  }else {
    if(arr) {
      cb.call(scope, arr)
    }
  }
};
module$forEachAccumulated.module$exports = forEachAccumulated$$module$forEachAccumulated;
if(module$forEachAccumulated.module$exports) {
  module$forEachAccumulated = module$forEachAccumulated.module$exports
}
goog.provide("module$escapeTextForBrowser");
var module$escapeTextForBrowser = {};
goog.require("module$invariant");
var invariant$$module$escapeTextForBrowser = module$invariant;
var ESCAPE_LOOKUP$$module$escapeTextForBrowser = {"\x26":"\x26amp;", "\x3e":"\x26gt;", "\x3c":"\x26lt;", '"':"\x26quot;", "'":"\x26#x27;", "/":"\x26#x2f;"};
function escaper$$module$escapeTextForBrowser(match) {
  return ESCAPE_LOOKUP$$module$escapeTextForBrowser[match]
}
function escapeTextForBrowser$$module$escapeTextForBrowser(text) {
  var type = typeof text;
  invariant$$module$escapeTextForBrowser(type !== "object");
  if(text === "") {
    return""
  }else {
    if(type === "string") {
      return text.replace(/[&><"'\/]/g, escaper$$module$escapeTextForBrowser)
    }else {
      return("" + text).replace(/[&><"'\/]/g, escaper$$module$escapeTextForBrowser)
    }
  }
}
module$escapeTextForBrowser.module$exports = escapeTextForBrowser$$module$escapeTextForBrowser;
if(module$escapeTextForBrowser.module$exports) {
  module$escapeTextForBrowser = module$escapeTextForBrowser.module$exports
}
goog.provide("module$mergeHelpers");
var module$mergeHelpers = {};
goog.require("module$keyMirror");
goog.require("module$invariant");
var invariant$$module$mergeHelpers = module$invariant;
var keyMirror$$module$mergeHelpers = module$keyMirror;
var MAX_MERGE_DEPTH$$module$mergeHelpers = 36;
var isTerminal$$module$mergeHelpers = function(o) {
  return typeof o !== "object" || o === null
};
var mergeHelpers$$module$mergeHelpers = {MAX_MERGE_DEPTH:MAX_MERGE_DEPTH$$module$mergeHelpers, isTerminal:isTerminal$$module$mergeHelpers, normalizeMergeArg:function(arg) {
  return arg === undefined || arg === null ? {} : arg
}, checkMergeArrayArgs:function(one, two) {
  invariant$$module$mergeHelpers(Array.isArray(one) && Array.isArray(two))
}, checkMergeObjectArgs:function(one, two) {
  mergeHelpers$$module$mergeHelpers.checkMergeObjectArg(one);
  mergeHelpers$$module$mergeHelpers.checkMergeObjectArg(two)
}, checkMergeObjectArg:function(arg) {
  invariant$$module$mergeHelpers(!isTerminal$$module$mergeHelpers(arg) && !Array.isArray(arg))
}, checkMergeLevel:function(level) {
  invariant$$module$mergeHelpers(level < MAX_MERGE_DEPTH$$module$mergeHelpers)
}, checkArrayStrategy:function(strategy) {
  invariant$$module$mergeHelpers(strategy === undefined || strategy in mergeHelpers$$module$mergeHelpers.ArrayStrategies)
}, ArrayStrategies:keyMirror$$module$mergeHelpers({Clobber:true, IndexByIndex:true})};
module$mergeHelpers.module$exports = mergeHelpers$$module$mergeHelpers;
if(module$mergeHelpers.module$exports) {
  module$mergeHelpers = module$mergeHelpers.module$exports
}
goog.provide("module$mergeInto");
var module$mergeInto = {};
goog.require("module$mergeHelpers");
var mergeHelpers$$module$mergeInto = module$mergeHelpers;
var checkMergeObjectArg$$module$mergeInto = mergeHelpers$$module$mergeInto.checkMergeObjectArg;
function mergeInto$$module$mergeInto(one, two) {
  checkMergeObjectArg$$module$mergeInto(one);
  if(two != null) {
    checkMergeObjectArg$$module$mergeInto(two);
    for(var key in two) {
      if(!two.hasOwnProperty(key)) {
        continue
      }
      one[key] = two[key]
    }
  }
}
module$mergeInto.module$exports = mergeInto$$module$mergeInto;
if(module$mergeInto.module$exports) {
  module$mergeInto = module$mergeInto.module$exports
}
goog.provide("module$merge");
var module$merge = {};
goog.require("module$mergeInto");
var mergeInto$$module$merge = module$mergeInto;
var merge$$module$merge = function(one, two) {
  var result = {};
  mergeInto$$module$merge(result, one);
  mergeInto$$module$merge(result, two);
  return result
};
module$merge.module$exports = merge$$module$merge;
if(module$merge.module$exports) {
  module$merge = module$merge.module$exports
}
goog.provide("module$EventConstants");
var module$EventConstants = {};
goog.require("module$keyMirror");
var keyMirror$$module$EventConstants = module$keyMirror;
var PropagationPhases$$module$EventConstants = keyMirror$$module$EventConstants({bubbled:null, captured:null});
var topLevelTypes$$module$EventConstants = keyMirror$$module$EventConstants({topBlur:null, topChange:null, topClick:null, topCompositionEnd:null, topCompositionStart:null, topCompositionUpdate:null, topCopy:null, topCut:null, topDOMCharacterDataModified:null, topDoubleClick:null, topDrag:null, topDragEnd:null, topDragEnter:null, topDragExit:null, topDragLeave:null, topDragOver:null, topDragStart:null, topDrop:null, topFocus:null, topInput:null, topKeyDown:null, topKeyPress:null, topKeyUp:null, topMouseDown:null, 
topMouseMove:null, topMouseOut:null, topMouseOver:null, topMouseUp:null, topPaste:null, topScroll:null, topSelectionChange:null, topSubmit:null, topTouchCancel:null, topTouchEnd:null, topTouchMove:null, topTouchStart:null, topWheel:null});
var EventConstants$$module$EventConstants = {topLevelTypes:topLevelTypes$$module$EventConstants, PropagationPhases:PropagationPhases$$module$EventConstants};
module$EventConstants.module$exports = EventConstants$$module$EventConstants;
if(module$EventConstants.module$exports) {
  module$EventConstants = module$EventConstants.module$exports
}
goog.provide("module$ReactOnDOMReady");
var module$ReactOnDOMReady = {};
goog.require("module$mixInto");
goog.require("module$PooledClass");
var PooledClass$$module$ReactOnDOMReady = module$PooledClass;
var mixInto$$module$ReactOnDOMReady = module$mixInto;
function ReactOnDOMReady$$module$ReactOnDOMReady(initialCollection) {
  this._queue = initialCollection || null
}
mixInto$$module$ReactOnDOMReady(ReactOnDOMReady$$module$ReactOnDOMReady, {enqueue:function(component, callback) {
  this._queue = this._queue || [];
  this._queue.push({component:component, callback:callback})
}, notifyAll:function() {
  var queue = this._queue;
  if(queue) {
    this._queue = null;
    for(var i = 0, l = queue.length;i < l;i++) {
      var component = queue[i].component;
      var callback = queue[i].callback;
      callback.call(component, component.getDOMNode())
    }
    queue.length = 0
  }
}, reset:function() {
  this._queue = null
}, destructor:function() {
  this.reset()
}});
PooledClass$$module$ReactOnDOMReady.addPoolingTo(ReactOnDOMReady$$module$ReactOnDOMReady);
module$ReactOnDOMReady.module$exports = ReactOnDOMReady$$module$ReactOnDOMReady;
if(module$ReactOnDOMReady.module$exports) {
  module$ReactOnDOMReady = module$ReactOnDOMReady.module$exports
}
goog.provide("module$Transaction");
var module$Transaction = {};
goog.require("module$invariant");
var invariant$$module$Transaction = module$invariant;
var Mixin$$module$Transaction = {reinitializeTransaction:function() {
  this.transactionWrappers = this.getTransactionWrappers();
  if(!this.wrapperInitData) {
    this.wrapperInitData = []
  }else {
    this.wrapperInitData.length = 0
  }
  if(!this.timingMetrics) {
    this.timingMetrics = {}
  }
  this.timingMetrics.methodInvocationTime = 0;
  if(!this.timingMetrics.wrapperInitTimes) {
    this.timingMetrics.wrapperInitTimes = []
  }else {
    this.timingMetrics.wrapperInitTimes.length = 0
  }
  if(!this.timingMetrics.wrapperCloseTimes) {
    this.timingMetrics.wrapperCloseTimes = []
  }else {
    this.timingMetrics.wrapperCloseTimes.length = 0
  }
  this._isInTransaction = false
}, _isInTransaction:false, getTransactionWrappers:null, isInTransaction:function() {
  return!!this._isInTransaction
}, perform:function(method, scope, a, b, c, d, e, f) {
  invariant$$module$Transaction(!this.isInTransaction());
  var memberStart = Date.now();
  var errorToThrow = null;
  var ret;
  try {
    this.initializeAll();
    ret = method.call(scope, a, b, c, d, e, f)
  }catch(error) {
    errorToThrow = error
  }finally {
    var memberEnd = Date.now();
    this.methodInvocationTime += memberEnd - memberStart;
    try {
      this.closeAll()
    }catch(closeError) {
      errorToThrow = errorToThrow || closeError
    }
  }
  if(errorToThrow) {
    throw errorToThrow;
  }
  return ret
}, initializeAll:function() {
  this._isInTransaction = true;
  var transactionWrappers = this.transactionWrappers;
  var wrapperInitTimes = this.timingMetrics.wrapperInitTimes;
  var errorToThrow = null;
  for(var i = 0;i < transactionWrappers.length;i++) {
    var initStart = Date.now();
    var wrapper = transactionWrappers[i];
    try {
      this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null
    }catch(initError) {
      errorToThrow = errorToThrow || initError;
      this.wrapperInitData[i] = Transaction$$module$Transaction.OBSERVED_ERROR
    }finally {
      var curInitTime = wrapperInitTimes[i];
      var initEnd = Date.now();
      wrapperInitTimes[i] = (curInitTime || 0) + (initEnd - initStart)
    }
  }
  if(errorToThrow) {
    throw errorToThrow;
  }
}, closeAll:function() {
  invariant$$module$Transaction(this.isInTransaction());
  var transactionWrappers = this.transactionWrappers;
  var wrapperCloseTimes = this.timingMetrics.wrapperCloseTimes;
  var errorToThrow = null;
  for(var i = 0;i < transactionWrappers.length;i++) {
    var wrapper = transactionWrappers[i];
    var closeStart = Date.now();
    var initData = this.wrapperInitData[i];
    try {
      if(initData !== Transaction$$module$Transaction.OBSERVED_ERROR) {
        wrapper.close && wrapper.close.call(this, initData)
      }
    }catch(closeError) {
      errorToThrow = errorToThrow || closeError
    }finally {
      var closeEnd = Date.now();
      var curCloseTime = wrapperCloseTimes[i];
      wrapperCloseTimes[i] = (curCloseTime || 0) + (closeEnd - closeStart)
    }
  }
  this.wrapperInitData.length = 0;
  this._isInTransaction = false;
  if(errorToThrow) {
    throw errorToThrow;
  }
}};
var Transaction$$module$Transaction = {Mixin:Mixin$$module$Transaction, OBSERVED_ERROR:{}};
module$Transaction.module$exports = Transaction$$module$Transaction;
if(module$Transaction.module$exports) {
  module$Transaction = module$Transaction.module$exports
}
goog.provide("module$EventPluginRegistry");
var module$EventPluginRegistry = {};
goog.require("module$invariant");
var invariant$$module$EventPluginRegistry = module$invariant;
var EventPluginOrder$$module$EventPluginRegistry = null;
var namesToPlugins$$module$EventPluginRegistry = {};
function recomputePluginOrdering$$module$EventPluginRegistry() {
  if(!EventPluginOrder$$module$EventPluginRegistry) {
    return
  }
  for(var pluginName in namesToPlugins$$module$EventPluginRegistry) {
    var PluginModule = namesToPlugins$$module$EventPluginRegistry[pluginName];
    var pluginIndex = EventPluginOrder$$module$EventPluginRegistry.indexOf(pluginName);
    invariant$$module$EventPluginRegistry(pluginIndex > -1);
    if(EventPluginRegistry$$module$EventPluginRegistry.plugins[pluginIndex]) {
      continue
    }
    invariant$$module$EventPluginRegistry(PluginModule.extractEvents);
    EventPluginRegistry$$module$EventPluginRegistry.plugins[pluginIndex] = PluginModule;
    var publishedEvents = PluginModule.eventTypes;
    for(var eventName in publishedEvents) {
      invariant$$module$EventPluginRegistry(publishEventForPlugin$$module$EventPluginRegistry(publishedEvents[eventName], PluginModule))
    }
  }
}
function publishEventForPlugin$$module$EventPluginRegistry(dispatchConfig, PluginModule) {
  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
  if(phasedRegistrationNames) {
    for(var phaseName in phasedRegistrationNames) {
      if(phasedRegistrationNames.hasOwnProperty(phaseName)) {
        var phasedRegistrationName = phasedRegistrationNames[phaseName];
        publishRegistrationName$$module$EventPluginRegistry(phasedRegistrationName, PluginModule)
      }
    }
    return true
  }else {
    if(dispatchConfig.registrationName) {
      publishRegistrationName$$module$EventPluginRegistry(dispatchConfig.registrationName, PluginModule);
      return true
    }
  }
  return false
}
function publishRegistrationName$$module$EventPluginRegistry(registrationName, PluginModule) {
  invariant$$module$EventPluginRegistry(!EventPluginRegistry$$module$EventPluginRegistry.registrationNames[registrationName]);
  EventPluginRegistry$$module$EventPluginRegistry.registrationNames[registrationName] = PluginModule;
  EventPluginRegistry$$module$EventPluginRegistry.registrationNamesKeys.push(registrationName)
}
var EventPluginRegistry$$module$EventPluginRegistry = {plugins:[], registrationNames:{}, registrationNamesKeys:[], injectEventPluginOrder:function(InjectedEventPluginOrder) {
  invariant$$module$EventPluginRegistry(!EventPluginOrder$$module$EventPluginRegistry);
  EventPluginOrder$$module$EventPluginRegistry = Array.prototype.slice.call(InjectedEventPluginOrder);
  recomputePluginOrdering$$module$EventPluginRegistry()
}, injectEventPluginsByName:function(injectedNamesToPlugins) {
  var isOrderingDirty = false;
  for(var pluginName in injectedNamesToPlugins) {
    if(!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
      continue
    }
    var PluginModule = injectedNamesToPlugins[pluginName];
    if(namesToPlugins$$module$EventPluginRegistry[pluginName] !== PluginModule) {
      invariant$$module$EventPluginRegistry(!namesToPlugins$$module$EventPluginRegistry[pluginName]);
      namesToPlugins$$module$EventPluginRegistry[pluginName] = PluginModule;
      isOrderingDirty = true
    }
  }
  if(isOrderingDirty) {
    recomputePluginOrdering$$module$EventPluginRegistry()
  }
}, getPluginModuleForEvent:function(event) {
  var dispatchConfig = event.dispatchConfig;
  if(dispatchConfig.registrationName) {
    return EventPluginRegistry$$module$EventPluginRegistry.registrationNames[dispatchConfig.registrationName] || null
  }
  for(var phase in dispatchConfig.phasedRegistrationNames) {
    if(!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
      continue
    }
    var PluginModule = EventPluginRegistry$$module$EventPluginRegistry.registrationNames[dispatchConfig.phasedRegistrationNames[phase]];
    if(PluginModule) {
      return PluginModule
    }
  }
  return null
}, _resetEventPlugins:function() {
  EventPluginOrder$$module$EventPluginRegistry = null;
  for(var pluginName in namesToPlugins$$module$EventPluginRegistry) {
    if(namesToPlugins$$module$EventPluginRegistry.hasOwnProperty(pluginName)) {
      delete namesToPlugins$$module$EventPluginRegistry[pluginName]
    }
  }
  EventPluginRegistry$$module$EventPluginRegistry.plugins.length = 0;
  var registrationNames = EventPluginRegistry$$module$EventPluginRegistry.registrationNames;
  for(var registrationName in registrationNames) {
    if(registrationNames.hasOwnProperty(registrationName)) {
      delete registrationNames[registrationName]
    }
  }
  EventPluginRegistry$$module$EventPluginRegistry.registrationNamesKeys.length = 0
}};
module$EventPluginRegistry.module$exports = EventPluginRegistry$$module$EventPluginRegistry;
if(module$EventPluginRegistry.module$exports) {
  module$EventPluginRegistry = module$EventPluginRegistry.module$exports
}
goog.provide("module$EventPluginUtils");
var module$EventPluginUtils = {};
goog.require("module$invariant");
goog.require("module$EventConstants");
var EventConstants$$module$EventPluginUtils = module$EventConstants;
var invariant$$module$EventPluginUtils = module$invariant;
var topLevelTypes$$module$EventPluginUtils = EventConstants$$module$EventPluginUtils.topLevelTypes;
function isEndish$$module$EventPluginUtils(topLevelType) {
  return topLevelType === topLevelTypes$$module$EventPluginUtils.topMouseUp || topLevelType === topLevelTypes$$module$EventPluginUtils.topTouchEnd || topLevelType === topLevelTypes$$module$EventPluginUtils.topTouchCancel
}
function isMoveish$$module$EventPluginUtils(topLevelType) {
  return topLevelType === topLevelTypes$$module$EventPluginUtils.topMouseMove || topLevelType === topLevelTypes$$module$EventPluginUtils.topTouchMove
}
function isStartish$$module$EventPluginUtils(topLevelType) {
  return topLevelType === topLevelTypes$$module$EventPluginUtils.topMouseDown || topLevelType === topLevelTypes$$module$EventPluginUtils.topTouchStart
}
var validateEventDispatches$$module$EventPluginUtils;
function forEachEventDispatch$$module$EventPluginUtils(event, cb) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchIDs = event._dispatchIDs;
  if(Array.isArray(dispatchListeners)) {
    for(var i = 0;i < dispatchListeners.length;i++) {
      if(event.isPropagationStopped()) {
        break
      }
      cb(event, dispatchListeners[i], dispatchIDs[i])
    }
  }else {
    if(dispatchListeners) {
      cb(event, dispatchListeners, dispatchIDs)
    }
  }
}
function executeDispatch$$module$EventPluginUtils(event, listener, domID) {
  listener(event, domID)
}
function executeDispatchesInOrder$$module$EventPluginUtils(event, executeDispatch) {
  forEachEventDispatch$$module$EventPluginUtils(event, executeDispatch);
  event._dispatchListeners = null;
  event._dispatchIDs = null
}
function executeDispatchesInOrderStopAtTrue$$module$EventPluginUtils(event) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchIDs = event._dispatchIDs;
  if(Array.isArray(dispatchListeners)) {
    for(var i = 0;i < dispatchListeners.length;i++) {
      if(event.isPropagationStopped()) {
        break
      }
      if(dispatchListeners[i](event, dispatchIDs[i])) {
        return dispatchIDs[i]
      }
    }
  }else {
    if(dispatchListeners) {
      if(dispatchListeners(event, dispatchIDs)) {
        return dispatchIDs
      }
    }
  }
  return null
}
function executeDirectDispatch$$module$EventPluginUtils(event) {
  var dispatchListener = event._dispatchListeners;
  var dispatchID = event._dispatchIDs;
  invariant$$module$EventPluginUtils(!Array.isArray(dispatchListener));
  var res = dispatchListener ? dispatchListener(event, dispatchID) : null;
  event._dispatchListeners = null;
  event._dispatchIDs = null;
  return res
}
function hasDispatches$$module$EventPluginUtils(event) {
  return!!event._dispatchListeners
}
var EventPluginUtils$$module$EventPluginUtils = {isEndish:isEndish$$module$EventPluginUtils, isMoveish:isMoveish$$module$EventPluginUtils, isStartish:isStartish$$module$EventPluginUtils, executeDispatchesInOrder:executeDispatchesInOrder$$module$EventPluginUtils, executeDispatchesInOrderStopAtTrue:executeDispatchesInOrderStopAtTrue$$module$EventPluginUtils, executeDirectDispatch:executeDirectDispatch$$module$EventPluginUtils, hasDispatches:hasDispatches$$module$EventPluginUtils, executeDispatch:executeDispatch$$module$EventPluginUtils};
module$EventPluginUtils.module$exports = EventPluginUtils$$module$EventPluginUtils;
if(module$EventPluginUtils.module$exports) {
  module$EventPluginUtils = module$EventPluginUtils.module$exports
}
goog.provide("module$accumulate");
var module$accumulate = {};
goog.require("module$invariant");
var invariant$$module$accumulate = module$invariant;
function accumulate$$module$accumulate(current, next) {
  invariant$$module$accumulate(next != null);
  if(current == null) {
    return next
  }else {
    var currentIsArray = Array.isArray(current);
    var nextIsArray = Array.isArray(next);
    if(currentIsArray) {
      return current.concat(next)
    }else {
      if(nextIsArray) {
        return[current].concat(next)
      }else {
        return[current, next]
      }
    }
  }
}
module$accumulate.module$exports = accumulate$$module$accumulate;
if(module$accumulate.module$exports) {
  module$accumulate = module$accumulate.module$exports
}
goog.provide("module$EventPropagators");
var module$EventPropagators = {};
goog.require("module$forEachAccumulated");
goog.require("module$accumulate");
goog.require("module$EventConstants");
goog.require("module$CallbackRegistry");
var CallbackRegistry$$module$EventPropagators = module$CallbackRegistry;
var EventConstants$$module$EventPropagators = module$EventConstants;
var accumulate$$module$EventPropagators = module$accumulate;
var forEachAccumulated$$module$EventPropagators = module$forEachAccumulated;
var getListener$$module$EventPropagators = CallbackRegistry$$module$EventPropagators.getListener;
var PropagationPhases$$module$EventPropagators = EventConstants$$module$EventPropagators.PropagationPhases;
var injection$$module$EventPropagators = {InstanceHandle:null, injectInstanceHandle:function(InjectedInstanceHandle) {
  injection$$module$EventPropagators.InstanceHandle = InjectedInstanceHandle
}, validate:function() {
  var invalid = !injection$$module$EventPropagators.InstanceHandle || !injection$$module$EventPropagators.InstanceHandle.traverseTwoPhase || !injection$$module$EventPropagators.InstanceHandle.traverseEnterLeave;
  if(invalid) {
    throw new Error("InstanceHandle not injected before use!");
  }
}};
function listenerAtPhase$$module$EventPropagators(id, event, propagationPhase) {
  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
  return getListener$$module$EventPropagators(id, registrationName)
}
function accumulateDirectionalDispatches$$module$EventPropagators(domID, upwards, event) {
  var phase = upwards ? PropagationPhases$$module$EventPropagators.bubbled : PropagationPhases$$module$EventPropagators.captured;
  var listener = listenerAtPhase$$module$EventPropagators(domID, event, phase);
  if(listener) {
    event._dispatchListeners = accumulate$$module$EventPropagators(event._dispatchListeners, listener);
    event._dispatchIDs = accumulate$$module$EventPropagators(event._dispatchIDs, domID)
  }
}
function accumulateTwoPhaseDispatchesSingle$$module$EventPropagators(event) {
  if(event && event.dispatchConfig.phasedRegistrationNames) {
    injection$$module$EventPropagators.InstanceHandle.traverseTwoPhase(event.dispatchMarker, accumulateDirectionalDispatches$$module$EventPropagators, event)
  }
}
function accumulateDispatches$$module$EventPropagators(id, ignoredDirection, event) {
  if(event && event.dispatchConfig.registrationName) {
    var registrationName = event.dispatchConfig.registrationName;
    var listener = getListener$$module$EventPropagators(id, registrationName);
    if(listener) {
      event._dispatchListeners = accumulate$$module$EventPropagators(event._dispatchListeners, listener);
      event._dispatchIDs = accumulate$$module$EventPropagators(event._dispatchIDs, id)
    }
  }
}
function accumulateDirectDispatchesSingle$$module$EventPropagators(event) {
  if(event && event.dispatchConfig.registrationName) {
    accumulateDispatches$$module$EventPropagators(event.dispatchMarker, null, event)
  }
}
function accumulateTwoPhaseDispatches$$module$EventPropagators(events) {
  forEachAccumulated$$module$EventPropagators(events, accumulateTwoPhaseDispatchesSingle$$module$EventPropagators)
}
function accumulateEnterLeaveDispatches$$module$EventPropagators(leave, enter, fromID, toID) {
  injection$$module$EventPropagators.InstanceHandle.traverseEnterLeave(fromID, toID, accumulateDispatches$$module$EventPropagators, leave, enter)
}
function accumulateDirectDispatches$$module$EventPropagators(events) {
  forEachAccumulated$$module$EventPropagators(events, accumulateDirectDispatchesSingle$$module$EventPropagators)
}
var EventPropagators$$module$EventPropagators = {accumulateTwoPhaseDispatches:accumulateTwoPhaseDispatches$$module$EventPropagators, accumulateDirectDispatches:accumulateDirectDispatches$$module$EventPropagators, accumulateEnterLeaveDispatches:accumulateEnterLeaveDispatches$$module$EventPropagators, injection:injection$$module$EventPropagators};
module$EventPropagators.module$exports = EventPropagators$$module$EventPropagators;
if(module$EventPropagators.module$exports) {
  module$EventPropagators = module$EventPropagators.module$exports
}
goog.provide("module$EventPluginHub");
var module$EventPluginHub = {};
goog.require("module$invariant");
goog.require("module$forEachAccumulated");
goog.require("module$accumulate");
goog.require("module$ExecutionEnvironment");
goog.require("module$EventPropagators");
goog.require("module$EventPluginUtils");
goog.require("module$EventPluginRegistry");
goog.require("module$CallbackRegistry");
var CallbackRegistry$$module$EventPluginHub = module$CallbackRegistry;
var EventPluginRegistry$$module$EventPluginHub = module$EventPluginRegistry;
var EventPluginUtils$$module$EventPluginHub = module$EventPluginUtils;
var EventPropagators$$module$EventPluginHub = module$EventPropagators;
var ExecutionEnvironment$$module$EventPluginHub = module$ExecutionEnvironment;
var accumulate$$module$EventPluginHub = module$accumulate;
var forEachAccumulated$$module$EventPluginHub = module$forEachAccumulated;
var invariant$$module$EventPluginHub = module$invariant;
var eventQueue$$module$EventPluginHub = null;
var executeDispatchesAndRelease$$module$EventPluginHub = function(event) {
  if(event) {
    var executeDispatch = EventPluginUtils$$module$EventPluginHub.executeDispatch;
    var PluginModule = EventPluginRegistry$$module$EventPluginHub.getPluginModuleForEvent(event);
    if(PluginModule && PluginModule.executeDispatch) {
      executeDispatch = PluginModule.executeDispatch
    }
    EventPluginUtils$$module$EventPluginHub.executeDispatchesInOrder(event, executeDispatch);
    if(!event.isPersistent()) {
      event.constructor.release(event)
    }
  }
};
var EventPluginHub$$module$EventPluginHub = {injection:{injectInstanceHandle:EventPropagators$$module$EventPluginHub.injection.injectInstanceHandle, injectEventPluginOrder:EventPluginRegistry$$module$EventPluginHub.injectEventPluginOrder, injectEventPluginsByName:EventPluginRegistry$$module$EventPluginHub.injectEventPluginsByName}, registrationNames:EventPluginRegistry$$module$EventPluginHub.registrationNames, putListener:CallbackRegistry$$module$EventPluginHub.putListener, getListener:CallbackRegistry$$module$EventPluginHub.getListener, 
deleteListener:CallbackRegistry$$module$EventPluginHub.deleteListener, deleteAllListeners:CallbackRegistry$$module$EventPluginHub.deleteAllListeners, extractEvents:function(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent) {
  var events;
  var plugins = EventPluginRegistry$$module$EventPluginHub.plugins;
  for(var i = 0, l = plugins.length;i < l;i++) {
    var possiblePlugin = plugins[i];
    if(possiblePlugin) {
      var extractedEvents = possiblePlugin.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent);
      if(extractedEvents) {
        events = accumulate$$module$EventPluginHub(events, extractedEvents)
      }
    }
  }
  return events
}, enqueueEvents:function(events) {
  if(events) {
    eventQueue$$module$EventPluginHub = accumulate$$module$EventPluginHub(eventQueue$$module$EventPluginHub, events)
  }
}, processEventQueue:function() {
  var processingEventQueue = eventQueue$$module$EventPluginHub;
  eventQueue$$module$EventPluginHub = null;
  forEachAccumulated$$module$EventPluginHub(processingEventQueue, executeDispatchesAndRelease$$module$EventPluginHub);
  invariant$$module$EventPluginHub(!eventQueue$$module$EventPluginHub)
}};
if(ExecutionEnvironment$$module$EventPluginHub.canUseDOM) {
  window.EventPluginHub = EventPluginHub$$module$EventPluginHub
}
module$EventPluginHub.module$exports = EventPluginHub$$module$EventPluginHub;
if(module$EventPluginHub.module$exports) {
  module$EventPluginHub = module$EventPluginHub.module$exports
}
goog.provide("module$ReactEventEmitterMixin");
var module$ReactEventEmitterMixin = {};
goog.require("module$ReactUpdates");
goog.require("module$EventPluginHub");
var EventPluginHub$$module$ReactEventEmitterMixin = module$EventPluginHub;
var ReactUpdates$$module$ReactEventEmitterMixin = module$ReactUpdates;
function runEventQueueInBatch$$module$ReactEventEmitterMixin(events) {
  EventPluginHub$$module$ReactEventEmitterMixin.enqueueEvents(events);
  EventPluginHub$$module$ReactEventEmitterMixin.processEventQueue()
}
var ReactEventEmitterMixin$$module$ReactEventEmitterMixin = {_isListening:false, ensureListening:function(config) {
  if(!config.contentDocument._reactIsListening) {
    this.listenAtTopLevel(config.touchNotMouse, config.contentDocument);
    config.contentDocument._reactIsListening = true
  }
}, handleTopLevel:function(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent) {
  var events = EventPluginHub$$module$ReactEventEmitterMixin.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent);
  ReactUpdates$$module$ReactEventEmitterMixin.batchedUpdates(runEventQueueInBatch$$module$ReactEventEmitterMixin, events)
}};
module$ReactEventEmitterMixin.module$exports = ReactEventEmitterMixin$$module$ReactEventEmitterMixin;
if(module$ReactEventEmitterMixin.module$exports) {
  module$ReactEventEmitterMixin = module$ReactEventEmitterMixin.module$exports
}
goog.provide("module$ReactEventEmitter");
var module$ReactEventEmitter = {};
goog.require("module$merge");
goog.require("module$isEventSupported");
goog.require("module$invariant");
goog.require("module$ViewportMetrics");
goog.require("module$ReactEventEmitterMixin");
goog.require("module$ExecutionEnvironment");
goog.require("module$EventPluginHub");
goog.require("module$EventListener");
goog.require("module$EventConstants");
var EventConstants$$module$ReactEventEmitter = module$EventConstants;
var EventListener$$module$ReactEventEmitter = module$EventListener;
var EventPluginHub$$module$ReactEventEmitter = module$EventPluginHub;
var ExecutionEnvironment$$module$ReactEventEmitter = module$ExecutionEnvironment;
var ReactEventEmitterMixin$$module$ReactEventEmitter = module$ReactEventEmitterMixin;
var ViewportMetrics$$module$ReactEventEmitter = module$ViewportMetrics;
var invariant$$module$ReactEventEmitter = module$invariant;
var isEventSupported$$module$ReactEventEmitter = module$isEventSupported;
var merge$$module$ReactEventEmitter = module$merge;
function trapBubbledEvent$$module$ReactEventEmitter(topLevelType, handlerBaseName, element) {
  EventListener$$module$ReactEventEmitter.listen(element, handlerBaseName, ReactEventEmitter$$module$ReactEventEmitter.TopLevelCallbackCreator.createTopLevelCallback(topLevelType))
}
function trapCapturedEvent$$module$ReactEventEmitter(topLevelType, handlerBaseName, element) {
  EventListener$$module$ReactEventEmitter.capture(element, handlerBaseName, ReactEventEmitter$$module$ReactEventEmitter.TopLevelCallbackCreator.createTopLevelCallback(topLevelType))
}
function registerScrollValueMonitoring$$module$ReactEventEmitter() {
  var refresh = ViewportMetrics$$module$ReactEventEmitter.refreshScrollValues;
  EventListener$$module$ReactEventEmitter.listen(window, "scroll", refresh);
  EventListener$$module$ReactEventEmitter.listen(window, "resize", refresh)
}
var ReactEventEmitter$$module$ReactEventEmitter = merge$$module$ReactEventEmitter(ReactEventEmitterMixin$$module$ReactEventEmitter, {TopLevelCallbackCreator:null, ensureListening:function(touchNotMouse, contentDocument) {
  invariant$$module$ReactEventEmitter(ExecutionEnvironment$$module$ReactEventEmitter.canUseDOM);
  invariant$$module$ReactEventEmitter(ReactEventEmitter$$module$ReactEventEmitter.TopLevelCallbackCreator);
  ReactEventEmitterMixin$$module$ReactEventEmitter.ensureListening.call(ReactEventEmitter$$module$ReactEventEmitter, {touchNotMouse:touchNotMouse, contentDocument:contentDocument})
}, setEnabled:function(enabled) {
  invariant$$module$ReactEventEmitter(ExecutionEnvironment$$module$ReactEventEmitter.canUseDOM);
  if(ReactEventEmitter$$module$ReactEventEmitter.TopLevelCallbackCreator) {
    ReactEventEmitter$$module$ReactEventEmitter.TopLevelCallbackCreator.setEnabled(enabled)
  }
}, isEnabled:function() {
  return!!(ReactEventEmitter$$module$ReactEventEmitter.TopLevelCallbackCreator && ReactEventEmitter$$module$ReactEventEmitter.TopLevelCallbackCreator.isEnabled())
}, listenAtTopLevel:function(touchNotMouse, contentDocument) {
  invariant$$module$ReactEventEmitter(!contentDocument._isListening);
  var topLevelTypes = EventConstants$$module$ReactEventEmitter.topLevelTypes;
  var mountAt = contentDocument;
  registerScrollValueMonitoring$$module$ReactEventEmitter();
  trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topMouseOver, "mouseover", mountAt);
  trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topMouseDown, "mousedown", mountAt);
  trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topMouseUp, "mouseup", mountAt);
  trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topMouseMove, "mousemove", mountAt);
  trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topMouseOut, "mouseout", mountAt);
  trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topClick, "click", mountAt);
  trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topDoubleClick, "dblclick", mountAt);
  if(touchNotMouse) {
    trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topTouchStart, "touchstart", mountAt);
    trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topTouchEnd, "touchend", mountAt);
    trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topTouchMove, "touchmove", mountAt);
    trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topTouchCancel, "touchcancel", mountAt)
  }
  trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topKeyUp, "keyup", mountAt);
  trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topKeyPress, "keypress", mountAt);
  trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topKeyDown, "keydown", mountAt);
  trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topInput, "input", mountAt);
  trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topChange, "change", mountAt);
  trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topSelectionChange, "selectionchange", mountAt);
  trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topDOMCharacterDataModified, "DOMCharacterDataModified", mountAt);
  trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topCompositionEnd, "compositionend", mountAt);
  trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topCompositionStart, "compositionstart", mountAt);
  trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topCompositionUpdate, "compositionupdate", mountAt);
  if(isEventSupported$$module$ReactEventEmitter("drag")) {
    trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topDrag, "drag", mountAt);
    trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topDragEnd, "dragend", mountAt);
    trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topDragEnter, "dragenter", mountAt);
    trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topDragExit, "dragexit", mountAt);
    trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topDragLeave, "dragleave", mountAt);
    trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topDragOver, "dragover", mountAt);
    trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topDragStart, "dragstart", mountAt);
    trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topDrop, "drop", mountAt)
  }
  if(isEventSupported$$module$ReactEventEmitter("wheel")) {
    trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topWheel, "wheel", mountAt)
  }else {
    if(isEventSupported$$module$ReactEventEmitter("mousewheel")) {
      trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topWheel, "mousewheel", mountAt)
    }else {
      trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topWheel, "DOMMouseScroll", mountAt)
    }
  }
  if(isEventSupported$$module$ReactEventEmitter("scroll", true)) {
    trapCapturedEvent$$module$ReactEventEmitter(topLevelTypes.topScroll, "scroll", mountAt)
  }else {
    trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topScroll, "scroll", window)
  }
  if(isEventSupported$$module$ReactEventEmitter("focus", true)) {
    trapCapturedEvent$$module$ReactEventEmitter(topLevelTypes.topFocus, "focus", mountAt);
    trapCapturedEvent$$module$ReactEventEmitter(topLevelTypes.topBlur, "blur", mountAt)
  }else {
    if(isEventSupported$$module$ReactEventEmitter("focusin")) {
      trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topFocus, "focusin", mountAt);
      trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topBlur, "focusout", mountAt)
    }
  }
  if(isEventSupported$$module$ReactEventEmitter("copy")) {
    trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topCopy, "copy", mountAt);
    trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topCut, "cut", mountAt);
    trapBubbledEvent$$module$ReactEventEmitter(topLevelTypes.topPaste, "paste", mountAt)
  }
}, registrationNames:EventPluginHub$$module$ReactEventEmitter.registrationNames, putListener:EventPluginHub$$module$ReactEventEmitter.putListener, getListener:EventPluginHub$$module$ReactEventEmitter.getListener, deleteListener:EventPluginHub$$module$ReactEventEmitter.deleteListener, deleteAllListeners:EventPluginHub$$module$ReactEventEmitter.deleteAllListeners, trapBubbledEvent:trapBubbledEvent$$module$ReactEventEmitter, trapCapturedEvent:trapCapturedEvent$$module$ReactEventEmitter});
module$ReactEventEmitter.module$exports = ReactEventEmitter$$module$ReactEventEmitter;
if(module$ReactEventEmitter.module$exports) {
  module$ReactEventEmitter = module$ReactEventEmitter.module$exports
}
goog.provide("module$ReactPropTransferer");
var module$ReactPropTransferer = {};
goog.require("module$merge");
goog.require("module$joinClasses");
goog.require("module$emptyFunction");
var emptyFunction$$module$ReactPropTransferer = module$emptyFunction;
var joinClasses$$module$ReactPropTransferer = module$joinClasses;
var merge$$module$ReactPropTransferer = module$merge;
function createTransferStrategy$$module$ReactPropTransferer(mergeStrategy) {
  return function(props, key, value) {
    if(!props.hasOwnProperty(key)) {
      props[key] = value
    }else {
      props[key] = mergeStrategy(props[key], value)
    }
  }
}
var TransferStrategies$$module$ReactPropTransferer = {children:emptyFunction$$module$ReactPropTransferer, className:createTransferStrategy$$module$ReactPropTransferer(joinClasses$$module$ReactPropTransferer), ref:emptyFunction$$module$ReactPropTransferer, style:createTransferStrategy$$module$ReactPropTransferer(merge$$module$ReactPropTransferer)};
var ReactPropTransferer$$module$ReactPropTransferer = {TransferStrategies:TransferStrategies$$module$ReactPropTransferer, Mixin:{transferPropsTo:function(component) {
  var props = {};
  for(var thatKey in component.props) {
    if(component.props.hasOwnProperty(thatKey)) {
      props[thatKey] = component.props[thatKey]
    }
  }
  for(var thisKey in this.props) {
    if(!this.props.hasOwnProperty(thisKey)) {
      continue
    }
    var transferStrategy = TransferStrategies$$module$ReactPropTransferer[thisKey];
    if(transferStrategy) {
      transferStrategy(props, thisKey, this.props[thisKey])
    }else {
      if(!props.hasOwnProperty(thisKey)) {
        props[thisKey] = this.props[thisKey]
      }
    }
  }
  component.props = props;
  return component
}}};
module$ReactPropTransferer.module$exports = ReactPropTransferer$$module$ReactPropTransferer;
if(module$ReactPropTransferer.module$exports) {
  module$ReactPropTransferer = module$ReactPropTransferer.module$exports
}
goog.provide("module$MobileSafariClickEventPlugin");
var module$MobileSafariClickEventPlugin = {};
goog.require("module$emptyFunction");
goog.require("module$EventConstants");
var EventConstants$$module$MobileSafariClickEventPlugin = module$EventConstants;
var emptyFunction$$module$MobileSafariClickEventPlugin = module$emptyFunction;
var topLevelTypes$$module$MobileSafariClickEventPlugin = EventConstants$$module$MobileSafariClickEventPlugin.topLevelTypes;
var MobileSafariClickEventPlugin$$module$MobileSafariClickEventPlugin = {eventTypes:null, extractEvents:function(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent) {
  if(topLevelType === topLevelTypes$$module$MobileSafariClickEventPlugin.topTouchStart) {
    var target = nativeEvent.target;
    if(target && !target.onclick) {
      target.onclick = emptyFunction$$module$MobileSafariClickEventPlugin
    }
  }
}};
module$MobileSafariClickEventPlugin.module$exports = MobileSafariClickEventPlugin$$module$MobileSafariClickEventPlugin;
if(module$MobileSafariClickEventPlugin.module$exports) {
  module$MobileSafariClickEventPlugin = module$MobileSafariClickEventPlugin.module$exports
}
goog.provide("module$ReactDefaultBatchingStrategy");
var module$ReactDefaultBatchingStrategy = {};
goog.require("module$mixInto");
goog.require("module$emptyFunction");
goog.require("module$Transaction");
goog.require("module$ReactUpdates");
var ReactUpdates$$module$ReactDefaultBatchingStrategy = module$ReactUpdates;
var Transaction$$module$ReactDefaultBatchingStrategy = module$Transaction;
var emptyFunction$$module$ReactDefaultBatchingStrategy = module$emptyFunction;
var mixInto$$module$ReactDefaultBatchingStrategy = module$mixInto;
var RESET_BATCHED_UPDATES$$module$ReactDefaultBatchingStrategy = {initialize:emptyFunction$$module$ReactDefaultBatchingStrategy, close:function() {
  ReactDefaultBatchingStrategy$$module$ReactDefaultBatchingStrategy.isBatchingUpdates = false
}};
var FLUSH_BATCHED_UPDATES$$module$ReactDefaultBatchingStrategy = {initialize:emptyFunction$$module$ReactDefaultBatchingStrategy, close:ReactUpdates$$module$ReactDefaultBatchingStrategy.flushBatchedUpdates.bind(ReactUpdates$$module$ReactDefaultBatchingStrategy)};
var TRANSACTION_WRAPPERS$$module$ReactDefaultBatchingStrategy = [FLUSH_BATCHED_UPDATES$$module$ReactDefaultBatchingStrategy, RESET_BATCHED_UPDATES$$module$ReactDefaultBatchingStrategy];
function ReactDefaultBatchingStrategyTransaction$$module$ReactDefaultBatchingStrategy() {
  this.reinitializeTransaction()
}
mixInto$$module$ReactDefaultBatchingStrategy(ReactDefaultBatchingStrategyTransaction$$module$ReactDefaultBatchingStrategy, Transaction$$module$ReactDefaultBatchingStrategy.Mixin);
mixInto$$module$ReactDefaultBatchingStrategy(ReactDefaultBatchingStrategyTransaction$$module$ReactDefaultBatchingStrategy, {getTransactionWrappers:function() {
  return TRANSACTION_WRAPPERS$$module$ReactDefaultBatchingStrategy
}});
var transaction$$module$ReactDefaultBatchingStrategy = new ReactDefaultBatchingStrategyTransaction$$module$ReactDefaultBatchingStrategy;
var ReactDefaultBatchingStrategy$$module$ReactDefaultBatchingStrategy = {isBatchingUpdates:false, batchedUpdates:function(callback, param) {
  var alreadyBatchingUpdates = ReactDefaultBatchingStrategy$$module$ReactDefaultBatchingStrategy.isBatchingUpdates;
  ReactDefaultBatchingStrategy$$module$ReactDefaultBatchingStrategy.isBatchingUpdates = true;
  if(alreadyBatchingUpdates) {
    callback(param)
  }else {
    transaction$$module$ReactDefaultBatchingStrategy.perform(callback, null, param)
  }
}};
module$ReactDefaultBatchingStrategy.module$exports = ReactDefaultBatchingStrategy$$module$ReactDefaultBatchingStrategy;
if(module$ReactDefaultBatchingStrategy.module$exports) {
  module$ReactDefaultBatchingStrategy = module$ReactDefaultBatchingStrategy.module$exports
}
goog.provide("module$SyntheticEvent");
var module$SyntheticEvent = {};
goog.require("module$mergeInto");
goog.require("module$merge");
goog.require("module$getEventTarget");
goog.require("module$emptyFunction");
goog.require("module$PooledClass");
var PooledClass$$module$SyntheticEvent = module$PooledClass;
var emptyFunction$$module$SyntheticEvent = module$emptyFunction;
var getEventTarget$$module$SyntheticEvent = module$getEventTarget;
var merge$$module$SyntheticEvent = module$merge;
var mergeInto$$module$SyntheticEvent = module$mergeInto;
var EventInterface$$module$SyntheticEvent = {type:null, target:getEventTarget$$module$SyntheticEvent, currentTarget:null, eventPhase:null, bubbles:null, cancelable:null, timeStamp:function(event) {
  return event.timeStamp || Date.now()
}, defaultPrevented:null, isTrusted:null};
function SyntheticEvent$$module$SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  this.dispatchConfig = dispatchConfig;
  this.dispatchMarker = dispatchMarker;
  this.nativeEvent = nativeEvent;
  var Interface = this.constructor.Interface;
  for(var propName in Interface) {
    if(!Interface.hasOwnProperty(propName)) {
      continue
    }
    var normalize = Interface[propName];
    if(normalize) {
      this[propName] = normalize(nativeEvent)
    }else {
      this[propName] = nativeEvent[propName]
    }
  }
  if(nativeEvent.defaultPrevented || nativeEvent.returnValue === false) {
    this.isDefaultPrevented = emptyFunction$$module$SyntheticEvent.thatReturnsTrue
  }else {
    this.isDefaultPrevented = emptyFunction$$module$SyntheticEvent.thatReturnsFalse
  }
  this.isPropagationStopped = emptyFunction$$module$SyntheticEvent.thatReturnsFalse
}
mergeInto$$module$SyntheticEvent(SyntheticEvent$$module$SyntheticEvent.prototype, {preventDefault:function() {
  this.defaultPrevented = true;
  var event = this.nativeEvent;
  event.preventDefault ? event.preventDefault() : event.returnValue = false;
  this.isDefaultPrevented = emptyFunction$$module$SyntheticEvent.thatReturnsTrue
}, stopPropagation:function() {
  var event = this.nativeEvent;
  event.stopPropagation ? event.stopPropagation() : event.cancelBubble = true;
  this.isPropagationStopped = emptyFunction$$module$SyntheticEvent.thatReturnsTrue
}, persist:function() {
  this.isPersistent = emptyFunction$$module$SyntheticEvent.thatReturnsTrue
}, isPersistent:emptyFunction$$module$SyntheticEvent.thatReturnsFalse, destructor:function() {
  var Interface = this.constructor.Interface;
  for(var propName in Interface) {
    this[propName] = null
  }
  this.dispatchConfig = null;
  this.dispatchMarker = null;
  this.nativeEvent = null
}});
SyntheticEvent$$module$SyntheticEvent.Interface = EventInterface$$module$SyntheticEvent;
SyntheticEvent$$module$SyntheticEvent.augmentClass = function(Class, Interface) {
  var Super = this;
  var prototype = Object.create(Super.prototype);
  mergeInto$$module$SyntheticEvent(prototype, Class.prototype);
  Class.prototype = prototype;
  Class.prototype.constructor = Class;
  Class.Interface = merge$$module$SyntheticEvent(Super.Interface, Interface);
  Class.augmentClass = Super.augmentClass;
  PooledClass$$module$SyntheticEvent.addPoolingTo(Class, PooledClass$$module$SyntheticEvent.threeArgumentPooler)
};
PooledClass$$module$SyntheticEvent.addPoolingTo(SyntheticEvent$$module$SyntheticEvent, PooledClass$$module$SyntheticEvent.threeArgumentPooler);
module$SyntheticEvent.module$exports = SyntheticEvent$$module$SyntheticEvent;
if(module$SyntheticEvent.module$exports) {
  module$SyntheticEvent = module$SyntheticEvent.module$exports
}
goog.provide("module$ChangeEventPlugin");
var module$ChangeEventPlugin = {};
goog.require("module$keyOf");
goog.require("module$isEventSupported");
goog.require("module$SyntheticEvent");
goog.require("module$ExecutionEnvironment");
goog.require("module$EventPropagators");
goog.require("module$EventPluginHub");
goog.require("module$EventConstants");
var EventConstants$$module$ChangeEventPlugin = module$EventConstants;
var EventPluginHub$$module$ChangeEventPlugin = module$EventPluginHub;
var EventPropagators$$module$ChangeEventPlugin = module$EventPropagators;
var ExecutionEnvironment$$module$ChangeEventPlugin = module$ExecutionEnvironment;
var SyntheticEvent$$module$ChangeEventPlugin = module$SyntheticEvent;
var isEventSupported$$module$ChangeEventPlugin = module$isEventSupported;
var keyOf$$module$ChangeEventPlugin = module$keyOf;
var topLevelTypes$$module$ChangeEventPlugin = EventConstants$$module$ChangeEventPlugin.topLevelTypes;
var eventTypes$$module$ChangeEventPlugin = {change:{phasedRegistrationNames:{bubbled:keyOf$$module$ChangeEventPlugin({onChange:null}), captured:keyOf$$module$ChangeEventPlugin({onChangeCapture:null})}}};
var activeElement$$module$ChangeEventPlugin = null;
var activeElementID$$module$ChangeEventPlugin = null;
var activeElementValue$$module$ChangeEventPlugin = null;
var activeElementValueProp$$module$ChangeEventPlugin = null;
function shouldUseChangeEvent$$module$ChangeEventPlugin(elem) {
  return elem.nodeName === "SELECT" || elem.nodeName === "INPUT" && elem.type === "file"
}
var doesChangeEventBubble$$module$ChangeEventPlugin = false;
if(ExecutionEnvironment$$module$ChangeEventPlugin.canUseDOM) {
  doesChangeEventBubble$$module$ChangeEventPlugin = isEventSupported$$module$ChangeEventPlugin("change") && (!("documentMode" in document) || document.documentMode > 8)
}
function manualDispatchChangeEvent$$module$ChangeEventPlugin(nativeEvent) {
  var event = SyntheticEvent$$module$ChangeEventPlugin.getPooled(eventTypes$$module$ChangeEventPlugin.change, activeElementID$$module$ChangeEventPlugin, nativeEvent);
  EventPropagators$$module$ChangeEventPlugin.accumulateTwoPhaseDispatches(event);
  EventPluginHub$$module$ChangeEventPlugin.enqueueEvents(event);
  EventPluginHub$$module$ChangeEventPlugin.processEventQueue()
}
function startWatchingForChangeEventIE8$$module$ChangeEventPlugin(target, targetID) {
  activeElement$$module$ChangeEventPlugin = target;
  activeElementID$$module$ChangeEventPlugin = targetID;
  activeElement$$module$ChangeEventPlugin.attachEvent("onchange", manualDispatchChangeEvent$$module$ChangeEventPlugin)
}
function stopWatchingForChangeEventIE8$$module$ChangeEventPlugin() {
  if(!activeElement$$module$ChangeEventPlugin) {
    return
  }
  activeElement$$module$ChangeEventPlugin.detachEvent("onchange", manualDispatchChangeEvent$$module$ChangeEventPlugin);
  activeElement$$module$ChangeEventPlugin = null;
  activeElementID$$module$ChangeEventPlugin = null
}
function getTargetIDForChangeEvent$$module$ChangeEventPlugin(topLevelType, topLevelTarget, topLevelTargetID) {
  if(topLevelType === topLevelTypes$$module$ChangeEventPlugin.topChange) {
    return topLevelTargetID
  }
}
function handleEventsForChangeEventIE8$$module$ChangeEventPlugin(topLevelType, topLevelTarget, topLevelTargetID) {
  if(topLevelType === topLevelTypes$$module$ChangeEventPlugin.topFocus) {
    stopWatchingForChangeEventIE8$$module$ChangeEventPlugin();
    startWatchingForChangeEventIE8$$module$ChangeEventPlugin(topLevelTarget, topLevelTargetID)
  }else {
    if(topLevelType === topLevelTypes$$module$ChangeEventPlugin.topBlur) {
      stopWatchingForChangeEventIE8$$module$ChangeEventPlugin()
    }
  }
}
var isInputEventSupported$$module$ChangeEventPlugin = false;
if(ExecutionEnvironment$$module$ChangeEventPlugin.canUseDOM) {
  isInputEventSupported$$module$ChangeEventPlugin = isEventSupported$$module$ChangeEventPlugin("input") && (!("documentMode" in document) || document.documentMode > 9)
}
var supportedInputTypes$$module$ChangeEventPlugin = {"color":true, "date":true, "datetime":true, "datetime-local":true, "email":true, "month":true, "number":true, "password":true, "range":true, "search":true, "tel":true, "text":true, "time":true, "url":true, "week":true};
function shouldUseInputEvent$$module$ChangeEventPlugin(elem) {
  return elem.nodeName === "INPUT" && supportedInputTypes$$module$ChangeEventPlugin[elem.type] || elem.nodeName === "TEXTAREA"
}
var newValueProp$$module$ChangeEventPlugin = {get:function() {
  return activeElementValueProp$$module$ChangeEventPlugin.get.call(this)
}, set:function(val) {
  activeElementValue$$module$ChangeEventPlugin = "" + val;
  activeElementValueProp$$module$ChangeEventPlugin.set.call(this, val)
}};
function startWatchingForValueChange$$module$ChangeEventPlugin(target, targetID) {
  activeElement$$module$ChangeEventPlugin = target;
  activeElementID$$module$ChangeEventPlugin = targetID;
  activeElementValue$$module$ChangeEventPlugin = target.value;
  activeElementValueProp$$module$ChangeEventPlugin = Object.getOwnPropertyDescriptor(target.constructor.prototype, "value");
  Object.defineProperty(activeElement$$module$ChangeEventPlugin, "value", newValueProp$$module$ChangeEventPlugin);
  activeElement$$module$ChangeEventPlugin.attachEvent("onpropertychange", handlePropertyChange$$module$ChangeEventPlugin)
}
function stopWatchingForValueChange$$module$ChangeEventPlugin() {
  if(!activeElement$$module$ChangeEventPlugin) {
    return
  }
  delete activeElement$$module$ChangeEventPlugin.value;
  activeElement$$module$ChangeEventPlugin.detachEvent("onpropertychange", handlePropertyChange$$module$ChangeEventPlugin);
  activeElement$$module$ChangeEventPlugin = null;
  activeElementID$$module$ChangeEventPlugin = null;
  activeElementValue$$module$ChangeEventPlugin = null;
  activeElementValueProp$$module$ChangeEventPlugin = null
}
function handlePropertyChange$$module$ChangeEventPlugin(nativeEvent) {
  if(nativeEvent.propertyName !== "value") {
    return
  }
  var value = nativeEvent.srcElement.value;
  if(value === activeElementValue$$module$ChangeEventPlugin) {
    return
  }
  activeElementValue$$module$ChangeEventPlugin = value;
  manualDispatchChangeEvent$$module$ChangeEventPlugin(nativeEvent)
}
function getTargetIDForInputEvent$$module$ChangeEventPlugin(topLevelType, topLevelTarget, topLevelTargetID) {
  if(topLevelType === topLevelTypes$$module$ChangeEventPlugin.topInput) {
    return topLevelTargetID
  }
}
function handleEventsForInputEventIE$$module$ChangeEventPlugin(topLevelType, topLevelTarget, topLevelTargetID) {
  if(topLevelType === topLevelTypes$$module$ChangeEventPlugin.topFocus) {
    stopWatchingForValueChange$$module$ChangeEventPlugin();
    startWatchingForValueChange$$module$ChangeEventPlugin(topLevelTarget, topLevelTargetID)
  }else {
    if(topLevelType === topLevelTypes$$module$ChangeEventPlugin.topBlur) {
      stopWatchingForValueChange$$module$ChangeEventPlugin()
    }
  }
}
function getTargetIDForInputEventIE$$module$ChangeEventPlugin(topLevelType, topLevelTarget, topLevelTargetID) {
  if(topLevelType === topLevelTypes$$module$ChangeEventPlugin.topSelectionChange || topLevelType === topLevelTypes$$module$ChangeEventPlugin.topKeyUp || topLevelType === topLevelTypes$$module$ChangeEventPlugin.topKeyDown) {
    if(activeElement$$module$ChangeEventPlugin && activeElement$$module$ChangeEventPlugin.value !== activeElementValue$$module$ChangeEventPlugin) {
      activeElementValue$$module$ChangeEventPlugin = activeElement$$module$ChangeEventPlugin.value;
      return activeElementID$$module$ChangeEventPlugin
    }
  }
}
function shouldUseClickEvent$$module$ChangeEventPlugin(elem) {
  return elem.nodeName === "INPUT" && (elem.type === "checkbox" || elem.type === "radio")
}
function getTargetIDForClickEvent$$module$ChangeEventPlugin(topLevelType, topLevelTarget, topLevelTargetID) {
  if(topLevelType === topLevelTypes$$module$ChangeEventPlugin.topClick) {
    return topLevelTargetID
  }
}
var ChangeEventPlugin$$module$ChangeEventPlugin = {eventTypes:eventTypes$$module$ChangeEventPlugin, extractEvents:function(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent) {
  var getTargetIDFunc, handleEventFunc;
  if(shouldUseChangeEvent$$module$ChangeEventPlugin(topLevelTarget)) {
    if(doesChangeEventBubble$$module$ChangeEventPlugin) {
      getTargetIDFunc = getTargetIDForChangeEvent$$module$ChangeEventPlugin
    }else {
      handleEventFunc = handleEventsForChangeEventIE8$$module$ChangeEventPlugin
    }
  }else {
    if(shouldUseInputEvent$$module$ChangeEventPlugin(topLevelTarget)) {
      if(isInputEventSupported$$module$ChangeEventPlugin) {
        getTargetIDFunc = getTargetIDForInputEvent$$module$ChangeEventPlugin
      }else {
        getTargetIDFunc = getTargetIDForInputEventIE$$module$ChangeEventPlugin;
        handleEventFunc = handleEventsForInputEventIE$$module$ChangeEventPlugin
      }
    }else {
      if(shouldUseClickEvent$$module$ChangeEventPlugin(topLevelTarget)) {
        getTargetIDFunc = getTargetIDForClickEvent$$module$ChangeEventPlugin
      }
    }
  }
  if(getTargetIDFunc) {
    var targetID = getTargetIDFunc(topLevelType, topLevelTarget, topLevelTargetID);
    if(targetID) {
      var event = SyntheticEvent$$module$ChangeEventPlugin.getPooled(eventTypes$$module$ChangeEventPlugin.change, targetID, nativeEvent);
      EventPropagators$$module$ChangeEventPlugin.accumulateTwoPhaseDispatches(event);
      return event
    }
  }
  if(handleEventFunc) {
    handleEventFunc(topLevelType, topLevelTarget, topLevelTargetID)
  }
}};
module$ChangeEventPlugin.module$exports = ChangeEventPlugin$$module$ChangeEventPlugin;
if(module$ChangeEventPlugin.module$exports) {
  module$ChangeEventPlugin = module$ChangeEventPlugin.module$exports
}
goog.provide("module$SyntheticCompositionEvent");
var module$SyntheticCompositionEvent = {};
goog.require("module$SyntheticEvent");
var SyntheticEvent$$module$SyntheticCompositionEvent = module$SyntheticEvent;
var CompositionEventInterface$$module$SyntheticCompositionEvent = {data:null};
function SyntheticCompositionEvent$$module$SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticEvent$$module$SyntheticCompositionEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent)
}
SyntheticEvent$$module$SyntheticCompositionEvent.augmentClass(SyntheticCompositionEvent$$module$SyntheticCompositionEvent, CompositionEventInterface$$module$SyntheticCompositionEvent);
module$SyntheticCompositionEvent.module$exports = SyntheticCompositionEvent$$module$SyntheticCompositionEvent;
if(module$SyntheticCompositionEvent.module$exports) {
  module$SyntheticCompositionEvent = module$SyntheticCompositionEvent.module$exports
}
goog.provide("module$SyntheticClipboardEvent");
var module$SyntheticClipboardEvent = {};
goog.require("module$SyntheticEvent");
var SyntheticEvent$$module$SyntheticClipboardEvent = module$SyntheticEvent;
var ClipboardEventInterface$$module$SyntheticClipboardEvent = {clipboardData:null};
function SyntheticClipboardEvent$$module$SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticEvent$$module$SyntheticClipboardEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent)
}
SyntheticEvent$$module$SyntheticClipboardEvent.augmentClass(SyntheticClipboardEvent$$module$SyntheticClipboardEvent, ClipboardEventInterface$$module$SyntheticClipboardEvent);
module$SyntheticClipboardEvent.module$exports = SyntheticClipboardEvent$$module$SyntheticClipboardEvent;
if(module$SyntheticClipboardEvent.module$exports) {
  module$SyntheticClipboardEvent = module$SyntheticClipboardEvent.module$exports
}
goog.provide("module$SyntheticMutationEvent");
var module$SyntheticMutationEvent = {};
goog.require("module$SyntheticEvent");
var SyntheticEvent$$module$SyntheticMutationEvent = module$SyntheticEvent;
var MutationEventInterface$$module$SyntheticMutationEvent = {relatedNode:null, prevValue:null, newValue:null, attrName:null, attrChange:null};
function SyntheticMutationEvent$$module$SyntheticMutationEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticEvent$$module$SyntheticMutationEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent)
}
SyntheticEvent$$module$SyntheticMutationEvent.augmentClass(SyntheticMutationEvent$$module$SyntheticMutationEvent, MutationEventInterface$$module$SyntheticMutationEvent);
module$SyntheticMutationEvent.module$exports = SyntheticMutationEvent$$module$SyntheticMutationEvent;
if(module$SyntheticMutationEvent.module$exports) {
  module$SyntheticMutationEvent = module$SyntheticMutationEvent.module$exports
}
goog.provide("module$SyntheticUIEvent");
var module$SyntheticUIEvent = {};
goog.require("module$SyntheticEvent");
var SyntheticEvent$$module$SyntheticUIEvent = module$SyntheticEvent;
var UIEventInterface$$module$SyntheticUIEvent = {view:null, detail:null};
function SyntheticUIEvent$$module$SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticEvent$$module$SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent)
}
SyntheticEvent$$module$SyntheticUIEvent.augmentClass(SyntheticUIEvent$$module$SyntheticUIEvent, UIEventInterface$$module$SyntheticUIEvent);
module$SyntheticUIEvent.module$exports = SyntheticUIEvent$$module$SyntheticUIEvent;
if(module$SyntheticUIEvent.module$exports) {
  module$SyntheticUIEvent = module$SyntheticUIEvent.module$exports
}
goog.provide("module$SyntheticMouseEvent");
var module$SyntheticMouseEvent = {};
goog.require("module$ViewportMetrics");
goog.require("module$SyntheticUIEvent");
var SyntheticUIEvent$$module$SyntheticMouseEvent = module$SyntheticUIEvent;
var ViewportMetrics$$module$SyntheticMouseEvent = module$ViewportMetrics;
var MouseEventInterface$$module$SyntheticMouseEvent = {screenX:null, screenY:null, clientX:null, clientY:null, ctrlKey:null, shiftKey:null, altKey:null, metaKey:null, button:function(event) {
  var button = event.button;
  if("which" in event) {
    return button
  }
  return button === 2 ? 2 : button === 4 ? 1 : 0
}, buttons:null, relatedTarget:function(event) {
  return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement)
}, pageX:function(event) {
  return"pageX" in event ? event.pageX : event.clientX + ViewportMetrics$$module$SyntheticMouseEvent.currentScrollLeft
}, pageY:function(event) {
  return"pageY" in event ? event.pageY : event.clientY + ViewportMetrics$$module$SyntheticMouseEvent.currentScrollTop
}};
function SyntheticMouseEvent$$module$SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticUIEvent$$module$SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent)
}
SyntheticUIEvent$$module$SyntheticMouseEvent.augmentClass(SyntheticMouseEvent$$module$SyntheticMouseEvent, MouseEventInterface$$module$SyntheticMouseEvent);
module$SyntheticMouseEvent.module$exports = SyntheticMouseEvent$$module$SyntheticMouseEvent;
if(module$SyntheticMouseEvent.module$exports) {
  module$SyntheticMouseEvent = module$SyntheticMouseEvent.module$exports
}
goog.provide("module$SyntheticFocusEvent");
var module$SyntheticFocusEvent = {};
goog.require("module$SyntheticUIEvent");
var SyntheticUIEvent$$module$SyntheticFocusEvent = module$SyntheticUIEvent;
var FocusEventInterface$$module$SyntheticFocusEvent = {relatedTarget:null};
function SyntheticFocusEvent$$module$SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticUIEvent$$module$SyntheticFocusEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent)
}
SyntheticUIEvent$$module$SyntheticFocusEvent.augmentClass(SyntheticFocusEvent$$module$SyntheticFocusEvent, FocusEventInterface$$module$SyntheticFocusEvent);
module$SyntheticFocusEvent.module$exports = SyntheticFocusEvent$$module$SyntheticFocusEvent;
if(module$SyntheticFocusEvent.module$exports) {
  module$SyntheticFocusEvent = module$SyntheticFocusEvent.module$exports
}
goog.provide("module$SyntheticKeyboardEvent");
var module$SyntheticKeyboardEvent = {};
goog.require("module$SyntheticUIEvent");
var SyntheticUIEvent$$module$SyntheticKeyboardEvent = module$SyntheticUIEvent;
var KeyboardEventInterface$$module$SyntheticKeyboardEvent = {"char":null, key:null, location:null, ctrlKey:null, shiftKey:null, altKey:null, metaKey:null, repeat:null, locale:null, charCode:null, keyCode:null, which:null};
function SyntheticKeyboardEvent$$module$SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticUIEvent$$module$SyntheticKeyboardEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent)
}
SyntheticUIEvent$$module$SyntheticKeyboardEvent.augmentClass(SyntheticKeyboardEvent$$module$SyntheticKeyboardEvent, KeyboardEventInterface$$module$SyntheticKeyboardEvent);
module$SyntheticKeyboardEvent.module$exports = SyntheticKeyboardEvent$$module$SyntheticKeyboardEvent;
if(module$SyntheticKeyboardEvent.module$exports) {
  module$SyntheticKeyboardEvent = module$SyntheticKeyboardEvent.module$exports
}
goog.provide("module$SyntheticTouchEvent");
var module$SyntheticTouchEvent = {};
goog.require("module$SyntheticUIEvent");
var SyntheticUIEvent$$module$SyntheticTouchEvent = module$SyntheticUIEvent;
var TouchEventInterface$$module$SyntheticTouchEvent = {touches:null, targetTouches:null, changedTouches:null, altKey:null, metaKey:null, ctrlKey:null, shiftKey:null};
function SyntheticTouchEvent$$module$SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticUIEvent$$module$SyntheticTouchEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent)
}
SyntheticUIEvent$$module$SyntheticTouchEvent.augmentClass(SyntheticTouchEvent$$module$SyntheticTouchEvent, TouchEventInterface$$module$SyntheticTouchEvent);
module$SyntheticTouchEvent.module$exports = SyntheticTouchEvent$$module$SyntheticTouchEvent;
if(module$SyntheticTouchEvent.module$exports) {
  module$SyntheticTouchEvent = module$SyntheticTouchEvent.module$exports
}
goog.provide("module$SyntheticWheelEvent");
var module$SyntheticWheelEvent = {};
goog.require("module$SyntheticMouseEvent");
var SyntheticMouseEvent$$module$SyntheticWheelEvent = module$SyntheticMouseEvent;
var WheelEventInterface$$module$SyntheticWheelEvent = {deltaX:function(event) {
  return"deltaX" in event ? event.deltaX : "wheelDeltaX" in event ? -event.wheelDeltaX : 0
}, deltaY:function(event) {
  return"deltaY" in event ? -event.deltaY : "wheelDeltaY" in event ? event.wheelDeltaY : "wheelDelta" in event ? event.wheelData : 0
}, deltaZ:null, deltaMode:null};
function SyntheticWheelEvent$$module$SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticMouseEvent$$module$SyntheticWheelEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent)
}
SyntheticMouseEvent$$module$SyntheticWheelEvent.augmentClass(SyntheticWheelEvent$$module$SyntheticWheelEvent, WheelEventInterface$$module$SyntheticWheelEvent);
module$SyntheticWheelEvent.module$exports = SyntheticWheelEvent$$module$SyntheticWheelEvent;
if(module$SyntheticWheelEvent.module$exports) {
  module$SyntheticWheelEvent = module$SyntheticWheelEvent.module$exports
}
goog.provide("module$SimpleEventPlugin");
var module$SimpleEventPlugin = {};
goog.require("module$keyOf");
goog.require("module$invariant");
goog.require("module$SyntheticWheelEvent");
goog.require("module$SyntheticUIEvent");
goog.require("module$SyntheticTouchEvent");
goog.require("module$SyntheticMutationEvent");
goog.require("module$SyntheticMouseEvent");
goog.require("module$SyntheticKeyboardEvent");
goog.require("module$SyntheticFocusEvent");
goog.require("module$SyntheticEvent");
goog.require("module$SyntheticClipboardEvent");
goog.require("module$EventPropagators");
goog.require("module$EventConstants");
var EventConstants$$module$SimpleEventPlugin = module$EventConstants;
var EventPropagators$$module$SimpleEventPlugin = module$EventPropagators;
var SyntheticClipboardEvent$$module$SimpleEventPlugin = module$SyntheticClipboardEvent;
var SyntheticEvent$$module$SimpleEventPlugin = module$SyntheticEvent;
var SyntheticFocusEvent$$module$SimpleEventPlugin = module$SyntheticFocusEvent;
var SyntheticKeyboardEvent$$module$SimpleEventPlugin = module$SyntheticKeyboardEvent;
var SyntheticMouseEvent$$module$SimpleEventPlugin = module$SyntheticMouseEvent;
var SyntheticMutationEvent$$module$SimpleEventPlugin = module$SyntheticMutationEvent;
var SyntheticTouchEvent$$module$SimpleEventPlugin = module$SyntheticTouchEvent;
var SyntheticUIEvent$$module$SimpleEventPlugin = module$SyntheticUIEvent;
var SyntheticWheelEvent$$module$SimpleEventPlugin = module$SyntheticWheelEvent;
var invariant$$module$SimpleEventPlugin = module$invariant;
var keyOf$$module$SimpleEventPlugin = module$keyOf;
var topLevelTypes$$module$SimpleEventPlugin = EventConstants$$module$SimpleEventPlugin.topLevelTypes;
var eventTypes$$module$SimpleEventPlugin = {blur:{phasedRegistrationNames:{bubbled:keyOf$$module$SimpleEventPlugin({onBlur:true}), captured:keyOf$$module$SimpleEventPlugin({onBlurCapture:true})}}, click:{phasedRegistrationNames:{bubbled:keyOf$$module$SimpleEventPlugin({onClick:true}), captured:keyOf$$module$SimpleEventPlugin({onClickCapture:true})}}, copy:{phasedRegistrationNames:{bubbled:keyOf$$module$SimpleEventPlugin({onCopy:true}), captured:keyOf$$module$SimpleEventPlugin({onCopyCapture:true})}}, 
cut:{phasedRegistrationNames:{bubbled:keyOf$$module$SimpleEventPlugin({onCut:true}), captured:keyOf$$module$SimpleEventPlugin({onCutCapture:true})}}, doubleClick:{phasedRegistrationNames:{bubbled:keyOf$$module$SimpleEventPlugin({onDoubleClick:true}), captured:keyOf$$module$SimpleEventPlugin({onDoubleClickCapture:true})}}, drag:{phasedRegistrationNames:{bubbled:keyOf$$module$SimpleEventPlugin({onDrag:true}), captured:keyOf$$module$SimpleEventPlugin({onDragCapture:true})}}, dragEnd:{phasedRegistrationNames:{bubbled:keyOf$$module$SimpleEventPlugin({onDragEnd:true}), 
captured:keyOf$$module$SimpleEventPlugin({onDragEndCapture:true})}}, dragEnter:{phasedRegistrationNames:{bubbled:keyOf$$module$SimpleEventPlugin({onDragEnter:true}), captured:keyOf$$module$SimpleEventPlugin({onDragEnterCapture:true})}}, dragExit:{phasedRegistrationNames:{bubbled:keyOf$$module$SimpleEventPlugin({onDragExit:true}), captured:keyOf$$module$SimpleEventPlugin({onDragExitCapture:true})}}, dragLeave:{phasedRegistrationNames:{bubbled:keyOf$$module$SimpleEventPlugin({onDragLeave:true}), captured:keyOf$$module$SimpleEventPlugin({onDragLeaveCapture:true})}}, 
dragOver:{phasedRegistrationNames:{bubbled:keyOf$$module$SimpleEventPlugin({onDragOver:true}), captured:keyOf$$module$SimpleEventPlugin({onDragOverCapture:true})}}, dragStart:{phasedRegistrationNames:{bubbled:keyOf$$module$SimpleEventPlugin({onDragStart:true}), captured:keyOf$$module$SimpleEventPlugin({onDragStartCapture:true})}}, drop:{phasedRegistrationNames:{bubbled:keyOf$$module$SimpleEventPlugin({onDrop:true}), captured:keyOf$$module$SimpleEventPlugin({onDropCapture:true})}}, DOMCharacterDataModified:{phasedRegistrationNames:{bubbled:keyOf$$module$SimpleEventPlugin({onDOMCharacterDataModified:true}), 
captured:keyOf$$module$SimpleEventPlugin({onDOMCharacterDataModifiedCapture:true})}}, focus:{phasedRegistrationNames:{bubbled:keyOf$$module$SimpleEventPlugin({onFocus:true}), captured:keyOf$$module$SimpleEventPlugin({onFocusCapture:true})}}, input:{phasedRegistrationNames:{bubbled:keyOf$$module$SimpleEventPlugin({onInput:true}), captured:keyOf$$module$SimpleEventPlugin({onInputCapture:true})}}, keyDown:{phasedRegistrationNames:{bubbled:keyOf$$module$SimpleEventPlugin({onKeyDown:true}), captured:keyOf$$module$SimpleEventPlugin({onKeyDownCapture:true})}}, 
keyPress:{phasedRegistrationNames:{bubbled:keyOf$$module$SimpleEventPlugin({onKeyPress:true}), captured:keyOf$$module$SimpleEventPlugin({onKeyPressCapture:true})}}, keyUp:{phasedRegistrationNames:{bubbled:keyOf$$module$SimpleEventPlugin({onKeyUp:true}), captured:keyOf$$module$SimpleEventPlugin({onKeyUpCapture:true})}}, mouseDown:{phasedRegistrationNames:{bubbled:keyOf$$module$SimpleEventPlugin({onMouseDown:true}), captured:keyOf$$module$SimpleEventPlugin({onMouseDownCapture:true})}}, mouseMove:{phasedRegistrationNames:{bubbled:keyOf$$module$SimpleEventPlugin({onMouseMove:true}), 
captured:keyOf$$module$SimpleEventPlugin({onMouseMoveCapture:true})}}, mouseUp:{phasedRegistrationNames:{bubbled:keyOf$$module$SimpleEventPlugin({onMouseUp:true}), captured:keyOf$$module$SimpleEventPlugin({onMouseUpCapture:true})}}, paste:{phasedRegistrationNames:{bubbled:keyOf$$module$SimpleEventPlugin({onPaste:true}), captured:keyOf$$module$SimpleEventPlugin({onPasteCapture:true})}}, scroll:{phasedRegistrationNames:{bubbled:keyOf$$module$SimpleEventPlugin({onScroll:true}), captured:keyOf$$module$SimpleEventPlugin({onScrollCapture:true})}}, 
submit:{phasedRegistrationNames:{bubbled:keyOf$$module$SimpleEventPlugin({onSubmit:true}), captured:keyOf$$module$SimpleEventPlugin({onSubmitCapture:true})}}, touchCancel:{phasedRegistrationNames:{bubbled:keyOf$$module$SimpleEventPlugin({onTouchCancel:true}), captured:keyOf$$module$SimpleEventPlugin({onTouchCancelCapture:true})}}, touchEnd:{phasedRegistrationNames:{bubbled:keyOf$$module$SimpleEventPlugin({onTouchEnd:true}), captured:keyOf$$module$SimpleEventPlugin({onTouchEndCapture:true})}}, touchMove:{phasedRegistrationNames:{bubbled:keyOf$$module$SimpleEventPlugin({onTouchMove:true}), 
captured:keyOf$$module$SimpleEventPlugin({onTouchMoveCapture:true})}}, touchStart:{phasedRegistrationNames:{bubbled:keyOf$$module$SimpleEventPlugin({onTouchStart:true}), captured:keyOf$$module$SimpleEventPlugin({onTouchStartCapture:true})}}, wheel:{phasedRegistrationNames:{bubbled:keyOf$$module$SimpleEventPlugin({onWheel:true}), captured:keyOf$$module$SimpleEventPlugin({onWheelCapture:true})}}};
var topLevelEventsToDispatchConfig$$module$SimpleEventPlugin = {topBlur:eventTypes$$module$SimpleEventPlugin.blur, topClick:eventTypes$$module$SimpleEventPlugin.click, topCopy:eventTypes$$module$SimpleEventPlugin.copy, topCut:eventTypes$$module$SimpleEventPlugin.cut, topDoubleClick:eventTypes$$module$SimpleEventPlugin.doubleClick, topDOMCharacterDataModified:eventTypes$$module$SimpleEventPlugin.DOMCharacterDataModified, topDrag:eventTypes$$module$SimpleEventPlugin.drag, topDragEnd:eventTypes$$module$SimpleEventPlugin.dragEnd, 
topDragEnter:eventTypes$$module$SimpleEventPlugin.dragEnter, topDragExit:eventTypes$$module$SimpleEventPlugin.dragExit, topDragLeave:eventTypes$$module$SimpleEventPlugin.dragLeave, topDragOver:eventTypes$$module$SimpleEventPlugin.dragOver, topDragStart:eventTypes$$module$SimpleEventPlugin.dragStart, topDrop:eventTypes$$module$SimpleEventPlugin.drop, topFocus:eventTypes$$module$SimpleEventPlugin.focus, topInput:eventTypes$$module$SimpleEventPlugin.input, topKeyDown:eventTypes$$module$SimpleEventPlugin.keyDown, 
topKeyPress:eventTypes$$module$SimpleEventPlugin.keyPress, topKeyUp:eventTypes$$module$SimpleEventPlugin.keyUp, topMouseDown:eventTypes$$module$SimpleEventPlugin.mouseDown, topMouseMove:eventTypes$$module$SimpleEventPlugin.mouseMove, topMouseUp:eventTypes$$module$SimpleEventPlugin.mouseUp, topPaste:eventTypes$$module$SimpleEventPlugin.paste, topScroll:eventTypes$$module$SimpleEventPlugin.scroll, topSubmit:eventTypes$$module$SimpleEventPlugin.submit, topTouchCancel:eventTypes$$module$SimpleEventPlugin.touchCancel, 
topTouchEnd:eventTypes$$module$SimpleEventPlugin.touchEnd, topTouchMove:eventTypes$$module$SimpleEventPlugin.touchMove, topTouchStart:eventTypes$$module$SimpleEventPlugin.touchStart, topWheel:eventTypes$$module$SimpleEventPlugin.wheel};
var SimpleEventPlugin$$module$SimpleEventPlugin = {eventTypes:eventTypes$$module$SimpleEventPlugin, executeDispatch:function(event, listener, domID) {
  var returnValue = listener(event, domID);
  if(returnValue === false) {
    event.stopPropagation();
    event.preventDefault()
  }
}, extractEvents:function(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent) {
  var dispatchConfig = topLevelEventsToDispatchConfig$$module$SimpleEventPlugin[topLevelType];
  if(!dispatchConfig) {
    return null
  }
  var EventConstructor;
  switch(topLevelType) {
    case topLevelTypes$$module$SimpleEventPlugin.topInput:
    ;
    case topLevelTypes$$module$SimpleEventPlugin.topSubmit:
      EventConstructor = SyntheticEvent$$module$SimpleEventPlugin;
      break;
    case topLevelTypes$$module$SimpleEventPlugin.topKeyDown:
    ;
    case topLevelTypes$$module$SimpleEventPlugin.topKeyPress:
    ;
    case topLevelTypes$$module$SimpleEventPlugin.topKeyUp:
      EventConstructor = SyntheticKeyboardEvent$$module$SimpleEventPlugin;
      break;
    case topLevelTypes$$module$SimpleEventPlugin.topBlur:
    ;
    case topLevelTypes$$module$SimpleEventPlugin.topFocus:
      EventConstructor = SyntheticFocusEvent$$module$SimpleEventPlugin;
      break;
    case topLevelTypes$$module$SimpleEventPlugin.topClick:
    ;
    case topLevelTypes$$module$SimpleEventPlugin.topDoubleClick:
    ;
    case topLevelTypes$$module$SimpleEventPlugin.topDrag:
    ;
    case topLevelTypes$$module$SimpleEventPlugin.topDragEnd:
    ;
    case topLevelTypes$$module$SimpleEventPlugin.topDragEnter:
    ;
    case topLevelTypes$$module$SimpleEventPlugin.topDragExit:
    ;
    case topLevelTypes$$module$SimpleEventPlugin.topDragLeave:
    ;
    case topLevelTypes$$module$SimpleEventPlugin.topDragOver:
    ;
    case topLevelTypes$$module$SimpleEventPlugin.topDragStart:
    ;
    case topLevelTypes$$module$SimpleEventPlugin.topDrop:
    ;
    case topLevelTypes$$module$SimpleEventPlugin.topMouseDown:
    ;
    case topLevelTypes$$module$SimpleEventPlugin.topMouseMove:
    ;
    case topLevelTypes$$module$SimpleEventPlugin.topMouseUp:
      EventConstructor = SyntheticMouseEvent$$module$SimpleEventPlugin;
      break;
    case topLevelTypes$$module$SimpleEventPlugin.topDOMCharacterDataModified:
      EventConstructor = SyntheticMutationEvent$$module$SimpleEventPlugin;
      break;
    case topLevelTypes$$module$SimpleEventPlugin.topTouchCancel:
    ;
    case topLevelTypes$$module$SimpleEventPlugin.topTouchEnd:
    ;
    case topLevelTypes$$module$SimpleEventPlugin.topTouchMove:
    ;
    case topLevelTypes$$module$SimpleEventPlugin.topTouchStart:
      EventConstructor = SyntheticTouchEvent$$module$SimpleEventPlugin;
      break;
    case topLevelTypes$$module$SimpleEventPlugin.topScroll:
      EventConstructor = SyntheticUIEvent$$module$SimpleEventPlugin;
      break;
    case topLevelTypes$$module$SimpleEventPlugin.topWheel:
      EventConstructor = SyntheticWheelEvent$$module$SimpleEventPlugin;
      break;
    case topLevelTypes$$module$SimpleEventPlugin.topCopy:
    ;
    case topLevelTypes$$module$SimpleEventPlugin.topCut:
    ;
    case topLevelTypes$$module$SimpleEventPlugin.topPaste:
      EventConstructor = SyntheticClipboardEvent$$module$SimpleEventPlugin;
      break
  }
  invariant$$module$SimpleEventPlugin(EventConstructor);
  var event = EventConstructor.getPooled(dispatchConfig, topLevelTargetID, nativeEvent);
  EventPropagators$$module$SimpleEventPlugin.accumulateTwoPhaseDispatches(event);
  return event
}};
module$SimpleEventPlugin.module$exports = SimpleEventPlugin$$module$SimpleEventPlugin;
if(module$SimpleEventPlugin.module$exports) {
  module$SimpleEventPlugin = module$SimpleEventPlugin.module$exports
}
goog.provide("module$CSSProperty");
var module$CSSProperty = {};
var isUnitlessNumber$$module$CSSProperty = {fillOpacity:true, fontWeight:true, lineHeight:true, opacity:true, orphans:true, zIndex:true, zoom:true};
var shorthandPropertyExpansions$$module$CSSProperty = {background:{backgroundImage:true, backgroundPosition:true, backgroundRepeat:true, backgroundColor:true}, border:{borderWidth:true, borderStyle:true, borderColor:true}, borderBottom:{borderBottomWidth:true, borderBottomStyle:true, borderBottomColor:true}, borderLeft:{borderLeftWidth:true, borderLeftStyle:true, borderLeftColor:true}, borderRight:{borderRightWidth:true, borderRightStyle:true, borderRightColor:true}, borderTop:{borderTopWidth:true, 
borderTopStyle:true, borderTopColor:true}, font:{fontStyle:true, fontVariant:true, fontWeight:true, fontSize:true, lineHeight:true, fontFamily:true}};
var CSSProperty$$module$CSSProperty = {isUnitlessNumber:isUnitlessNumber$$module$CSSProperty, shorthandPropertyExpansions:shorthandPropertyExpansions$$module$CSSProperty};
module$CSSProperty.module$exports = CSSProperty$$module$CSSProperty;
if(module$CSSProperty.module$exports) {
  module$CSSProperty = module$CSSProperty.module$exports
}
goog.provide("module$hyphenate");
var module$hyphenate = {};
var _uppercasePattern$$module$hyphenate = /([A-Z])/g;
function hyphenate$$module$hyphenate(string) {
  return string.replace(_uppercasePattern$$module$hyphenate, "-$1").toLowerCase()
}
module$hyphenate.module$exports = hyphenate$$module$hyphenate;
if(module$hyphenate.module$exports) {
  module$hyphenate = module$hyphenate.module$exports
}
goog.provide("module$DOMPropertyOperations");
var module$DOMPropertyOperations = {};
goog.require("module$memoizeStringOnly");
goog.require("module$escapeTextForBrowser");
goog.require("module$DOMProperty");
var DOMProperty$$module$DOMPropertyOperations = module$DOMProperty;
var escapeTextForBrowser$$module$DOMPropertyOperations = module$escapeTextForBrowser;
var memoizeStringOnly$$module$DOMPropertyOperations = module$memoizeStringOnly;
var processAttributeNameAndPrefix$$module$DOMPropertyOperations = memoizeStringOnly$$module$DOMPropertyOperations(function(name) {
  return escapeTextForBrowser$$module$DOMPropertyOperations(name) + '\x3d"'
});
var DOMPropertyOperations$$module$DOMPropertyOperations = {createMarkupForProperty:function(name, value) {
  if(DOMProperty$$module$DOMPropertyOperations.isStandardName[name]) {
    if(value == null || DOMProperty$$module$DOMPropertyOperations.hasBooleanValue[name] && !value) {
      return""
    }
    var attributeName = DOMProperty$$module$DOMPropertyOperations.getAttributeName[name];
    return processAttributeNameAndPrefix$$module$DOMPropertyOperations(attributeName) + escapeTextForBrowser$$module$DOMPropertyOperations(value) + '"'
  }else {
    if(DOMProperty$$module$DOMPropertyOperations.isCustomAttribute(name)) {
      if(value == null) {
        return""
      }
      return processAttributeNameAndPrefix$$module$DOMPropertyOperations(name) + escapeTextForBrowser$$module$DOMPropertyOperations(value) + '"'
    }
  }
  return null
}, setValueForProperty:function(node, name, value) {
  if(DOMProperty$$module$DOMPropertyOperations.isStandardName[name]) {
    var mutationMethod = DOMProperty$$module$DOMPropertyOperations.getMutationMethod[name];
    if(mutationMethod) {
      mutationMethod(node, value)
    }else {
      if(DOMProperty$$module$DOMPropertyOperations.mustUseAttribute[name]) {
        if(DOMProperty$$module$DOMPropertyOperations.hasBooleanValue[name] && !value) {
          node.removeAttribute(DOMProperty$$module$DOMPropertyOperations.getAttributeName[name])
        }else {
          node.setAttribute(DOMProperty$$module$DOMPropertyOperations.getAttributeName[name], value)
        }
      }else {
        var propName = DOMProperty$$module$DOMPropertyOperations.getPropertyName[name];
        if(!DOMProperty$$module$DOMPropertyOperations.hasSideEffects[name] || node[propName] !== value) {
          node[propName] = value
        }
      }
    }
  }else {
    if(DOMProperty$$module$DOMPropertyOperations.isCustomAttribute(name)) {
      node.setAttribute(name, value)
    }
  }
}, deleteValueForProperty:function(node, name) {
  if(DOMProperty$$module$DOMPropertyOperations.isStandardName[name]) {
    var mutationMethod = DOMProperty$$module$DOMPropertyOperations.getMutationMethod[name];
    if(mutationMethod) {
      mutationMethod(node, undefined)
    }else {
      if(DOMProperty$$module$DOMPropertyOperations.mustUseAttribute[name]) {
        node.removeAttribute(DOMProperty$$module$DOMPropertyOperations.getAttributeName[name])
      }else {
        var propName = DOMProperty$$module$DOMPropertyOperations.getPropertyName[name];
        node[propName] = DOMProperty$$module$DOMPropertyOperations.getDefaultValueForProperty(node.nodeName, name)
      }
    }
  }else {
    if(DOMProperty$$module$DOMPropertyOperations.isCustomAttribute(name)) {
      node.removeAttribute(name)
    }
  }
}};
module$DOMPropertyOperations.module$exports = DOMPropertyOperations$$module$DOMPropertyOperations;
if(module$DOMPropertyOperations.module$exports) {
  module$DOMPropertyOperations = module$DOMPropertyOperations.module$exports
}
goog.provide("module$ReactMount");
var module$ReactMount = {};
goog.require("module$nodeContains");
goog.require("module$invariant");
goog.require("module$getReactRootElementInContainer");
goog.require("module$$");
goog.require("module$ReactInstanceHandles");
goog.require("module$ReactEventEmitter");
var ReactEventEmitter$$module$ReactMount = module$ReactEventEmitter;
var ReactInstanceHandles$$module$ReactMount = module$ReactInstanceHandles;
var $$$module$ReactMount = module$$;
var getReactRootElementInContainer$$module$ReactMount = module$getReactRootElementInContainer;
var invariant$$module$ReactMount = module$invariant;
var nodeContains$$module$ReactMount = module$nodeContains;
var SEPARATOR$$module$ReactMount = ReactInstanceHandles$$module$ReactMount.SEPARATOR;
var ATTR_NAME$$module$ReactMount = "data-reactid";
var nodeCache$$module$ReactMount = {};
var ELEMENT_NODE_TYPE$$module$ReactMount = 1;
var DOC_NODE_TYPE$$module$ReactMount = 9;
var instancesByReactRootID$$module$ReactMount = {};
var containersByReactRootID$$module$ReactMount = {};
function getReactRootID$$module$ReactMount(container) {
  var rootElement = getReactRootElementInContainer$$module$ReactMount(container);
  return rootElement && ReactMount$$module$ReactMount.getID(rootElement)
}
function getID$$module$ReactMount(node) {
  var id = internalGetID$$module$ReactMount(node);
  if(id) {
    if(nodeCache$$module$ReactMount.hasOwnProperty(id)) {
      var cached = nodeCache$$module$ReactMount[id];
      if(cached !== node) {
        invariant$$module$ReactMount(!isValid$$module$ReactMount(cached, id));
        nodeCache$$module$ReactMount[id] = node
      }
    }else {
      nodeCache$$module$ReactMount[id] = node
    }
  }
  return id
}
function internalGetID$$module$ReactMount(node) {
  return node && node.getAttribute && node.getAttribute(ATTR_NAME$$module$ReactMount) || ""
}
function setID$$module$ReactMount(node, id) {
  var oldID = internalGetID$$module$ReactMount(node);
  if(oldID !== id) {
    delete nodeCache$$module$ReactMount[oldID]
  }
  node.setAttribute(ATTR_NAME$$module$ReactMount, id);
  nodeCache$$module$ReactMount[id] = node
}
function getNode$$module$ReactMount(id) {
  if(!nodeCache$$module$ReactMount.hasOwnProperty(id) || !isValid$$module$ReactMount(nodeCache$$module$ReactMount[id], id)) {
    nodeCache$$module$ReactMount[id] = ReactMount$$module$ReactMount.findReactNodeByID(id)
  }
  return nodeCache$$module$ReactMount[id]
}
function isValid$$module$ReactMount(node, id) {
  if(node) {
    invariant$$module$ReactMount(internalGetID$$module$ReactMount(node) === id);
    var container = ReactMount$$module$ReactMount.findReactContainerForID(id);
    if(container && nodeContains$$module$ReactMount(container, node)) {
      return true
    }
  }
  return false
}
function purgeID$$module$ReactMount(id) {
  delete nodeCache$$module$ReactMount[id]
}
var ReactMount$$module$ReactMount = {allowFullPageRender:false, totalInstantiationTime:0, totalInjectionTime:0, useTouchEvents:false, _instancesByReactRootID:instancesByReactRootID$$module$ReactMount, scrollMonitor:function(container, renderCallback) {
  renderCallback()
}, prepareEnvironmentForDOM:function(container) {
  invariant$$module$ReactMount(container && (container.nodeType === ELEMENT_NODE_TYPE$$module$ReactMount || container.nodeType === DOC_NODE_TYPE$$module$ReactMount));
  var doc = container.nodeType === ELEMENT_NODE_TYPE$$module$ReactMount ? container.ownerDocument : container;
  ReactEventEmitter$$module$ReactMount.ensureListening(ReactMount$$module$ReactMount.useTouchEvents, doc)
}, _updateRootComponent:function(prevComponent, nextComponent, container, callback) {
  var nextProps = nextComponent.props;
  ReactMount$$module$ReactMount.scrollMonitor(container, function() {
    prevComponent.replaceProps(nextProps, callback)
  });
  return prevComponent
}, _registerComponent:function(nextComponent, container) {
  ReactMount$$module$ReactMount.prepareEnvironmentForDOM(container);
  var reactRootID = ReactMount$$module$ReactMount.registerContainer(container);
  instancesByReactRootID$$module$ReactMount[reactRootID] = nextComponent;
  return reactRootID
}, _renderNewRootComponent:function(nextComponent, container, shouldReuseMarkup) {
  var reactRootID = ReactMount$$module$ReactMount._registerComponent(nextComponent, container);
  nextComponent.mountComponentIntoNode(reactRootID, container, shouldReuseMarkup);
  return nextComponent
}, renderComponent:function(nextComponent, container, callback) {
  var registeredComponent = instancesByReactRootID$$module$ReactMount[getReactRootID$$module$ReactMount(container)];
  if(registeredComponent) {
    if(registeredComponent.constructor === nextComponent.constructor) {
      return ReactMount$$module$ReactMount._updateRootComponent(registeredComponent, nextComponent, container, callback)
    }else {
      ReactMount$$module$ReactMount.unmountComponentAtNode(container)
    }
  }
  var reactRootElement = getReactRootElementInContainer$$module$ReactMount(container);
  var containerHasReactMarkup = reactRootElement && ReactMount$$module$ReactMount.isRenderedByReact(reactRootElement);
  var shouldReuseMarkup = containerHasReactMarkup && !registeredComponent;
  var component = ReactMount$$module$ReactMount._renderNewRootComponent(nextComponent, container, shouldReuseMarkup);
  callback && callback();
  return component
}, constructAndRenderComponent:function(constructor, props, container) {
  return ReactMount$$module$ReactMount.renderComponent(constructor(props), container)
}, constructAndRenderComponentByID:function(constructor, props, id) {
  return ReactMount$$module$ReactMount.constructAndRenderComponent(constructor, props, $$$module$ReactMount(id))
}, registerContainer:function(container) {
  var reactRootID = getReactRootID$$module$ReactMount(container);
  if(reactRootID) {
    reactRootID = ReactInstanceHandles$$module$ReactMount.getReactRootIDFromNodeID(reactRootID)
  }
  if(!reactRootID) {
    reactRootID = ReactInstanceHandles$$module$ReactMount.createReactRootID()
  }
  containersByReactRootID$$module$ReactMount[reactRootID] = container;
  return reactRootID
}, unmountComponentAtNode:function(container) {
  var reactRootID = getReactRootID$$module$ReactMount(container);
  var component = instancesByReactRootID$$module$ReactMount[reactRootID];
  if(!component) {
    return false
  }
  ReactMount$$module$ReactMount.unmountComponentFromNode(component, container);
  delete instancesByReactRootID$$module$ReactMount[reactRootID];
  delete containersByReactRootID$$module$ReactMount[reactRootID];
  return true
}, unmountAndReleaseReactRootNode:function() {
  return ReactMount$$module$ReactMount.unmountComponentAtNode.apply(this, arguments)
}, unmountComponentFromNode:function(instance, container) {
  instance.unmountComponent();
  while(container.lastChild) {
    container.removeChild(container.lastChild)
  }
}, findReactContainerForID:function(id) {
  var reactRootID = ReactInstanceHandles$$module$ReactMount.getReactRootIDFromNodeID(id);
  var container = containersByReactRootID$$module$ReactMount[reactRootID];
  return container
}, findReactNodeByID:function(id) {
  var reactRoot = ReactMount$$module$ReactMount.findReactContainerForID(id);
  return ReactMount$$module$ReactMount.findComponentRoot(reactRoot, id)
}, isRenderedByReact:function(node) {
  if(node.nodeType !== 1) {
    return false
  }
  var id = ReactMount$$module$ReactMount.getID(node);
  return id ? id.charAt(0) === SEPARATOR$$module$ReactMount : false
}, getFirstReactDOM:function(node) {
  var current = node;
  while(current && current.parentNode !== current) {
    if(ReactMount$$module$ReactMount.isRenderedByReact(current)) {
      return current
    }
    current = current.parentNode
  }
  return null
}, findComponentRoot:function(ancestorNode, id) {
  var firstChildren = [ancestorNode.firstChild];
  var childIndex = 0;
  while(childIndex < firstChildren.length) {
    var child = firstChildren[childIndex++];
    while(child) {
      var childID = ReactMount$$module$ReactMount.getID(child);
      if(childID) {
        if(id === childID) {
          return child
        }else {
          if(ReactInstanceHandles$$module$ReactMount.isAncestorIDOf(childID, id)) {
            firstChildren.length = childIndex = 0;
            firstChildren.push(child.firstChild);
            break
          }else {
            firstChildren.push(child.firstChild)
          }
        }
      }else {
        firstChildren.push(child.firstChild)
      }
      child = child.nextSibling
    }
  }
  invariant$$module$ReactMount(false)
}, ATTR_NAME:ATTR_NAME$$module$ReactMount, getID:getID$$module$ReactMount, setID:setID$$module$ReactMount, getNode:getNode$$module$ReactMount, purgeID:purgeID$$module$ReactMount, injection:{}};
module$ReactMount.module$exports = ReactMount$$module$ReactMount;
if(module$ReactMount.module$exports) {
  module$ReactMount = module$ReactMount.module$exports
}
goog.provide("module$ReactEventTopLevelCallback");
var module$ReactEventTopLevelCallback = {};
goog.require("module$getEventTarget");
goog.require("module$ReactMount");
goog.require("module$ReactEventEmitter");
var ReactEventEmitter$$module$ReactEventTopLevelCallback = module$ReactEventEmitter;
var ReactMount$$module$ReactEventTopLevelCallback = module$ReactMount;
var getEventTarget$$module$ReactEventTopLevelCallback = module$getEventTarget;
var _topLevelListenersEnabled$$module$ReactEventTopLevelCallback = true;
var ReactEventTopLevelCallback$$module$ReactEventTopLevelCallback = {setEnabled:function(enabled) {
  _topLevelListenersEnabled$$module$ReactEventTopLevelCallback = !!enabled
}, isEnabled:function() {
  return _topLevelListenersEnabled$$module$ReactEventTopLevelCallback
}, createTopLevelCallback:function(topLevelType) {
  return function(nativeEvent) {
    if(!_topLevelListenersEnabled$$module$ReactEventTopLevelCallback) {
      return
    }
    if(nativeEvent.srcElement && nativeEvent.srcElement !== nativeEvent.target) {
      nativeEvent.target = nativeEvent.srcElement
    }
    var topLevelTarget = ReactMount$$module$ReactEventTopLevelCallback.getFirstReactDOM(getEventTarget$$module$ReactEventTopLevelCallback(nativeEvent)) || window;
    var topLevelTargetID = ReactMount$$module$ReactEventTopLevelCallback.getID(topLevelTarget) || "";
    ReactEventEmitter$$module$ReactEventTopLevelCallback.handleTopLevel(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent)
  }
}};
module$ReactEventTopLevelCallback.module$exports = ReactEventTopLevelCallback$$module$ReactEventTopLevelCallback;
if(module$ReactEventTopLevelCallback.module$exports) {
  module$ReactEventTopLevelCallback = module$ReactEventTopLevelCallback.module$exports
}
goog.provide("module$EnterLeaveEventPlugin");
var module$EnterLeaveEventPlugin = {};
goog.require("module$keyOf");
goog.require("module$ReactMount");
goog.require("module$SyntheticMouseEvent");
goog.require("module$EventPropagators");
goog.require("module$EventConstants");
var EventConstants$$module$EnterLeaveEventPlugin = module$EventConstants;
var EventPropagators$$module$EnterLeaveEventPlugin = module$EventPropagators;
var SyntheticMouseEvent$$module$EnterLeaveEventPlugin = module$SyntheticMouseEvent;
var ReactMount$$module$EnterLeaveEventPlugin = module$ReactMount;
var keyOf$$module$EnterLeaveEventPlugin = module$keyOf;
var topLevelTypes$$module$EnterLeaveEventPlugin = EventConstants$$module$EnterLeaveEventPlugin.topLevelTypes;
var getFirstReactDOM$$module$EnterLeaveEventPlugin = ReactMount$$module$EnterLeaveEventPlugin.getFirstReactDOM;
var eventTypes$$module$EnterLeaveEventPlugin = {mouseEnter:{registrationName:keyOf$$module$EnterLeaveEventPlugin({onMouseEnter:null})}, mouseLeave:{registrationName:keyOf$$module$EnterLeaveEventPlugin({onMouseLeave:null})}};
var extractedEvents$$module$EnterLeaveEventPlugin = [null, null];
var EnterLeaveEventPlugin$$module$EnterLeaveEventPlugin = {eventTypes:eventTypes$$module$EnterLeaveEventPlugin, extractEvents:function(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent) {
  if(topLevelType === topLevelTypes$$module$EnterLeaveEventPlugin.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
    return null
  }
  if(topLevelType !== topLevelTypes$$module$EnterLeaveEventPlugin.topMouseOut && topLevelType !== topLevelTypes$$module$EnterLeaveEventPlugin.topMouseOver) {
    return null
  }
  var from, to;
  if(topLevelType === topLevelTypes$$module$EnterLeaveEventPlugin.topMouseOut) {
    from = topLevelTarget;
    to = getFirstReactDOM$$module$EnterLeaveEventPlugin(nativeEvent.relatedTarget || nativeEvent.toElement) || window
  }else {
    from = window;
    to = topLevelTarget
  }
  if(from === to) {
    return null
  }
  var fromID = from ? ReactMount$$module$EnterLeaveEventPlugin.getID(from) : "";
  var toID = to ? ReactMount$$module$EnterLeaveEventPlugin.getID(to) : "";
  var leave = SyntheticMouseEvent$$module$EnterLeaveEventPlugin.getPooled(eventTypes$$module$EnterLeaveEventPlugin.mouseLeave, fromID, nativeEvent);
  var enter = SyntheticMouseEvent$$module$EnterLeaveEventPlugin.getPooled(eventTypes$$module$EnterLeaveEventPlugin.mouseEnter, toID, nativeEvent);
  EventPropagators$$module$EnterLeaveEventPlugin.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);
  extractedEvents$$module$EnterLeaveEventPlugin[0] = leave;
  extractedEvents$$module$EnterLeaveEventPlugin[1] = enter;
  return extractedEvents$$module$EnterLeaveEventPlugin
}};
module$EnterLeaveEventPlugin.module$exports = EnterLeaveEventPlugin$$module$EnterLeaveEventPlugin;
if(module$EnterLeaveEventPlugin.module$exports) {
  module$EnterLeaveEventPlugin = module$EnterLeaveEventPlugin.module$exports
}
goog.provide("module$dangerousStyleValue");
var module$dangerousStyleValue = {};
goog.require("module$CSSProperty");
var CSSProperty$$module$dangerousStyleValue = module$CSSProperty;
function dangerousStyleValue$$module$dangerousStyleValue(styleName, value) {
  var isEmpty = value == null || typeof value === "boolean" || value === "";
  if(isEmpty) {
    return""
  }
  var isNonNumeric = isNaN(value);
  if(isNonNumeric || value === 0 || CSSProperty$$module$dangerousStyleValue.isUnitlessNumber[styleName]) {
    return"" + value
  }
  return value + "px"
}
module$dangerousStyleValue.module$exports = dangerousStyleValue$$module$dangerousStyleValue;
if(module$dangerousStyleValue.module$exports) {
  module$dangerousStyleValue = module$dangerousStyleValue.module$exports
}
goog.provide("module$CSSPropertyOperations");
var module$CSSPropertyOperations = {};
goog.require("module$memoizeStringOnly");
goog.require("module$hyphenate");
goog.require("module$escapeTextForBrowser");
goog.require("module$dangerousStyleValue");
goog.require("module$CSSProperty");
var CSSProperty$$module$CSSPropertyOperations = module$CSSProperty;
var dangerousStyleValue$$module$CSSPropertyOperations = module$dangerousStyleValue;
var escapeTextForBrowser$$module$CSSPropertyOperations = module$escapeTextForBrowser;
var hyphenate$$module$CSSPropertyOperations = module$hyphenate;
var memoizeStringOnly$$module$CSSPropertyOperations = module$memoizeStringOnly;
var processStyleName$$module$CSSPropertyOperations = memoizeStringOnly$$module$CSSPropertyOperations(function(styleName) {
  return escapeTextForBrowser$$module$CSSPropertyOperations(hyphenate$$module$CSSPropertyOperations(styleName))
});
var CSSPropertyOperations$$module$CSSPropertyOperations = {createMarkupForStyles:function(styles) {
  var serialized = "";
  for(var styleName in styles) {
    if(!styles.hasOwnProperty(styleName)) {
      continue
    }
    var styleValue = styles[styleName];
    if(styleValue != null) {
      serialized += processStyleName$$module$CSSPropertyOperations(styleName) + ":";
      serialized += dangerousStyleValue$$module$CSSPropertyOperations(styleName, styleValue) + ";"
    }
  }
  return serialized || null
}, setValueForStyles:function(node, styles) {
  var style = node.style;
  for(var styleName in styles) {
    if(!styles.hasOwnProperty(styleName)) {
      continue
    }
    var styleValue = dangerousStyleValue$$module$CSSPropertyOperations(styleName, styles[styleName]);
    if(styleValue) {
      style[styleName] = styleValue
    }else {
      var expansion = CSSProperty$$module$CSSPropertyOperations.shorthandPropertyExpansions[styleName];
      if(expansion) {
        for(var individualStyleName in expansion) {
          style[individualStyleName] = ""
        }
      }else {
        style[styleName] = ""
      }
    }
  }
}};
module$CSSPropertyOperations.module$exports = CSSPropertyOperations$$module$CSSPropertyOperations;
if(module$CSSPropertyOperations.module$exports) {
  module$CSSPropertyOperations = module$CSSPropertyOperations.module$exports
}
goog.provide("module$ReactMultiChildUpdateTypes");
var module$ReactMultiChildUpdateTypes = {};
goog.require("module$keyMirror");
var keyMirror$$module$ReactMultiChildUpdateTypes = module$keyMirror;
var ReactMultiChildUpdateTypes$$module$ReactMultiChildUpdateTypes = keyMirror$$module$ReactMultiChildUpdateTypes({INSERT_MARKUP:null, MOVE_EXISTING:null, REMOVE_NODE:null, TEXT_CONTENT:null});
module$ReactMultiChildUpdateTypes.module$exports = ReactMultiChildUpdateTypes$$module$ReactMultiChildUpdateTypes;
if(module$ReactMultiChildUpdateTypes.module$exports) {
  module$ReactMultiChildUpdateTypes = module$ReactMultiChildUpdateTypes.module$exports
}
goog.provide("module$filterAttributes");
var module$filterAttributes = {};
function filterAttributes$$module$filterAttributes(node, func, context) {
  var attributes = node.attributes;
  var numAttributes = attributes.length;
  var accumulator = [];
  for(var i = 0;i < numAttributes;i++) {
    var attr = attributes.item(i);
    if(func.call(context, attr)) {
      accumulator.push(attr)
    }
  }
  return accumulator
}
module$filterAttributes.module$exports = filterAttributes$$module$filterAttributes;
if(module$filterAttributes.module$exports) {
  module$filterAttributes = module$filterAttributes.module$exports
}
goog.provide("module$ReactReconcileTransaction");
var module$ReactReconcileTransaction = {};
goog.require("module$mixInto");
goog.require("module$Transaction");
goog.require("module$ReactOnDOMReady");
goog.require("module$ReactInputSelection");
goog.require("module$ReactEventEmitter");
goog.require("module$PooledClass");
goog.require("module$ExecutionEnvironment");
var ExecutionEnvironment$$module$ReactReconcileTransaction = module$ExecutionEnvironment;
var PooledClass$$module$ReactReconcileTransaction = module$PooledClass;
var ReactEventEmitter$$module$ReactReconcileTransaction = module$ReactEventEmitter;
var ReactInputSelection$$module$ReactReconcileTransaction = module$ReactInputSelection;
var ReactOnDOMReady$$module$ReactReconcileTransaction = module$ReactOnDOMReady;
var Transaction$$module$ReactReconcileTransaction = module$Transaction;
var mixInto$$module$ReactReconcileTransaction = module$mixInto;
var SELECTION_RESTORATION$$module$ReactReconcileTransaction = {initialize:ReactInputSelection$$module$ReactReconcileTransaction.getSelectionInformation, close:ReactInputSelection$$module$ReactReconcileTransaction.restoreSelection};
var EVENT_SUPPRESSION$$module$ReactReconcileTransaction = {initialize:function() {
  var currentlyEnabled = ReactEventEmitter$$module$ReactReconcileTransaction.isEnabled();
  ReactEventEmitter$$module$ReactReconcileTransaction.setEnabled(false);
  return currentlyEnabled
}, close:function(previouslyEnabled) {
  ReactEventEmitter$$module$ReactReconcileTransaction.setEnabled(previouslyEnabled)
}};
var ON_DOM_READY_QUEUEING$$module$ReactReconcileTransaction = {initialize:function() {
  this.reactOnDOMReady.reset()
}, close:function() {
  this.reactOnDOMReady.notifyAll()
}};
var TRANSACTION_WRAPPERS$$module$ReactReconcileTransaction = [SELECTION_RESTORATION$$module$ReactReconcileTransaction, EVENT_SUPPRESSION$$module$ReactReconcileTransaction, ON_DOM_READY_QUEUEING$$module$ReactReconcileTransaction];
function ReactReconcileTransaction$$module$ReactReconcileTransaction() {
  this.reinitializeTransaction();
  this.reactOnDOMReady = ReactOnDOMReady$$module$ReactReconcileTransaction.getPooled(null)
}
var Mixin$$module$ReactReconcileTransaction = {getTransactionWrappers:function() {
  if(ExecutionEnvironment$$module$ReactReconcileTransaction.canUseDOM) {
    return TRANSACTION_WRAPPERS$$module$ReactReconcileTransaction
  }else {
    return[]
  }
}, getReactOnDOMReady:function() {
  return this.reactOnDOMReady
}, destructor:function() {
  ReactOnDOMReady$$module$ReactReconcileTransaction.release(this.reactOnDOMReady);
  this.reactOnDOMReady = null
}};
mixInto$$module$ReactReconcileTransaction(ReactReconcileTransaction$$module$ReactReconcileTransaction, Transaction$$module$ReactReconcileTransaction.Mixin);
mixInto$$module$ReactReconcileTransaction(ReactReconcileTransaction$$module$ReactReconcileTransaction, Mixin$$module$ReactReconcileTransaction);
PooledClass$$module$ReactReconcileTransaction.addPoolingTo(ReactReconcileTransaction$$module$ReactReconcileTransaction);
module$ReactReconcileTransaction.module$exports = ReactReconcileTransaction$$module$ReactReconcileTransaction;
if(module$ReactReconcileTransaction.module$exports) {
  module$ReactReconcileTransaction = module$ReactReconcileTransaction.module$exports
}
goog.provide("module$ReactServerRendering");
var module$ReactServerRendering = {};
goog.require("module$ReactInstanceHandles");
goog.require("module$ReactReconcileTransaction");
goog.require("module$ReactMarkupChecksum");
var ReactMarkupChecksum$$module$ReactServerRendering = module$ReactMarkupChecksum;
var ReactReconcileTransaction$$module$ReactServerRendering = module$ReactReconcileTransaction;
var ReactInstanceHandles$$module$ReactServerRendering = module$ReactInstanceHandles;
function renderComponentToString$$module$ReactServerRendering(component, callback) {
  var id = ReactInstanceHandles$$module$ReactServerRendering.createReactRootID();
  var transaction = ReactReconcileTransaction$$module$ReactServerRendering.getPooled();
  transaction.reinitializeTransaction();
  try {
    transaction.perform(function() {
      var markup = component.mountComponent(id, transaction, 0);
      markup = ReactMarkupChecksum$$module$ReactServerRendering.addChecksumToMarkup(markup);
      callback(markup)
    }, null)
  }finally {
    ReactReconcileTransaction$$module$ReactServerRendering.release(transaction)
  }
}
module$ReactServerRendering.module$exports = {renderComponentToString:renderComponentToString$$module$ReactServerRendering};
if(module$ReactServerRendering.module$exports) {
  module$ReactServerRendering = module$ReactServerRendering.module$exports
}
goog.provide("module$CompositionEventPlugin");
var module$CompositionEventPlugin = {};
goog.require("module$keyOf");
goog.require("module$getTextContentAccessor");
goog.require("module$SyntheticCompositionEvent");
goog.require("module$ReactInputSelection");
goog.require("module$ExecutionEnvironment");
goog.require("module$EventPropagators");
goog.require("module$EventConstants");
var EventConstants$$module$CompositionEventPlugin = module$EventConstants;
var EventPropagators$$module$CompositionEventPlugin = module$EventPropagators;
var ExecutionEnvironment$$module$CompositionEventPlugin = module$ExecutionEnvironment;
var ReactInputSelection$$module$CompositionEventPlugin = module$ReactInputSelection;
var SyntheticCompositionEvent$$module$CompositionEventPlugin = module$SyntheticCompositionEvent;
var getTextContentAccessor$$module$CompositionEventPlugin = module$getTextContentAccessor;
var keyOf$$module$CompositionEventPlugin = module$keyOf;
var END_KEYCODES$$module$CompositionEventPlugin = [9, 13, 27, 32];
var START_KEYCODE$$module$CompositionEventPlugin = 229;
var useCompositionEvent$$module$CompositionEventPlugin = ExecutionEnvironment$$module$CompositionEventPlugin.canUseDOM && "CompositionEvent" in window;
var topLevelTypes$$module$CompositionEventPlugin = EventConstants$$module$CompositionEventPlugin.topLevelTypes;
var currentComposition$$module$CompositionEventPlugin = null;
var eventTypes$$module$CompositionEventPlugin = {compositionEnd:{phasedRegistrationNames:{bubbled:keyOf$$module$CompositionEventPlugin({onCompositionEnd:null}), captured:keyOf$$module$CompositionEventPlugin({onCompositionEndCapture:null})}}, compositionStart:{phasedRegistrationNames:{bubbled:keyOf$$module$CompositionEventPlugin({onCompositionStart:null}), captured:keyOf$$module$CompositionEventPlugin({onCompositionStartCapture:null})}}, compositionUpdate:{phasedRegistrationNames:{bubbled:keyOf$$module$CompositionEventPlugin({onCompositionUpdate:null}), 
captured:keyOf$$module$CompositionEventPlugin({onCompositionUpdateCapture:null})}}};
function getCompositionEventType$$module$CompositionEventPlugin(topLevelType) {
  switch(topLevelType) {
    case topLevelTypes$$module$CompositionEventPlugin.topCompositionStart:
      return eventTypes$$module$CompositionEventPlugin.compositionStart;
    case topLevelTypes$$module$CompositionEventPlugin.topCompositionEnd:
      return eventTypes$$module$CompositionEventPlugin.compositionEnd;
    case topLevelTypes$$module$CompositionEventPlugin.topCompositionUpdate:
      return eventTypes$$module$CompositionEventPlugin.compositionUpdate
  }
}
function isFallbackStart$$module$CompositionEventPlugin(topLevelType, nativeEvent) {
  return topLevelType === topLevelTypes$$module$CompositionEventPlugin.topKeyDown && nativeEvent.keyCode === START_KEYCODE$$module$CompositionEventPlugin
}
function isFallbackEnd$$module$CompositionEventPlugin(topLevelType, nativeEvent) {
  switch(topLevelType) {
    case topLevelTypes$$module$CompositionEventPlugin.topKeyUp:
      return END_KEYCODES$$module$CompositionEventPlugin.indexOf(nativeEvent.keyCode) !== -1;
    case topLevelTypes$$module$CompositionEventPlugin.topKeyDown:
      return nativeEvent.keyCode !== START_KEYCODE$$module$CompositionEventPlugin;
    case topLevelTypes$$module$CompositionEventPlugin.topKeyPress:
    ;
    case topLevelTypes$$module$CompositionEventPlugin.topMouseDown:
    ;
    case topLevelTypes$$module$CompositionEventPlugin.topBlur:
      return true;
    default:
      return false
  }
}
function FallbackCompositionState$$module$CompositionEventPlugin(root) {
  this.root = root;
  this.startSelection = ReactInputSelection$$module$CompositionEventPlugin.getSelection(root);
  this.startValue = this.getText()
}
FallbackCompositionState$$module$CompositionEventPlugin.prototype.getText = function() {
  return this.root.value || this.root[getTextContentAccessor$$module$CompositionEventPlugin()]
};
FallbackCompositionState$$module$CompositionEventPlugin.prototype.getData = function() {
  var endValue = this.getText();
  var prefixLength = this.startSelection.start;
  var suffixLength = this.startValue.length - this.startSelection.end;
  return endValue.substr(prefixLength, endValue.length - suffixLength - prefixLength)
};
var CompositionEventPlugin$$module$CompositionEventPlugin = {eventTypes:eventTypes$$module$CompositionEventPlugin, extractEvents:function(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent) {
  var eventType;
  var data;
  if(useCompositionEvent$$module$CompositionEventPlugin) {
    eventType = getCompositionEventType$$module$CompositionEventPlugin(topLevelType)
  }else {
    if(!currentComposition$$module$CompositionEventPlugin) {
      if(isFallbackStart$$module$CompositionEventPlugin(topLevelType, nativeEvent)) {
        eventType = eventTypes$$module$CompositionEventPlugin.start;
        currentComposition$$module$CompositionEventPlugin = new FallbackCompositionState$$module$CompositionEventPlugin(topLevelTarget)
      }
    }else {
      if(isFallbackEnd$$module$CompositionEventPlugin(topLevelType, nativeEvent)) {
        eventType = eventTypes$$module$CompositionEventPlugin.compositionEnd;
        data = currentComposition$$module$CompositionEventPlugin.getData();
        currentComposition$$module$CompositionEventPlugin = null
      }
    }
  }
  if(eventType) {
    var event = SyntheticCompositionEvent$$module$CompositionEventPlugin.getPooled(eventType, topLevelTargetID, nativeEvent);
    if(data) {
      event.data = data
    }
    EventPropagators$$module$CompositionEventPlugin.accumulateTwoPhaseDispatches(event);
    return event
  }
}};
module$CompositionEventPlugin.module$exports = CompositionEventPlugin$$module$CompositionEventPlugin;
if(module$CompositionEventPlugin.module$exports) {
  module$CompositionEventPlugin = module$CompositionEventPlugin.module$exports
}
goog.provide("module$createArrayFrom");
var module$createArrayFrom = {};
function hasArrayNature$$module$createArrayFrom(obj) {
  return!!obj && (typeof obj == "object" || typeof obj == "function") && "length" in obj && !("setInterval" in obj) && typeof obj.nodeType != "number" && (Array.isArray(obj) || "callee" in obj || "item" in obj)
}
function createArrayFrom$$module$createArrayFrom(obj) {
  if(!hasArrayNature$$module$createArrayFrom(obj)) {
    return[obj]
  }
  if(obj.item) {
    var l = obj.length, ret = new Array(l);
    while(l--) {
      ret[l] = obj[l]
    }
    return ret
  }
  return Array.prototype.slice.call(obj)
}
module$createArrayFrom.module$exports = createArrayFrom$$module$createArrayFrom;
if(module$createArrayFrom.module$exports) {
  module$createArrayFrom = module$createArrayFrom.module$exports
}
goog.provide("module$getMarkupWrap");
var module$getMarkupWrap = {};
goog.require("module$invariant");
goog.require("module$ExecutionEnvironment");
var ExecutionEnvironment$$module$getMarkupWrap = module$ExecutionEnvironment;
var invariant$$module$getMarkupWrap = module$invariant;
var dummyNode$$module$getMarkupWrap = ExecutionEnvironment$$module$getMarkupWrap.canUseDOM ? document.createElement("div") : null;
var shouldWrap$$module$getMarkupWrap = {};
var markupWrap$$module$getMarkupWrap = {"area":[1, "\x3cmap\x3e", "\x3c/map\x3e"], "caption":[1, "\x3ctable\x3e", "\x3c/table\x3e"], "col":[2, "\x3ctable\x3e\x3ctbody\x3e\x3c/tbody\x3e\x3ccolgroup\x3e", "\x3c/colgroup\x3e\x3c/table\x3e"], "colgroup":[1, "\x3ctable\x3e", "\x3c/table\x3e"], "legend":[1, "\x3cfieldset\x3e", "\x3c/fieldset\x3e"], "optgroup":[1, '\x3cselect multiple\x3d"true"\x3e', "\x3c/select\x3e"], "option":[1, '\x3cselect multiple\x3d"true"\x3e', "\x3c/select\x3e"], "param":[1, "\x3cobject\x3e", 
"\x3c/object\x3e"], "tbody":[1, "\x3ctable\x3e", "\x3c/table\x3e"], "td":[3, "\x3ctable\x3e\x3ctbody\x3e\x3ctr\x3e", "\x3c/tr\x3e\x3c/tbody\x3e\x3c/table\x3e"], "tfoot":[1, "\x3ctable\x3e", "\x3c/table\x3e"], "th":[3, "\x3ctable\x3e\x3ctbody\x3e\x3ctr\x3e", "\x3c/tr\x3e\x3c/tbody\x3e\x3c/table\x3e"], "thead":[1, "\x3ctable\x3e", "\x3c/table\x3e"], "tr":[2, "\x3ctable\x3e\x3ctbody\x3e", "\x3c/tbody\x3e\x3c/table\x3e"], "*":[1, "?\x3cdiv\x3e", "\x3c/div\x3e"]};
function getMarkupWrap$$module$getMarkupWrap(nodeName) {
  invariant$$module$getMarkupWrap(!!dummyNode$$module$getMarkupWrap);
  if(!markupWrap$$module$getMarkupWrap.hasOwnProperty(nodeName)) {
    nodeName = "*"
  }
  if(!shouldWrap$$module$getMarkupWrap.hasOwnProperty(nodeName)) {
    if(nodeName === "*") {
      dummyNode$$module$getMarkupWrap.innerHTML = "\x3clink /\x3e"
    }else {
      dummyNode$$module$getMarkupWrap.innerHTML = "\x3c" + nodeName + "\x3e\x3c/" + nodeName + "\x3e"
    }
    shouldWrap$$module$getMarkupWrap[nodeName] = !dummyNode$$module$getMarkupWrap.firstChild
  }
  return shouldWrap$$module$getMarkupWrap[nodeName] ? markupWrap$$module$getMarkupWrap[nodeName] : null
}
module$getMarkupWrap.module$exports = getMarkupWrap$$module$getMarkupWrap;
if(module$getMarkupWrap.module$exports) {
  module$getMarkupWrap = module$getMarkupWrap.module$exports
}
goog.provide("module$createNodesFromMarkup");
var module$createNodesFromMarkup = {};
goog.require("module$invariant");
goog.require("module$getMarkupWrap");
goog.require("module$createArrayFrom");
goog.require("module$ExecutionEnvironment");
var ExecutionEnvironment$$module$createNodesFromMarkup = module$ExecutionEnvironment;
var createArrayFrom$$module$createNodesFromMarkup = module$createArrayFrom;
var getMarkupWrap$$module$createNodesFromMarkup = module$getMarkupWrap;
var invariant$$module$createNodesFromMarkup = module$invariant;
var dummyNode$$module$createNodesFromMarkup = ExecutionEnvironment$$module$createNodesFromMarkup.canUseDOM ? document.createElement("div") : null;
var nodeNamePattern$$module$createNodesFromMarkup = /^\s*<(\w+)/;
function getNodeName$$module$createNodesFromMarkup(markup) {
  var nodeNameMatch = markup.match(nodeNamePattern$$module$createNodesFromMarkup);
  return nodeNameMatch && nodeNameMatch[1].toLowerCase()
}
function createNodesFromMarkup$$module$createNodesFromMarkup(markup, handleScript) {
  var node = dummyNode$$module$createNodesFromMarkup;
  invariant$$module$createNodesFromMarkup(!!dummyNode$$module$createNodesFromMarkup);
  var nodeName = getNodeName$$module$createNodesFromMarkup(markup);
  var wrap = nodeName && getMarkupWrap$$module$createNodesFromMarkup(nodeName);
  if(wrap) {
    node.innerHTML = wrap[1] + markup + wrap[2];
    var wrapDepth = wrap[0];
    while(wrapDepth--) {
      node = node.lastChild
    }
  }else {
    node.innerHTML = markup
  }
  var scripts = node.getElementsByTagName("script");
  if(scripts.length) {
    invariant$$module$createNodesFromMarkup(handleScript);
    createArrayFrom$$module$createNodesFromMarkup(scripts).forEach(handleScript)
  }
  var nodes = createArrayFrom$$module$createNodesFromMarkup(node.childNodes);
  while(node.lastChild) {
    node.removeChild(node.lastChild)
  }
  return nodes
}
module$createNodesFromMarkup.module$exports = createNodesFromMarkup$$module$createNodesFromMarkup;
if(module$createNodesFromMarkup.module$exports) {
  module$createNodesFromMarkup = module$createNodesFromMarkup.module$exports
}
goog.provide("module$mutateHTMLNodeWithMarkup");
var module$mutateHTMLNodeWithMarkup = {};
goog.require("module$invariant");
goog.require("module$filterAttributes");
goog.require("module$createNodesFromMarkup");
var createNodesFromMarkup$$module$mutateHTMLNodeWithMarkup = module$createNodesFromMarkup;
var filterAttributes$$module$mutateHTMLNodeWithMarkup = module$filterAttributes;
var invariant$$module$mutateHTMLNodeWithMarkup = module$invariant;
function mutateHTMLNodeWithMarkup$$module$mutateHTMLNodeWithMarkup(node, markup) {
  invariant$$module$mutateHTMLNodeWithMarkup(node.tagName.toLowerCase() === "html");
  markup = markup.trim();
  invariant$$module$mutateHTMLNodeWithMarkup(markup.toLowerCase().indexOf("\x3chtml") === 0);
  var htmlOpenTagEnd = markup.indexOf("\x3e") + 1;
  var htmlCloseTagStart = markup.lastIndexOf("\x3c");
  var htmlOpenTag = markup.substring(0, htmlOpenTagEnd);
  var innerHTML = markup.substring(htmlOpenTagEnd, htmlCloseTagStart);
  var shouldExtractAttributes = htmlOpenTag.indexOf(" ") > -1;
  var attributeHolder = null;
  if(shouldExtractAttributes) {
    attributeHolder = createNodesFromMarkup$$module$mutateHTMLNodeWithMarkup(htmlOpenTag.replace("html ", "span ") + "\x3c/span\x3e")[0];
    var attributesToSet = filterAttributes$$module$mutateHTMLNodeWithMarkup(attributeHolder, function(attr) {
      return node.getAttributeNS(attr.namespaceURI, attr.name) !== attr.value
    });
    attributesToSet.forEach(function(attr) {
      node.setAttributeNS(attr.namespaceURI, attr.name, attr.value)
    })
  }
  var attributesToRemove = filterAttributes$$module$mutateHTMLNodeWithMarkup(node, function(attr) {
    return!(attributeHolder && attributeHolder.hasAttributeNS(attr.namespaceURI, attr.name))
  });
  attributesToRemove.forEach(function(attr) {
    node.removeAttributeNS(attr.namespaceURI, attr.name)
  });
  node.innerHTML = innerHTML
}
module$mutateHTMLNodeWithMarkup.module$exports = mutateHTMLNodeWithMarkup$$module$mutateHTMLNodeWithMarkup;
if(module$mutateHTMLNodeWithMarkup.module$exports) {
  module$mutateHTMLNodeWithMarkup = module$mutateHTMLNodeWithMarkup.module$exports
}
goog.provide("module$Danger");
var module$Danger = {};
goog.require("module$mutateHTMLNodeWithMarkup");
goog.require("module$invariant");
goog.require("module$getMarkupWrap");
goog.require("module$emptyFunction");
goog.require("module$createNodesFromMarkup");
goog.require("module$ExecutionEnvironment");
var ExecutionEnvironment$$module$Danger = module$ExecutionEnvironment;
var createNodesFromMarkup$$module$Danger = module$createNodesFromMarkup;
var emptyFunction$$module$Danger = module$emptyFunction;
var getMarkupWrap$$module$Danger = module$getMarkupWrap;
var invariant$$module$Danger = module$invariant;
var mutateHTMLNodeWithMarkup$$module$Danger = module$mutateHTMLNodeWithMarkup;
var OPEN_TAG_NAME_EXP$$module$Danger = /^(<[^ \/>]+)/;
var RESULT_INDEX_ATTR$$module$Danger = "data-danger-index";
function getNodeName$$module$Danger(markup) {
  return markup.substring(1, markup.indexOf(" "))
}
var Danger$$module$Danger = {dangerouslyRenderMarkup:function(markupList) {
  invariant$$module$Danger(ExecutionEnvironment$$module$Danger.canUseDOM);
  var nodeName;
  var markupByNodeName = {};
  for(var i = 0;i < markupList.length;i++) {
    invariant$$module$Danger(markupList[i]);
    nodeName = getNodeName$$module$Danger(markupList[i]);
    nodeName = getMarkupWrap$$module$Danger(nodeName) ? nodeName : "*";
    markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];
    markupByNodeName[nodeName][i] = markupList[i]
  }
  var resultList = [];
  var resultListAssignmentCount = 0;
  for(nodeName in markupByNodeName) {
    if(!markupByNodeName.hasOwnProperty(nodeName)) {
      continue
    }
    var markupListByNodeName = markupByNodeName[nodeName];
    for(var resultIndex in markupListByNodeName) {
      if(markupListByNodeName.hasOwnProperty(resultIndex)) {
        var markup = markupListByNodeName[resultIndex];
        markupListByNodeName[resultIndex] = markup.replace(OPEN_TAG_NAME_EXP$$module$Danger, "$1 " + RESULT_INDEX_ATTR$$module$Danger + '\x3d"' + resultIndex + '" ')
      }
    }
    var renderNodes = createNodesFromMarkup$$module$Danger(markupListByNodeName.join(""), emptyFunction$$module$Danger);
    for(i = 0;i < renderNodes.length;++i) {
      var renderNode = renderNodes[i]
    }
  }
  invariant$$module$Danger(resultListAssignmentCount === resultList.length);
  invariant$$module$Danger(resultList.length === markupList.length);
  return resultList
}, dangerouslyReplaceNodeWithMarkup:function(oldChild, markup) {
  invariant$$module$Danger(ExecutionEnvironment$$module$Danger.canUseDOM);
  invariant$$module$Danger(markup);
  if(oldChild.tagName.toLowerCase() === "html") {
    mutateHTMLNodeWithMarkup$$module$Danger(oldChild, markup);
    return
  }
  var newChild = createNodesFromMarkup$$module$Danger(markup, emptyFunction$$module$Danger)[0];
  oldChild.parentNode.replaceChild(newChild, oldChild)
}};
module$Danger.module$exports = Danger$$module$Danger;
if(module$Danger.module$exports) {
  module$Danger = module$Danger.module$exports
}
goog.provide("module$DOMChildrenOperations");
var module$DOMChildrenOperations = {};
goog.require("module$getTextContentAccessor");
goog.require("module$ReactMultiChildUpdateTypes");
goog.require("module$Danger");
var Danger$$module$DOMChildrenOperations = module$Danger;
var ReactMultiChildUpdateTypes$$module$DOMChildrenOperations = module$ReactMultiChildUpdateTypes;
var getTextContentAccessor$$module$DOMChildrenOperations = module$getTextContentAccessor;
var textContentAccessor$$module$DOMChildrenOperations = getTextContentAccessor$$module$DOMChildrenOperations() || "NA";
function insertChildAt$$module$DOMChildrenOperations(parentNode, childNode, index) {
  var childNodes = parentNode.childNodes;
  if(childNodes[index] === childNode) {
    return
  }
  if(childNode.parentNode === parentNode) {
    parentNode.removeChild(childNode)
  }
  if(index >= childNodes.length) {
    parentNode.appendChild(childNode)
  }else {
    parentNode.insertBefore(childNode, childNodes[index])
  }
}
var DOMChildrenOperations$$module$DOMChildrenOperations = {dangerouslyReplaceNodeWithMarkup:Danger$$module$DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup, processUpdates:function(updates, markupList) {
  var update;
  var initialChildren = null;
  var updatedChildren = null;
  for(var i = 0;update = updates[i];i++) {
    if(update.type === ReactMultiChildUpdateTypes$$module$DOMChildrenOperations.MOVE_EXISTING || update.type === ReactMultiChildUpdateTypes$$module$DOMChildrenOperations.REMOVE_NODE) {
      var updatedIndex = update.fromIndex;
      var updatedChild = update.parentNode.childNodes[updatedIndex];
      var parentID = update.parentID;
      initialChildren = initialChildren || {};
      initialChildren[parentID] = initialChildren[parentID] || [];
      initialChildren[parentID][updatedIndex] = updatedChild;
      updatedChildren = updatedChildren || [];
      updatedChildren.push(updatedChild)
    }
  }
  var renderedMarkup = Danger$$module$DOMChildrenOperations.dangerouslyRenderMarkup(markupList);
  if(updatedChildren) {
    for(var j = 0;j < updatedChildren.length;j++) {
      updatedChildren[j].parentNode.removeChild(updatedChildren[j])
    }
  }
  for(var k = 0;update = updates[k];k++) {
    switch(update.type) {
      case ReactMultiChildUpdateTypes$$module$DOMChildrenOperations.INSERT_MARKUP:
        insertChildAt$$module$DOMChildrenOperations(update.parentNode, renderedMarkup[update.markupIndex], update.toIndex);
        break;
      case ReactMultiChildUpdateTypes$$module$DOMChildrenOperations.MOVE_EXISTING:
        insertChildAt$$module$DOMChildrenOperations(update.parentNode, initialChildren[update.parentID][update.fromIndex], update.toIndex);
        break;
      case ReactMultiChildUpdateTypes$$module$DOMChildrenOperations.TEXT_CONTENT:
        update.parentNode[textContentAccessor$$module$DOMChildrenOperations] = update.textContent;
        break;
      case ReactMultiChildUpdateTypes$$module$DOMChildrenOperations.REMOVE_NODE:
        break
    }
  }
}};
module$DOMChildrenOperations.module$exports = DOMChildrenOperations$$module$DOMChildrenOperations;
if(module$DOMChildrenOperations.module$exports) {
  module$DOMChildrenOperations = module$DOMChildrenOperations.module$exports
}
goog.provide("module$ReactDOMIDOperations");
var module$ReactDOMIDOperations = {};
goog.require("module$invariant");
goog.require("module$getTextContentAccessor");
goog.require("module$ReactMount");
goog.require("module$DOMPropertyOperations");
goog.require("module$DOMChildrenOperations");
goog.require("module$CSSPropertyOperations");
var CSSPropertyOperations$$module$ReactDOMIDOperations = module$CSSPropertyOperations;
var DOMChildrenOperations$$module$ReactDOMIDOperations = module$DOMChildrenOperations;
var DOMPropertyOperations$$module$ReactDOMIDOperations = module$DOMPropertyOperations;
var ReactMount$$module$ReactDOMIDOperations = module$ReactMount;
var getTextContentAccessor$$module$ReactDOMIDOperations = module$getTextContentAccessor;
var invariant$$module$ReactDOMIDOperations = module$invariant;
var INVALID_PROPERTY_ERRORS$$module$ReactDOMIDOperations = {dangerouslySetInnerHTML:"`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.", style:"`style` must be set using `updateStylesByID()`."};
var textContentAccessor$$module$ReactDOMIDOperations = getTextContentAccessor$$module$ReactDOMIDOperations() || "NA";
var LEADING_SPACE$$module$ReactDOMIDOperations = /^ /;
var ReactDOMIDOperations$$module$ReactDOMIDOperations = {updatePropertyByID:function(id, name, value) {
  var node = ReactMount$$module$ReactDOMIDOperations.getNode(id);
  invariant$$module$ReactDOMIDOperations(!INVALID_PROPERTY_ERRORS$$module$ReactDOMIDOperations.hasOwnProperty(name));
  if(value != null) {
    DOMPropertyOperations$$module$ReactDOMIDOperations.setValueForProperty(node, name, value)
  }else {
    DOMPropertyOperations$$module$ReactDOMIDOperations.deleteValueForProperty(node, name)
  }
}, deletePropertyByID:function(id, name, value) {
  var node = ReactMount$$module$ReactDOMIDOperations.getNode(id);
  invariant$$module$ReactDOMIDOperations(!INVALID_PROPERTY_ERRORS$$module$ReactDOMIDOperations.hasOwnProperty(name));
  DOMPropertyOperations$$module$ReactDOMIDOperations.deleteValueForProperty(node, name, value)
}, updatePropertiesByID:function(id, properties) {
  for(var name in properties) {
    if(!properties.hasOwnProperty(name)) {
      continue
    }
    ReactDOMIDOperations$$module$ReactDOMIDOperations.updatePropertiesByID(id, name, properties[name])
  }
}, updateStylesByID:function(id, styles) {
  var node = ReactMount$$module$ReactDOMIDOperations.getNode(id);
  CSSPropertyOperations$$module$ReactDOMIDOperations.setValueForStyles(node, styles)
}, updateInnerHTMLByID:function(id, html) {
  var node = ReactMount$$module$ReactDOMIDOperations.getNode(id);
  node.innerHTML = html.replace(LEADING_SPACE$$module$ReactDOMIDOperations, "\x26nbsp;")
}, updateTextContentByID:function(id, content) {
  var node = ReactMount$$module$ReactDOMIDOperations.getNode(id);
  node[textContentAccessor$$module$ReactDOMIDOperations] = content
}, dangerouslyReplaceNodeWithMarkupByID:function(id, markup) {
  var node = ReactMount$$module$ReactDOMIDOperations.getNode(id);
  DOMChildrenOperations$$module$ReactDOMIDOperations.dangerouslyReplaceNodeWithMarkup(node, markup)
}, dangerouslyProcessChildrenUpdates:function(updates, markup) {
  for(var i = 0;i < updates.length;i++) {
    updates[i].parentNode = ReactMount$$module$ReactDOMIDOperations.getNode(updates[i].parentID)
  }
  DOMChildrenOperations$$module$ReactDOMIDOperations.processUpdates(updates, markup)
}};
module$ReactDOMIDOperations.module$exports = ReactDOMIDOperations$$module$ReactDOMIDOperations;
if(module$ReactDOMIDOperations.module$exports) {
  module$ReactDOMIDOperations = module$ReactDOMIDOperations.module$exports
}
goog.provide("module$ReactComponentBrowserEnvironment");
var module$ReactComponentBrowserEnvironment = {};
goog.require("module$mutateHTMLNodeWithMarkup");
goog.require("module$invariant");
goog.require("module$getReactRootElementInContainer");
goog.require("module$ReactReconcileTransaction");
goog.require("module$ReactMount");
goog.require("module$ReactMarkupChecksum");
goog.require("module$ReactDOMIDOperations");
var ReactDOMIDOperations$$module$ReactComponentBrowserEnvironment = module$ReactDOMIDOperations;
var ReactMarkupChecksum$$module$ReactComponentBrowserEnvironment = module$ReactMarkupChecksum;
var ReactMount$$module$ReactComponentBrowserEnvironment = module$ReactMount;
var ReactReconcileTransaction$$module$ReactComponentBrowserEnvironment = module$ReactReconcileTransaction;
var getReactRootElementInContainer$$module$ReactComponentBrowserEnvironment = module$getReactRootElementInContainer;
var invariant$$module$ReactComponentBrowserEnvironment = module$invariant;
var mutateHTMLNodeWithMarkup$$module$ReactComponentBrowserEnvironment = module$mutateHTMLNodeWithMarkup;
var ELEMENT_NODE_TYPE$$module$ReactComponentBrowserEnvironment = 1;
var DOC_NODE_TYPE$$module$ReactComponentBrowserEnvironment = 9;
var ReactComponentBrowserEnvironment$$module$ReactComponentBrowserEnvironment = {Mixin:{getDOMNode:function() {
  invariant$$module$ReactComponentBrowserEnvironment(this.isMounted());
  return ReactMount$$module$ReactComponentBrowserEnvironment.getNode(this._rootNodeID)
}}, ReactReconcileTransaction:ReactReconcileTransaction$$module$ReactComponentBrowserEnvironment, DOMIDOperations:ReactDOMIDOperations$$module$ReactComponentBrowserEnvironment, unmountIDFromEnvironment:function(rootNodeID) {
  ReactMount$$module$ReactComponentBrowserEnvironment.purgeID(rootNodeID)
}, mountImageIntoNode:function(markup, container, shouldReuseMarkup) {
  invariant$$module$ReactComponentBrowserEnvironment(container && (container.nodeType === ELEMENT_NODE_TYPE$$module$ReactComponentBrowserEnvironment || container.nodeType === DOC_NODE_TYPE$$module$ReactComponentBrowserEnvironment && ReactMount$$module$ReactComponentBrowserEnvironment.allowFullPageRender));
  if(shouldReuseMarkup) {
    if(ReactMarkupChecksum$$module$ReactComponentBrowserEnvironment.canReuseMarkup(markup, getReactRootElementInContainer$$module$ReactComponentBrowserEnvironment(container))) {
      return
    }else {
    }
  }
  if(container.nodeType === DOC_NODE_TYPE$$module$ReactComponentBrowserEnvironment) {
    mutateHTMLNodeWithMarkup$$module$ReactComponentBrowserEnvironment(container.documentElement, markup);
    return
  }
  var parent = container.parentNode;
  if(parent) {
    var next = container.nextSibling;
    parent.removeChild(container);
    container.innerHTML = markup;
    if(next) {
      parent.insertBefore(container, next)
    }else {
      parent.appendChild(container)
    }
  }else {
    container.innerHTML = markup
  }
}};
module$ReactComponentBrowserEnvironment.module$exports = ReactComponentBrowserEnvironment$$module$ReactComponentBrowserEnvironment;
if(module$ReactComponentBrowserEnvironment.module$exports) {
  module$ReactComponentBrowserEnvironment = module$ReactComponentBrowserEnvironment.module$exports
}
goog.provide("module$ReactComponentEnvironment");
var module$ReactComponentEnvironment = {};
goog.require("module$ReactComponentBrowserEnvironment");
var ReactComponentBrowserEnvironment$$module$ReactComponentEnvironment = module$ReactComponentBrowserEnvironment;
var ReactComponentEnvironment$$module$ReactComponentEnvironment = ReactComponentBrowserEnvironment$$module$ReactComponentEnvironment;
module$ReactComponentEnvironment.module$exports = ReactComponentEnvironment$$module$ReactComponentEnvironment;
if(module$ReactComponentEnvironment.module$exports) {
  module$ReactComponentEnvironment = module$ReactComponentEnvironment.module$exports
}
goog.provide("module$ReactComponent");
var module$ReactComponent = {};
goog.require("module$merge");
goog.require("module$keyMirror");
goog.require("module$invariant");
goog.require("module$ReactUpdates");
goog.require("module$ReactRefs");
goog.require("module$ReactOwner");
goog.require("module$ReactCurrentOwner");
goog.require("module$ReactComponentEnvironment");
var ReactComponentEnvironment$$module$ReactComponent = module$ReactComponentEnvironment;
var ReactCurrentOwner$$module$ReactComponent = module$ReactCurrentOwner;
var ReactOwner$$module$ReactComponent = module$ReactOwner;
var ReactRefs$$module$ReactComponent = module$ReactRefs;
var ReactUpdates$$module$ReactComponent = module$ReactUpdates;
var invariant$$module$ReactComponent = module$invariant;
var keyMirror$$module$ReactComponent = module$keyMirror;
var merge$$module$ReactComponent = module$merge;
var IS_KEY_VALIDATED$$module$ReactComponent = "{is.key.validated}";
var ComponentLifeCycle$$module$ReactComponent = keyMirror$$module$ReactComponent({MOUNTED:null, UNMOUNTED:null});
var ownerHasWarned$$module$ReactComponent = {};
function validateExplicitKey$$module$ReactComponent(component) {
  if(component[IS_KEY_VALIDATED$$module$ReactComponent] || component.props.key != null) {
    return
  }
  component[IS_KEY_VALIDATED$$module$ReactComponent] = true;
  if(!ReactCurrentOwner$$module$ReactComponent.current) {
    return
  }
  var currentName = ReactCurrentOwner$$module$ReactComponent.current.constructor.displayName;
  if(ownerHasWarned$$module$ReactComponent.hasOwnProperty(currentName)) {
    return
  }
  ownerHasWarned$$module$ReactComponent[currentName] = true;
  var message = 'Each child in an array should have a unique "key" prop. ' + "Check the render method of " + currentName + ".";
  if(!component.isOwnedBy(ReactCurrentOwner$$module$ReactComponent.current)) {
    var childOwnerName = component.props.__owner__ && component.props.__owner__.constructor.displayName;
    message += " It was passed a child from " + childOwnerName + "."
  }
  console.warn(message)
}
function validateChildKeys$$module$ReactComponent(component) {
  if(Array.isArray(component)) {
    for(var i = 0;i < component.length;i++) {
      var child = component[i];
      if(ReactComponent$$module$ReactComponent.isValidComponent(child)) {
        validateExplicitKey$$module$ReactComponent(child)
      }
    }
  }else {
    if(ReactComponent$$module$ReactComponent.isValidComponent(component)) {
      component[IS_KEY_VALIDATED$$module$ReactComponent] = true
    }
  }
}
var ReactComponent$$module$ReactComponent = {isValidComponent:function(object) {
  return!!(object && typeof object.mountComponentIntoNode === "function" && typeof object.receiveProps === "function")
}, getKey:function(component, index) {
  if(component && component.props && component.props.key != null) {
    return"{" + component.props.key + "}"
  }
  return"[" + index + "]"
}, LifeCycle:ComponentLifeCycle$$module$ReactComponent, DOMIDOperations:ReactComponentEnvironment$$module$ReactComponent.DOMIDOperations, unmountIDFromEnvironment:ReactComponentEnvironment$$module$ReactComponent.unmountIDFromEnvironment, mountImageIntoNode:ReactComponentEnvironment$$module$ReactComponent.mountImageIntoNode, ReactReconcileTransaction:ReactComponentEnvironment$$module$ReactComponent.ReactReconcileTransaction, Mixin:merge$$module$ReactComponent(ReactComponentEnvironment$$module$ReactComponent.Mixin, 
{isMounted:function() {
  return this._lifeCycleState === ComponentLifeCycle$$module$ReactComponent.MOUNTED
}, setProps:function(partialProps, callback) {
  this.replaceProps(merge$$module$ReactComponent(this._pendingProps || this.props, partialProps), callback)
}, replaceProps:function(props, callback) {
  invariant$$module$ReactComponent(!this.props.__owner__);
  invariant$$module$ReactComponent(this.isMounted());
  this._pendingProps = props;
  ReactUpdates$$module$ReactComponent.enqueueUpdate(this, callback)
}, construct:function(initialProps, children) {
  this.props = initialProps || {};
  this.props.__owner__ = ReactCurrentOwner$$module$ReactComponent.current;
  this._lifeCycleState = ComponentLifeCycle$$module$ReactComponent.UNMOUNTED;
  this._pendingProps = null;
  this._pendingCallbacks = null;
  var childrenLength = arguments.length - 1;
  if(childrenLength === 1) {
    this.props.children = children
  }else {
    if(childrenLength > 1) {
      var childArray = Array(childrenLength);
      for(var i = 0;i < childrenLength;i++) {
        childArray[i] = arguments[i + 1]
      }
      this.props.children = childArray
    }
  }
}, mountComponent:function(rootID, transaction, mountDepth) {
  invariant$$module$ReactComponent(!this.isMounted());
  var ref = ReactRefs$$module$ReactComponent.getComponentRef(this);
  if(ref != null) {
    ReactOwner$$module$ReactComponent.addComponentAsRefTo(this, ref, this.props.__owner__)
  }
  this._rootNodeID = rootID;
  this._lifeCycleState = ComponentLifeCycle$$module$ReactComponent.MOUNTED;
  this._mountDepth = mountDepth
}, unmountComponent:function() {
  invariant$$module$ReactComponent(this.isMounted());
  var ref = ReactRefs$$module$ReactComponent.getComponentRef(this);
  if(ref != null) {
    ReactOwner$$module$ReactComponent.removeComponentAsRefFrom(this, ref, this.props.__owner__)
  }
  ReactComponent$$module$ReactComponent.unmountIDFromEnvironment(this._rootNodeID);
  this._rootNodeID = null;
  this._lifeCycleState = ComponentLifeCycle$$module$ReactComponent.UNMOUNTED
}, receiveProps:function(nextProps, transaction) {
  invariant$$module$ReactComponent(this.isMounted());
  this._pendingProps = nextProps;
  this._performUpdateIfNecessary(transaction)
}, performUpdateIfNecessary:function() {
  var transaction = ReactComponent$$module$ReactComponent.ReactReconcileTransaction.getPooled();
  transaction.perform(this._performUpdateIfNecessary, this, transaction);
  ReactComponent$$module$ReactComponent.ReactReconcileTransaction.release(transaction)
}, _performUpdateIfNecessary:function(transaction) {
  if(this._pendingProps == null) {
    return
  }
  var prevProps = this.props;
  this.props = this._pendingProps;
  this._pendingProps = null;
  this.updateComponent(transaction, prevProps)
}, updateComponent:function(transaction, prevProps) {
  var props = this.props;
  if(props.__owner__ !== prevProps.__owner__ || props.ref !== prevProps.ref) {
    if(prevProps.ref != null) {
      ReactOwner$$module$ReactComponent.removeComponentAsRefFrom(this, prevProps.ref, prevProps.__owner__)
    }
    if(props.ref != null) {
      ReactOwner$$module$ReactComponent.addComponentAsRefTo(this, props.ref, props.__owner__)
    }
  }
}, mountComponentIntoNode:function(rootID, container, shouldReuseMarkup) {
  var transaction = ReactComponent$$module$ReactComponent.ReactReconcileTransaction.getPooled();
  transaction.perform(this._mountComponentIntoNode, this, rootID, container, transaction, shouldReuseMarkup);
  ReactComponent$$module$ReactComponent.ReactReconcileTransaction.release(transaction)
}, _mountComponentIntoNode:function(rootID, container, transaction, shouldReuseMarkup) {
  var markup = this.mountComponent(rootID, transaction, 0);
  ReactComponent$$module$ReactComponent.mountImageIntoNode(markup, container, shouldReuseMarkup)
}, isOwnedBy:function(owner) {
  return this.props.__owner__ === owner
}, getSiblingByRef:function(ref) {
  var owner = this.props.__owner__;
  if(!owner || !owner.refs) {
    return null
  }
  return owner.refs[ref]
}})};
module$ReactComponent.module$exports = ReactComponent$$module$ReactComponent;
if(module$ReactComponent.module$exports) {
  module$ReactComponent = module$ReactComponent.module$exports
}
goog.provide("module$ReactCompositeComponent");
var module$ReactCompositeComponent = {};
goog.require("module$objMap");
goog.require("module$mixInto");
goog.require("module$merge");
goog.require("module$keyMirror");
goog.require("module$invariant");
goog.require("module$ReactUpdates");
goog.require("module$ReactPropTransferer");
goog.require("module$ReactPerf");
goog.require("module$ReactOwner");
goog.require("module$ReactCurrentOwner");
goog.require("module$ReactComponent");
var ReactComponent$$module$ReactCompositeComponent = module$ReactComponent;
var ReactCurrentOwner$$module$ReactCompositeComponent = module$ReactCurrentOwner;
var ReactOwner$$module$ReactCompositeComponent = module$ReactOwner;
var ReactPerf$$module$ReactCompositeComponent = module$ReactPerf;
var ReactPropTransferer$$module$ReactCompositeComponent = module$ReactPropTransferer;
var ReactUpdates$$module$ReactCompositeComponent = module$ReactUpdates;
var invariant$$module$ReactCompositeComponent = module$invariant;
var keyMirror$$module$ReactCompositeComponent = module$keyMirror;
var merge$$module$ReactCompositeComponent = module$merge;
var mixInto$$module$ReactCompositeComponent = module$mixInto;
var objMap$$module$ReactCompositeComponent = module$objMap;
var SpecPolicy$$module$ReactCompositeComponent = keyMirror$$module$ReactCompositeComponent({DEFINE_ONCE:null, DEFINE_MANY:null, OVERRIDE_BASE:null, DEFINE_MANY_MERGED:null});
var ReactCompositeComponentInterface$$module$ReactCompositeComponent = {mixins:SpecPolicy$$module$ReactCompositeComponent.DEFINE_MANY, propTypes:SpecPolicy$$module$ReactCompositeComponent.DEFINE_ONCE, getDefaultProps:SpecPolicy$$module$ReactCompositeComponent.DEFINE_MANY_MERGED, getInitialState:SpecPolicy$$module$ReactCompositeComponent.DEFINE_MANY_MERGED, render:SpecPolicy$$module$ReactCompositeComponent.DEFINE_ONCE, componentWillMount:SpecPolicy$$module$ReactCompositeComponent.DEFINE_MANY, componentDidMount:SpecPolicy$$module$ReactCompositeComponent.DEFINE_MANY, 
componentWillReceiveProps:SpecPolicy$$module$ReactCompositeComponent.DEFINE_MANY, shouldComponentUpdate:SpecPolicy$$module$ReactCompositeComponent.DEFINE_ONCE, componentWillUpdate:SpecPolicy$$module$ReactCompositeComponent.DEFINE_MANY, componentDidUpdate:SpecPolicy$$module$ReactCompositeComponent.DEFINE_MANY, componentWillUnmount:SpecPolicy$$module$ReactCompositeComponent.DEFINE_MANY, updateComponent:SpecPolicy$$module$ReactCompositeComponent.OVERRIDE_BASE};
var RESERVED_SPEC_KEYS$$module$ReactCompositeComponent = {displayName:function(Constructor, displayName) {
  Constructor.displayName = displayName
}, mixins:function(Constructor, mixins) {
  if(mixins) {
    for(var i = 0;i < mixins.length;i++) {
      mixSpecIntoComponent$$module$ReactCompositeComponent(Constructor, mixins[i])
    }
  }
}, propTypes:function(Constructor, propTypes) {
  Constructor.propTypes = propTypes
}};
function validateMethodOverride$$module$ReactCompositeComponent(proto, name) {
  var specPolicy = ReactCompositeComponentInterface$$module$ReactCompositeComponent[name];
  if(ReactCompositeComponentMixin$$module$ReactCompositeComponent.hasOwnProperty(name)) {
    invariant$$module$ReactCompositeComponent(specPolicy === SpecPolicy$$module$ReactCompositeComponent.OVERRIDE_BASE)
  }
  if(proto.hasOwnProperty(name)) {
    invariant$$module$ReactCompositeComponent(specPolicy === SpecPolicy$$module$ReactCompositeComponent.DEFINE_MANY || specPolicy === SpecPolicy$$module$ReactCompositeComponent.DEFINE_MANY_MERGED)
  }
}
function validateLifeCycleOnReplaceState$$module$ReactCompositeComponent(instance) {
  var compositeLifeCycleState = instance._compositeLifeCycleState;
  invariant$$module$ReactCompositeComponent(instance.isMounted() || compositeLifeCycleState === CompositeLifeCycle$$module$ReactCompositeComponent.MOUNTING);
  invariant$$module$ReactCompositeComponent(compositeLifeCycleState !== CompositeLifeCycle$$module$ReactCompositeComponent.RECEIVING_STATE && compositeLifeCycleState !== CompositeLifeCycle$$module$ReactCompositeComponent.UNMOUNTING)
}
function mixSpecIntoComponent$$module$ReactCompositeComponent(Constructor, spec) {
  var proto = Constructor.prototype;
  for(var name in spec) {
    var property = spec[name];
    if(!spec.hasOwnProperty(name) || !property) {
      continue
    }
    validateMethodOverride$$module$ReactCompositeComponent(proto, name);
    if(RESERVED_SPEC_KEYS$$module$ReactCompositeComponent.hasOwnProperty(name)) {
      RESERVED_SPEC_KEYS$$module$ReactCompositeComponent[name](Constructor, property)
    }else {
      var isCompositeComponentMethod = name in ReactCompositeComponentInterface$$module$ReactCompositeComponent;
      var isInherited = name in proto;
      var markedDontBind = property.__reactDontBind;
      var isFunction = typeof property === "function";
      var shouldAutoBind = isFunction && !isCompositeComponentMethod && !isInherited && !markedDontBind;
      if(shouldAutoBind) {
        if(!proto.__reactAutoBindMap) {
          proto.__reactAutoBindMap = {}
        }
        proto.__reactAutoBindMap[name] = property;
        proto[name] = property
      }else {
        if(isInherited) {
          if(ReactCompositeComponentInterface$$module$ReactCompositeComponent[name] === SpecPolicy$$module$ReactCompositeComponent.DEFINE_MANY_MERGED) {
            proto[name] = createMergedResultFunction$$module$ReactCompositeComponent(proto[name], property)
          }else {
            proto[name] = createChainedFunction$$module$ReactCompositeComponent(proto[name], property)
          }
        }else {
          proto[name] = property
        }
      }
    }
  }
}
function mergeObjectsWithNoDuplicateKeys$$module$ReactCompositeComponent(one, two) {
  invariant$$module$ReactCompositeComponent(one && two && typeof one === "object" && typeof two === "object");
  objMap$$module$ReactCompositeComponent(two, function(value, key) {
    invariant$$module$ReactCompositeComponent(one[key] === undefined);
    one[key] = value
  });
  return one
}
function createMergedResultFunction$$module$ReactCompositeComponent(one, two) {
  return function mergedResult() {
    return mergeObjectsWithNoDuplicateKeys$$module$ReactCompositeComponent(one.apply(this, arguments), two.apply(this, arguments))
  }
}
function createChainedFunction$$module$ReactCompositeComponent(one, two) {
  return function chainedFunction() {
    one.apply(this, arguments);
    two.apply(this, arguments)
  }
}
var CompositeLifeCycle$$module$ReactCompositeComponent = keyMirror$$module$ReactCompositeComponent({MOUNTING:null, UNMOUNTING:null, RECEIVING_PROPS:null, RECEIVING_STATE:null});
var ReactCompositeComponentMixin$$module$ReactCompositeComponent = {construct:function(initialProps, children) {
  ReactComponent$$module$ReactCompositeComponent.Mixin.construct.apply(this, arguments);
  this.state = null;
  this._pendingState = null;
  this._compositeLifeCycleState = null
}, isMounted:function() {
  return ReactComponent$$module$ReactCompositeComponent.Mixin.isMounted.call(this) && this._compositeLifeCycleState !== CompositeLifeCycle$$module$ReactCompositeComponent.MOUNTING
}, mountComponent:ReactPerf$$module$ReactCompositeComponent.measure("ReactCompositeComponent", "mountComponent", function(rootID, transaction, mountDepth) {
  ReactComponent$$module$ReactCompositeComponent.Mixin.mountComponent.call(this, rootID, transaction, mountDepth);
  this._compositeLifeCycleState = CompositeLifeCycle$$module$ReactCompositeComponent.MOUNTING;
  this._defaultProps = this.getDefaultProps ? this.getDefaultProps() : null;
  this._processProps(this.props);
  if(this.__reactAutoBindMap) {
    this._bindAutoBindMethods()
  }
  this.state = this.getInitialState ? this.getInitialState() : null;
  this._pendingState = null;
  this._pendingForceUpdate = false;
  if(this.componentWillMount) {
    this.componentWillMount();
    if(this._pendingState) {
      this.state = this._pendingState;
      this._pendingState = null
    }
  }
  this._renderedComponent = this._renderValidatedComponent();
  this._compositeLifeCycleState = null;
  var markup = this._renderedComponent.mountComponent(rootID, transaction, mountDepth + 1);
  if(this.componentDidMount) {
    transaction.getReactOnDOMReady().enqueue(this, this.componentDidMount)
  }
  return markup
}), unmountComponent:function() {
  this._compositeLifeCycleState = CompositeLifeCycle$$module$ReactCompositeComponent.UNMOUNTING;
  if(this.componentWillUnmount) {
    this.componentWillUnmount()
  }
  this._compositeLifeCycleState = null;
  this._defaultProps = null;
  ReactComponent$$module$ReactCompositeComponent.Mixin.unmountComponent.call(this);
  this._renderedComponent.unmountComponent();
  this._renderedComponent = null;
  if(this.refs) {
    this.refs = null
  }
}, setState:function(partialState, callback) {
  this.replaceState(merge$$module$ReactCompositeComponent(this._pendingState || this.state, partialState), callback)
}, replaceState:function(completeState, callback) {
  validateLifeCycleOnReplaceState$$module$ReactCompositeComponent(this);
  this._pendingState = completeState;
  ReactUpdates$$module$ReactCompositeComponent.enqueueUpdate(this, callback)
}, _processProps:function(props) {
  var propName;
  var defaultProps = this._defaultProps;
  for(propName in defaultProps) {
    if(!(propName in props)) {
      props[propName] = defaultProps[propName]
    }
  }
  var propTypes = this.constructor.propTypes;
  if(propTypes) {
    var componentName = this.constructor.displayName;
    for(propName in propTypes) {
      var checkProp = propTypes[propName];
      if(checkProp) {
        checkProp(props, propName, componentName)
      }
    }
  }
}, performUpdateIfNecessary:function() {
  var compositeLifeCycleState = this._compositeLifeCycleState;
  if(compositeLifeCycleState === CompositeLifeCycle$$module$ReactCompositeComponent.MOUNTING || compositeLifeCycleState === CompositeLifeCycle$$module$ReactCompositeComponent.RECEIVING_PROPS) {
    return
  }
  ReactComponent$$module$ReactCompositeComponent.Mixin.performUpdateIfNecessary.call(this)
}, _performUpdateIfNecessary:function(transaction) {
  if(this._pendingProps == null && this._pendingState == null && !this._pendingForceUpdate) {
    return
  }
  var nextProps = this.props;
  if(this._pendingProps != null) {
    nextProps = this._pendingProps;
    this._processProps(nextProps);
    this._pendingProps = null;
    this._compositeLifeCycleState = CompositeLifeCycle$$module$ReactCompositeComponent.RECEIVING_PROPS;
    if(this.componentWillReceiveProps) {
      this.componentWillReceiveProps(nextProps, transaction)
    }
  }
  this._compositeLifeCycleState = CompositeLifeCycle$$module$ReactCompositeComponent.RECEIVING_STATE;
  var nextState = this._pendingState || this.state;
  this._pendingState = null;
  if(this._pendingForceUpdate || !this.shouldComponentUpdate || this.shouldComponentUpdate(nextProps, nextState)) {
    this._pendingForceUpdate = false;
    this._performComponentUpdate(nextProps, nextState, transaction)
  }else {
    this.props = nextProps;
    this.state = nextState
  }
  this._compositeLifeCycleState = null
}, _performComponentUpdate:function(nextProps, nextState, transaction) {
  var prevProps = this.props;
  var prevState = this.state;
  if(this.componentWillUpdate) {
    this.componentWillUpdate(nextProps, nextState, transaction)
  }
  this.props = nextProps;
  this.state = nextState;
  this.updateComponent(transaction, prevProps, prevState);
  if(this.componentDidUpdate) {
    transaction.getReactOnDOMReady().enqueue(this, this.componentDidUpdate.bind(this, prevProps, prevState))
  }
}, updateComponent:ReactPerf$$module$ReactCompositeComponent.measure("ReactCompositeComponent", "updateComponent", function(transaction, prevProps, prevState) {
  ReactComponent$$module$ReactCompositeComponent.Mixin.updateComponent.call(this, transaction, prevProps);
  var currentComponent = this._renderedComponent;
  var nextComponent = this._renderValidatedComponent();
  if(currentComponent.constructor === nextComponent.constructor) {
    currentComponent.receiveProps(nextComponent.props, transaction)
  }else {
    var thisID = this._rootNodeID;
    var currentComponentID = currentComponent._rootNodeID;
    currentComponent.unmountComponent();
    var nextMarkup = nextComponent.mountComponent(thisID, transaction, this._mountDepth + 1);
    ReactComponent$$module$ReactCompositeComponent.DOMIDOperations.dangerouslyReplaceNodeWithMarkupByID(currentComponentID, nextMarkup);
    this._renderedComponent = nextComponent
  }
}), forceUpdate:function(callback) {
  var compositeLifeCycleState = this._compositeLifeCycleState;
  invariant$$module$ReactCompositeComponent(this.isMounted() || compositeLifeCycleState === CompositeLifeCycle$$module$ReactCompositeComponent.MOUNTING);
  invariant$$module$ReactCompositeComponent(compositeLifeCycleState !== CompositeLifeCycle$$module$ReactCompositeComponent.RECEIVING_STATE && compositeLifeCycleState !== CompositeLifeCycle$$module$ReactCompositeComponent.UNMOUNTING);
  this._pendingForceUpdate = true;
  ReactUpdates$$module$ReactCompositeComponent.enqueueUpdate(this, callback)
}, _renderValidatedComponent:function() {
  var renderedComponent;
  ReactCurrentOwner$$module$ReactCompositeComponent.current = this;
  try {
    renderedComponent = this.render()
  }catch(error) {
    throw error;
  }finally {
    ReactCurrentOwner$$module$ReactCompositeComponent.current = null
  }
  invariant$$module$ReactCompositeComponent(ReactComponent$$module$ReactCompositeComponent.isValidComponent(renderedComponent));
  return renderedComponent
}, _bindAutoBindMethods:function() {
  for(var autoBindKey in this.__reactAutoBindMap) {
    if(!this.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {
      continue
    }
    var method = this.__reactAutoBindMap[autoBindKey];
    this[autoBindKey] = this._bindAutoBindMethod(method)
  }
}, _bindAutoBindMethod:function(method) {
  var component = this;
  var boundMethod = function() {
    return method.apply(component, arguments)
  };
  return boundMethod
}};
var ReactCompositeComponentBase$$module$ReactCompositeComponent = function() {
};
mixInto$$module$ReactCompositeComponent(ReactCompositeComponentBase$$module$ReactCompositeComponent, ReactComponent$$module$ReactCompositeComponent.Mixin);
mixInto$$module$ReactCompositeComponent(ReactCompositeComponentBase$$module$ReactCompositeComponent, ReactOwner$$module$ReactCompositeComponent.Mixin);
mixInto$$module$ReactCompositeComponent(ReactCompositeComponentBase$$module$ReactCompositeComponent, ReactPropTransferer$$module$ReactCompositeComponent.Mixin);
mixInto$$module$ReactCompositeComponent(ReactCompositeComponentBase$$module$ReactCompositeComponent, ReactCompositeComponentMixin$$module$ReactCompositeComponent);
var ReactCompositeComponent$$module$ReactCompositeComponent = {LifeCycle:CompositeLifeCycle$$module$ReactCompositeComponent, Base:ReactCompositeComponentBase$$module$ReactCompositeComponent, createClass:function(spec) {
  var Constructor = function() {
  };
  Constructor.prototype = new ReactCompositeComponentBase$$module$ReactCompositeComponent;
  Constructor.prototype.constructor = Constructor;
  mixSpecIntoComponent$$module$ReactCompositeComponent(Constructor, spec);
  invariant$$module$ReactCompositeComponent(Constructor.prototype.render);
  for(var methodName in ReactCompositeComponentInterface$$module$ReactCompositeComponent) {
    if(!Constructor.prototype[methodName]) {
      Constructor.prototype[methodName] = null
    }
  }
  var ConvenienceConstructor = function(props, children) {
    var instance = new Constructor;
    instance.construct.apply(instance, arguments);
    return instance
  };
  ConvenienceConstructor.componentConstructor = Constructor;
  ConvenienceConstructor.originalSpec = spec;
  return ConvenienceConstructor
}, isValidClass:function(componentClass) {
  return componentClass instanceof Function && "componentConstructor" in componentClass && componentClass.componentConstructor instanceof Function
}};
module$ReactCompositeComponent.module$exports = ReactCompositeComponent$$module$ReactCompositeComponent;
if(module$ReactCompositeComponent.module$exports) {
  module$ReactCompositeComponent = module$ReactCompositeComponent.module$exports
}
goog.provide("module$ReactMultiChild");
var module$ReactMultiChild = {};
goog.require("module$ReactMultiChildUpdateTypes");
goog.require("module$ReactComponent");
var ReactComponent$$module$ReactMultiChild = module$ReactComponent;
var ReactMultiChildUpdateTypes$$module$ReactMultiChild = module$ReactMultiChildUpdateTypes;
function shouldUpdateChild$$module$ReactMultiChild(curChild, newChild) {
  return curChild && newChild && curChild.constructor === newChild.constructor
}
var updateDepth$$module$ReactMultiChild = 0;
var updateQueue$$module$ReactMultiChild = [];
var markupQueue$$module$ReactMultiChild = [];
function enqueueMarkup$$module$ReactMultiChild(parentID, markup, toIndex) {
  updateQueue$$module$ReactMultiChild.push({parentID:parentID, parentNode:null, type:ReactMultiChildUpdateTypes$$module$ReactMultiChild.INSERT_MARKUP, markupIndex:markupQueue$$module$ReactMultiChild.push(markup) - 1, fromIndex:null, textContent:null, toIndex:toIndex})
}
function enqueueMove$$module$ReactMultiChild(parentID, fromIndex, toIndex) {
  updateQueue$$module$ReactMultiChild.push({parentID:parentID, parentNode:null, type:ReactMultiChildUpdateTypes$$module$ReactMultiChild.MOVE_EXISTING, markupIndex:null, textContent:null, fromIndex:fromIndex, toIndex:toIndex})
}
function enqueueRemove$$module$ReactMultiChild(parentID, fromIndex) {
  updateQueue$$module$ReactMultiChild.push({parentID:parentID, parentNode:null, type:ReactMultiChildUpdateTypes$$module$ReactMultiChild.REMOVE_NODE, markupIndex:null, textContent:null, fromIndex:fromIndex, toIndex:null})
}
function enqueueTextContent$$module$ReactMultiChild(parentID, textContent) {
  updateQueue$$module$ReactMultiChild.push({parentID:parentID, parentNode:null, type:ReactMultiChildUpdateTypes$$module$ReactMultiChild.TEXT_CONTENT, markupIndex:null, textContent:textContent, fromIndex:null, toIndex:null})
}
function processQueue$$module$ReactMultiChild() {
  if(updateQueue$$module$ReactMultiChild.length) {
    ReactComponent$$module$ReactMultiChild.DOMIDOperations.dangerouslyProcessChildrenUpdates(updateQueue$$module$ReactMultiChild, markupQueue$$module$ReactMultiChild);
    clearQueue$$module$ReactMultiChild()
  }
}
function clearQueue$$module$ReactMultiChild() {
  updateQueue$$module$ReactMultiChild.length = 0;
  markupQueue$$module$ReactMultiChild.length = 0
}
var ReactMultiChild$$module$ReactMultiChild = {Mixin:{mountChildren:function(children, transaction) {
  var mountImages = [];
  var index = 0;
  for(var name in children) {
    var child = children[name];
    if(children.hasOwnProperty(name) && child) {
      var rootID = this._rootNodeID + "." + name;
      var mountImage = child.mountComponent(rootID, transaction, this._mountDepth + 1);
      child._mountImage = mountImage;
      child._mountIndex = index;
      mountImages.push(mountImage);
      index++
    }
  }
  this._renderedChildren = children;
  return mountImages
}, updateTextContent:function(nextContent) {
  updateDepth$$module$ReactMultiChild++;
  try {
    var prevChildren = this._renderedChildren;
    for(var name in prevChildren) {
      if(prevChildren.hasOwnProperty(name) && prevChildren[name]) {
        this._unmountChildByName(prevChildren[name], name)
      }
    }
    this.setTextContent(nextContent)
  }catch(error) {
    updateDepth$$module$ReactMultiChild--;
    updateDepth$$module$ReactMultiChild || clearQueue$$module$ReactMultiChild();
    throw error;
  }
  updateDepth$$module$ReactMultiChild--;
  updateDepth$$module$ReactMultiChild || processQueue$$module$ReactMultiChild()
}, updateChildren:function(nextChildren, transaction) {
  updateDepth$$module$ReactMultiChild++;
  try {
    this._updateChildren(nextChildren, transaction)
  }catch(error) {
    updateDepth$$module$ReactMultiChild--;
    updateDepth$$module$ReactMultiChild || clearQueue$$module$ReactMultiChild();
    throw error;
  }
  updateDepth$$module$ReactMultiChild--;
  updateDepth$$module$ReactMultiChild || processQueue$$module$ReactMultiChild()
}, _updateChildren:function(nextChildren, transaction) {
  var prevChildren = this._renderedChildren;
  if(!nextChildren && !prevChildren) {
    return
  }
  var name;
  var lastIndex = 0;
  var nextIndex = 0;
  for(name in nextChildren) {
    if(!nextChildren.hasOwnProperty(name)) {
      continue
    }
    var prevChild = prevChildren && prevChildren[name];
    var nextChild = nextChildren[name];
    if(shouldUpdateChild$$module$ReactMultiChild(prevChild, nextChild)) {
      this.moveChild(prevChild, nextIndex, lastIndex);
      lastIndex = Math.max(prevChild._mountIndex, lastIndex);
      prevChild.receiveProps(nextChild.props, transaction);
      prevChild._mountIndex = nextIndex
    }else {
      if(prevChild) {
        lastIndex = Math.max(prevChild._mountIndex, lastIndex);
        this._unmountChildByName(prevChild, name)
      }
      if(nextChild) {
        this._mountChildByNameAtIndex(nextChild, name, nextIndex, transaction)
      }
    }
    if(nextChild) {
      nextIndex++
    }
  }
  for(name in prevChildren) {
    if(prevChildren.hasOwnProperty(name) && prevChildren[name] && !(nextChildren && nextChildren[name])) {
      this._unmountChildByName(prevChildren[name], name)
    }
  }
}, unmountChildren:function() {
  var renderedChildren = this._renderedChildren;
  for(var name in renderedChildren) {
    var renderedChild = renderedChildren[name];
    if(renderedChild && renderedChild.unmountComponent) {
      renderedChild.unmountComponent()
    }
  }
  this._renderedChildren = null
}, moveChild:function(child, toIndex, lastIndex) {
  if(child._mountIndex < lastIndex) {
    enqueueMove$$module$ReactMultiChild(this._rootNodeID, child._mountIndex, toIndex)
  }
}, createChild:function(child) {
  enqueueMarkup$$module$ReactMultiChild(this._rootNodeID, child._mountImage, child._mountIndex)
}, removeChild:function(child) {
  enqueueRemove$$module$ReactMultiChild(this._rootNodeID, child._mountIndex)
}, setTextContent:function(textContent) {
  enqueueTextContent$$module$ReactMultiChild(this._rootNodeID, textContent)
}, _mountChildByNameAtIndex:function(child, name, index, transaction) {
  var rootID = this._rootNodeID + "." + name;
  var mountImage = child.mountComponent(rootID, transaction, this._mountDepth + 1);
  child._mountImage = mountImage;
  child._mountIndex = index;
  this.createChild(child);
  this._renderedChildren = this._renderedChildren || {};
  this._renderedChildren[name] = child
}, _unmountChildByName:function(child, name) {
  if(ReactComponent$$module$ReactMultiChild.isValidComponent(child)) {
    this.removeChild(child);
    child._mountImage = null;
    child._mountIndex = null;
    child.unmountComponent();
    delete this._renderedChildren[name]
  }
}}};
module$ReactMultiChild.module$exports = ReactMultiChild$$module$ReactMultiChild;
if(module$ReactMultiChild.module$exports) {
  module$ReactMultiChild = module$ReactMultiChild.module$exports
}
goog.provide("module$ReactTextComponent");
var module$ReactTextComponent = {};
goog.require("module$mixInto");
goog.require("module$escapeTextForBrowser");
goog.require("module$ReactMount");
goog.require("module$ReactComponent");
var ReactComponent$$module$ReactTextComponent = module$ReactComponent;
var ReactMount$$module$ReactTextComponent = module$ReactMount;
var escapeTextForBrowser$$module$ReactTextComponent = module$escapeTextForBrowser;
var mixInto$$module$ReactTextComponent = module$mixInto;
var ReactTextComponent$$module$ReactTextComponent = function(initialText) {
  this.construct({text:initialText})
};
mixInto$$module$ReactTextComponent(ReactTextComponent$$module$ReactTextComponent, ReactComponent$$module$ReactTextComponent.Mixin);
mixInto$$module$ReactTextComponent(ReactTextComponent$$module$ReactTextComponent, {mountComponent:function(rootID, transaction, mountDepth) {
  ReactComponent$$module$ReactTextComponent.Mixin.mountComponent.call(this, rootID, transaction, mountDepth);
  return"\x3cspan " + ReactMount$$module$ReactTextComponent.ATTR_NAME + '\x3d"' + rootID + '"\x3e' + escapeTextForBrowser$$module$ReactTextComponent(this.props.text) + "\x3c/span\x3e"
}, receiveProps:function(nextProps, transaction) {
  if(nextProps.text !== this.props.text) {
    this.props.text = nextProps.text;
    ReactComponent$$module$ReactTextComponent.DOMIDOperations.updateTextContentByID(this._rootNodeID, nextProps.text)
  }
}});
module$ReactTextComponent.module$exports = ReactTextComponent$$module$ReactTextComponent;
if(module$ReactTextComponent.module$exports) {
  module$ReactTextComponent = module$ReactTextComponent.module$exports
}
goog.provide("module$traverseAllChildren");
var module$traverseAllChildren = {};
goog.require("module$invariant");
goog.require("module$ReactTextComponent");
goog.require("module$ReactComponent");
var ReactComponent$$module$traverseAllChildren = module$ReactComponent;
var ReactTextComponent$$module$traverseAllChildren = module$ReactTextComponent;
var invariant$$module$traverseAllChildren = module$invariant;
var traverseAllChildrenImpl$$module$traverseAllChildren = function(children, nameSoFar, indexSoFar, callback, traverseContext) {
  var subtreeCount = 0;
  if(Array.isArray(children)) {
    for(var i = 0;i < children.length;i++) {
      var child = children[i];
      var nextName = nameSoFar + ReactComponent$$module$traverseAllChildren.getKey(child, i);
      var nextIndex = indexSoFar + subtreeCount;
      subtreeCount += traverseAllChildrenImpl$$module$traverseAllChildren(child, nextName, nextIndex, callback, traverseContext)
    }
  }else {
    var type = typeof children;
    var isOnlyChild = nameSoFar === "";
    var storageName = isOnlyChild ? ReactComponent$$module$traverseAllChildren.getKey(children, 0) : nameSoFar;
    if(children === null || children === undefined || type === "boolean") {
      callback(traverseContext, null, storageName, indexSoFar);
      subtreeCount = 1
    }else {
      if(children.mountComponentIntoNode) {
        callback(traverseContext, children, storageName, indexSoFar);
        subtreeCount = 1
      }else {
        if(type === "object") {
          invariant$$module$traverseAllChildren(!children || children.nodeType !== 1);
          for(var key in children) {
            if(children.hasOwnProperty(key)) {
              subtreeCount += traverseAllChildrenImpl$$module$traverseAllChildren(children[key], nameSoFar + "{" + key + "}", indexSoFar + subtreeCount, callback, traverseContext)
            }
          }
        }else {
          if(type === "string") {
            var normalizedText = new ReactTextComponent$$module$traverseAllChildren(children);
            callback(traverseContext, normalizedText, storageName, indexSoFar);
            subtreeCount += 1
          }else {
            if(type === "number") {
              var normalizedNumber = new ReactTextComponent$$module$traverseAllChildren("" + children);
              callback(traverseContext, normalizedNumber, storageName, indexSoFar);
              subtreeCount += 1
            }
          }
        }
      }
    }
  }
  return subtreeCount
};
function traverseAllChildren$$module$traverseAllChildren(children, callback, traverseContext) {
  if(children !== null && children !== undefined) {
    traverseAllChildrenImpl$$module$traverseAllChildren(children, "", 0, callback, traverseContext)
  }
}
module$traverseAllChildren.module$exports = traverseAllChildren$$module$traverseAllChildren;
if(module$traverseAllChildren.module$exports) {
  module$traverseAllChildren = module$traverseAllChildren.module$exports
}
goog.provide("module$flattenChildren");
var module$flattenChildren = {};
goog.require("module$traverseAllChildren");
goog.require("module$invariant");
var invariant$$module$flattenChildren = module$invariant;
var traverseAllChildren$$module$flattenChildren = module$traverseAllChildren;
function flattenSingleChildIntoContext$$module$flattenChildren(traverseContext, child, name) {
  var result = traverseContext;
  invariant$$module$flattenChildren(!result.hasOwnProperty(name));
  result[name] = child
}
function flattenChildren$$module$flattenChildren(children) {
  if(children == null) {
    return children
  }
  var result = {};
  traverseAllChildren$$module$flattenChildren(children, flattenSingleChildIntoContext$$module$flattenChildren, result);
  return result
}
module$flattenChildren.module$exports = flattenChildren$$module$flattenChildren;
if(module$flattenChildren.module$exports) {
  module$flattenChildren = module$flattenChildren.module$exports
}
goog.provide("module$ReactDOMComponent");
var module$ReactDOMComponent = {};
goog.require("module$mixInto");
goog.require("module$merge");
goog.require("module$keyOf");
goog.require("module$invariant");
goog.require("module$flattenChildren");
goog.require("module$escapeTextForBrowser");
goog.require("module$ReactPerf");
goog.require("module$ReactMount");
goog.require("module$ReactMultiChild");
goog.require("module$ReactEventEmitter");
goog.require("module$ReactComponent");
goog.require("module$DOMPropertyOperations");
goog.require("module$DOMProperty");
goog.require("module$CSSPropertyOperations");
var CSSPropertyOperations$$module$ReactDOMComponent = module$CSSPropertyOperations;
var DOMProperty$$module$ReactDOMComponent = module$DOMProperty;
var DOMPropertyOperations$$module$ReactDOMComponent = module$DOMPropertyOperations;
var ReactComponent$$module$ReactDOMComponent = module$ReactComponent;
var ReactEventEmitter$$module$ReactDOMComponent = module$ReactEventEmitter;
var ReactMultiChild$$module$ReactDOMComponent = module$ReactMultiChild;
var ReactMount$$module$ReactDOMComponent = module$ReactMount;
var ReactPerf$$module$ReactDOMComponent = module$ReactPerf;
var escapeTextForBrowser$$module$ReactDOMComponent = module$escapeTextForBrowser;
var flattenChildren$$module$ReactDOMComponent = module$flattenChildren;
var invariant$$module$ReactDOMComponent = module$invariant;
var keyOf$$module$ReactDOMComponent = module$keyOf;
var merge$$module$ReactDOMComponent = module$merge;
var mixInto$$module$ReactDOMComponent = module$mixInto;
var putListener$$module$ReactDOMComponent = ReactEventEmitter$$module$ReactDOMComponent.putListener;
var deleteListener$$module$ReactDOMComponent = ReactEventEmitter$$module$ReactDOMComponent.deleteListener;
var registrationNames$$module$ReactDOMComponent = ReactEventEmitter$$module$ReactDOMComponent.registrationNames;
var CONTENT_TYPES$$module$ReactDOMComponent = {"string":true, "number":true};
var STYLE$$module$ReactDOMComponent = keyOf$$module$ReactDOMComponent({style:null});
function assertValidProps$$module$ReactDOMComponent(props) {
  if(!props) {
    return
  }
  invariant$$module$ReactDOMComponent(props.children == null || props.dangerouslySetInnerHTML == null);
  invariant$$module$ReactDOMComponent(props.style == null || typeof props.style === "object")
}
function ReactDOMComponent$$module$ReactDOMComponent(tag, omitClose) {
  this._tagOpen = "\x3c" + tag;
  this._tagClose = omitClose ? "" : "\x3c/" + tag + "\x3e";
  this.tagName = tag.toUpperCase()
}
ReactDOMComponent$$module$ReactDOMComponent.Mixin = {mountComponent:ReactPerf$$module$ReactDOMComponent.measure("ReactDOMComponent", "mountComponent", function(rootID, transaction, mountDepth) {
  ReactComponent$$module$ReactDOMComponent.Mixin.mountComponent.call(this, rootID, transaction, mountDepth);
  assertValidProps$$module$ReactDOMComponent(this.props);
  return this._createOpenTagMarkup() + this._createContentMarkup(transaction) + this._tagClose
}), _createOpenTagMarkup:function() {
  var props = this.props;
  var ret = this._tagOpen;
  for(var propKey in props) {
    if(!props.hasOwnProperty(propKey)) {
      continue
    }
    var propValue = props[propKey];
    if(propValue == null) {
      continue
    }
    if(registrationNames$$module$ReactDOMComponent[propKey]) {
      putListener$$module$ReactDOMComponent(this._rootNodeID, propKey, propValue)
    }else {
      if(propKey === STYLE$$module$ReactDOMComponent) {
        if(propValue) {
          propValue = props.style = merge$$module$ReactDOMComponent(props.style)
        }
        propValue = CSSPropertyOperations$$module$ReactDOMComponent.createMarkupForStyles(propValue)
      }
      var markup = DOMPropertyOperations$$module$ReactDOMComponent.createMarkupForProperty(propKey, propValue);
      if(markup) {
        ret += " " + markup
      }
    }
  }
  var escapedID = escapeTextForBrowser$$module$ReactDOMComponent(this._rootNodeID);
  return ret + " " + ReactMount$$module$ReactDOMComponent.ATTR_NAME + '\x3d"' + escapedID + '"\x3e'
}, _createContentMarkup:function(transaction) {
  var innerHTML = this.props.dangerouslySetInnerHTML;
  if(innerHTML != null) {
    if(innerHTML.__html != null) {
      return innerHTML.__html
    }
  }else {
    var contentToUse = CONTENT_TYPES$$module$ReactDOMComponent[typeof this.props.children] ? this.props.children : null;
    var childrenToUse = contentToUse != null ? null : this.props.children;
    if(contentToUse != null) {
      return escapeTextForBrowser$$module$ReactDOMComponent(contentToUse)
    }else {
      if(childrenToUse != null) {
        var mountImages = this.mountChildren(flattenChildren$$module$ReactDOMComponent(childrenToUse), transaction);
        return mountImages.join("")
      }
    }
  }
  return""
}, receiveProps:function(nextProps, transaction) {
  assertValidProps$$module$ReactDOMComponent(nextProps);
  ReactComponent$$module$ReactDOMComponent.Mixin.receiveProps.call(this, nextProps, transaction)
}, updateComponent:ReactPerf$$module$ReactDOMComponent.measure("ReactDOMComponent", "updateComponent", function(transaction, prevProps) {
  ReactComponent$$module$ReactDOMComponent.Mixin.updateComponent.call(this, transaction, prevProps);
  this._updateDOMProperties(prevProps);
  this._updateDOMChildren(prevProps, transaction)
}), _updateDOMProperties:function(lastProps) {
  var nextProps = this.props;
  var propKey;
  var styleName;
  var styleUpdates;
  for(propKey in lastProps) {
    if(nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey)) {
      continue
    }
    if(propKey === STYLE$$module$ReactDOMComponent) {
      var lastStyle = lastProps[propKey];
      for(styleName in lastStyle) {
        if(lastStyle.hasOwnProperty(styleName)) {
          styleUpdates = styleUpdates || {};
          styleUpdates[styleName] = ""
        }
      }
    }else {
      if(registrationNames$$module$ReactDOMComponent[propKey]) {
        deleteListener$$module$ReactDOMComponent(this._rootNodeID, propKey)
      }else {
        if(DOMProperty$$module$ReactDOMComponent.isStandardName[propKey] || DOMProperty$$module$ReactDOMComponent.isCustomAttribute(propKey)) {
          ReactComponent$$module$ReactDOMComponent.DOMIDOperations.deletePropertyByID(this._rootNodeID, propKey)
        }
      }
    }
  }
  for(propKey in nextProps) {
    var nextProp = nextProps[propKey];
    var lastProp = lastProps[propKey];
    if(!nextProps.hasOwnProperty(propKey) || nextProp === lastProp) {
      continue
    }
    if(propKey === STYLE$$module$ReactDOMComponent) {
      if(nextProp) {
        nextProp = nextProps.style = merge$$module$ReactDOMComponent(nextProp)
      }
      if(lastProp) {
        for(styleName in lastProp) {
          if(lastProp.hasOwnProperty(styleName) && !nextProp.hasOwnProperty(styleName)) {
            styleUpdates = styleUpdates || {};
            styleUpdates[styleName] = ""
          }
        }
        for(styleName in nextProp) {
          if(nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
            styleUpdates = styleUpdates || {};
            styleUpdates[styleName] = nextProp[styleName]
          }
        }
      }else {
        styleUpdates = nextProp
      }
    }else {
      if(registrationNames$$module$ReactDOMComponent[propKey]) {
        putListener$$module$ReactDOMComponent(this._rootNodeID, propKey, nextProp)
      }else {
        if(DOMProperty$$module$ReactDOMComponent.isStandardName[propKey] || DOMProperty$$module$ReactDOMComponent.isCustomAttribute(propKey)) {
          ReactComponent$$module$ReactDOMComponent.DOMIDOperations.updatePropertyByID(this._rootNodeID, propKey, nextProp)
        }
      }
    }
  }
  if(styleUpdates) {
    ReactComponent$$module$ReactDOMComponent.DOMIDOperations.updateStylesByID(this._rootNodeID, styleUpdates)
  }
}, _updateDOMChildren:function(lastProps, transaction) {
  var nextProps = this.props;
  var lastContent = CONTENT_TYPES$$module$ReactDOMComponent[typeof lastProps.children] ? lastProps.children : null;
  var nextContent = CONTENT_TYPES$$module$ReactDOMComponent[typeof nextProps.children] ? nextProps.children : null;
  var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
  var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;
  var lastChildren = lastContent != null ? null : lastProps.children;
  var nextChildren = nextContent != null ? null : nextProps.children;
  var lastHasContentOrHtml = lastContent != null || lastHtml != null;
  var nextHasContentOrHtml = nextContent != null || nextHtml != null;
  if(lastChildren != null && nextChildren == null) {
    this.updateChildren(null, transaction)
  }else {
    if(lastHasContentOrHtml && !nextHasContentOrHtml) {
      this.updateTextContent("")
    }
  }
  if(nextContent != null) {
    if(lastContent !== nextContent) {
      this.updateTextContent("" + nextContent)
    }
  }else {
    if(nextHtml != null) {
      if(lastHtml !== nextHtml) {
        ReactComponent$$module$ReactDOMComponent.DOMIDOperations.updateInnerHTMLByID(this._rootNodeID, nextHtml)
      }
    }else {
      if(nextChildren != null) {
        this.updateChildren(flattenChildren$$module$ReactDOMComponent(nextChildren), transaction)
      }
    }
  }
}, unmountComponent:function() {
  ReactEventEmitter$$module$ReactDOMComponent.deleteAllListeners(this._rootNodeID);
  ReactComponent$$module$ReactDOMComponent.Mixin.unmountComponent.call(this);
  this.unmountChildren()
}};
mixInto$$module$ReactDOMComponent(ReactDOMComponent$$module$ReactDOMComponent, ReactComponent$$module$ReactDOMComponent.Mixin);
mixInto$$module$ReactDOMComponent(ReactDOMComponent$$module$ReactDOMComponent, ReactDOMComponent$$module$ReactDOMComponent.Mixin);
mixInto$$module$ReactDOMComponent(ReactDOMComponent$$module$ReactDOMComponent, ReactMultiChild$$module$ReactDOMComponent.Mixin);
module$ReactDOMComponent.module$exports = ReactDOMComponent$$module$ReactDOMComponent;
if(module$ReactDOMComponent.module$exports) {
  module$ReactDOMComponent = module$ReactDOMComponent.module$exports
}
goog.provide("module$ReactDOM");
var module$ReactDOM = {};
goog.require("module$objMapKeyVal");
goog.require("module$mergeInto");
goog.require("module$ReactDOMComponent");
var ReactDOMComponent$$module$ReactDOM = module$ReactDOMComponent;
var mergeInto$$module$ReactDOM = module$mergeInto;
var objMapKeyVal$$module$ReactDOM = module$objMapKeyVal;
function createDOMComponentClass$$module$ReactDOM(tag, omitClose) {
  var Constructor = function() {
  };
  Constructor.prototype = new ReactDOMComponent$$module$ReactDOM(tag, omitClose);
  Constructor.prototype.constructor = Constructor;
  var ConvenienceConstructor = function(props, children) {
    var instance = new Constructor;
    instance.construct.apply(instance, arguments);
    return instance
  };
  ConvenienceConstructor.componentConstructor = Constructor;
  return ConvenienceConstructor
}
var ReactDOM$$module$ReactDOM = objMapKeyVal$$module$ReactDOM({a:false, abbr:false, address:false, area:false, article:false, aside:false, audio:false, b:false, base:false, bdi:false, bdo:false, big:false, blockquote:false, body:false, br:true, button:false, canvas:false, caption:false, cite:false, code:false, col:true, colgroup:false, data:false, datalist:false, dd:false, del:false, details:false, dfn:false, div:false, dl:false, dt:false, em:false, embed:true, fieldset:false, figcaption:false, figure:false, 
footer:false, form:false, h1:false, h2:false, h3:false, h4:false, h5:false, h6:false, head:false, header:false, hr:true, html:false, i:false, iframe:false, img:true, input:true, ins:false, kbd:false, keygen:true, label:false, legend:false, li:false, link:false, main:false, map:false, mark:false, menu:false, menuitem:false, meta:true, meter:false, nav:false, noscript:false, object:false, ol:false, optgroup:false, option:false, output:false, p:false, param:true, pre:false, progress:false, q:false, 
rp:false, rt:false, ruby:false, s:false, samp:false, script:false, section:false, select:false, small:false, source:false, span:false, strong:false, style:false, sub:false, summary:false, sup:false, table:false, tbody:false, td:false, textarea:false, tfoot:false, th:false, thead:false, time:false, title:false, tr:false, track:true, u:false, ul:false, "var":false, video:false, wbr:false, circle:false, g:false, line:false, path:false, polyline:false, rect:false, svg:false, text:false}, createDOMComponentClass$$module$ReactDOM);
var injection$$module$ReactDOM = {injectComponentClasses:function(componentClasses) {
  mergeInto$$module$ReactDOM(ReactDOM$$module$ReactDOM, componentClasses)
}};
ReactDOM$$module$ReactDOM.injection = injection$$module$ReactDOM;
module$ReactDOM.module$exports = ReactDOM$$module$ReactDOM;
if(module$ReactDOM.module$exports) {
  module$ReactDOM = module$ReactDOM.module$exports
}
goog.provide("module$ReactDOMButton");
var module$ReactDOMButton = {};
goog.require("module$keyMirror");
goog.require("module$ReactDOM");
goog.require("module$ReactCompositeComponent");
var ReactCompositeComponent$$module$ReactDOMButton = module$ReactCompositeComponent;
var ReactDOM$$module$ReactDOMButton = module$ReactDOM;
var keyMirror$$module$ReactDOMButton = module$keyMirror;
var button$$module$ReactDOMButton = ReactDOM$$module$ReactDOMButton.button;
var mouseListenerNames$$module$ReactDOMButton = keyMirror$$module$ReactDOMButton({onClick:true, onDoubleClick:true, onMouseDown:true, onMouseMove:true, onMouseUp:true, onClickCapture:true, onDoubleClickCapture:true, onMouseDownCapture:true, onMouseMoveCapture:true, onMouseUpCapture:true});
var ReactDOMButton$$module$ReactDOMButton = ReactCompositeComponent$$module$ReactDOMButton.createClass({render:function() {
  var props = {};
  for(var key in this.props) {
    if(this.props.hasOwnProperty(key) && (!this.props.disabled || !mouseListenerNames$$module$ReactDOMButton[key])) {
      props[key] = this.props[key]
    }
  }
  return button$$module$ReactDOMButton(props, this.props.children)
}});
module$ReactDOMButton.module$exports = ReactDOMButton$$module$ReactDOMButton;
if(module$ReactDOMButton.module$exports) {
  module$ReactDOMButton = module$ReactDOMButton.module$exports
}
goog.provide("module$ReactDOMForm");
var module$ReactDOMForm = {};
goog.require("module$EventConstants");
goog.require("module$ReactEventEmitter");
goog.require("module$ReactDOM");
goog.require("module$ReactCompositeComponent");
var ReactCompositeComponent$$module$ReactDOMForm = module$ReactCompositeComponent;
var ReactDOM$$module$ReactDOMForm = module$ReactDOM;
var ReactEventEmitter$$module$ReactDOMForm = module$ReactEventEmitter;
var EventConstants$$module$ReactDOMForm = module$EventConstants;
var form$$module$ReactDOMForm = ReactDOM$$module$ReactDOMForm.form;
var ReactDOMForm$$module$ReactDOMForm = ReactCompositeComponent$$module$ReactDOMForm.createClass({render:function() {
  return this.transferPropsTo(form$$module$ReactDOMForm(null, this.props.children))
}, componentDidMount:function(node) {
  ReactEventEmitter$$module$ReactDOMForm.trapBubbledEvent(EventConstants$$module$ReactDOMForm.topLevelTypes.topSubmit, "submit", node)
}});
module$ReactDOMForm.module$exports = ReactDOMForm$$module$ReactDOMForm;
if(module$ReactDOMForm.module$exports) {
  module$ReactDOMForm = module$ReactDOMForm.module$exports
}
goog.provide("module$ReactDOMInput");
var module$ReactDOMInput = {};
goog.require("module$merge");
goog.require("module$invariant");
goog.require("module$ReactMount");
goog.require("module$ReactDOM");
goog.require("module$ReactCompositeComponent");
goog.require("module$LinkedValueMixin");
goog.require("module$DOMPropertyOperations");
var DOMPropertyOperations$$module$ReactDOMInput = module$DOMPropertyOperations;
var LinkedValueMixin$$module$ReactDOMInput = module$LinkedValueMixin;
var ReactCompositeComponent$$module$ReactDOMInput = module$ReactCompositeComponent;
var ReactDOM$$module$ReactDOMInput = module$ReactDOM;
var ReactMount$$module$ReactDOMInput = module$ReactMount;
var invariant$$module$ReactDOMInput = module$invariant;
var merge$$module$ReactDOMInput = module$merge;
var input$$module$ReactDOMInput = ReactDOM$$module$ReactDOMInput.input;
var instancesByReactID$$module$ReactDOMInput = {};
var ReactDOMInput$$module$ReactDOMInput = ReactCompositeComponent$$module$ReactDOMInput.createClass({mixins:[LinkedValueMixin$$module$ReactDOMInput], getInitialState:function() {
  var defaultValue = this.props.defaultValue;
  return{checked:this.props.defaultChecked || false, value:defaultValue != null && defaultValue !== false ? defaultValue : ""}
}, shouldComponentUpdate:function() {
  return!this._isChanging
}, render:function() {
  var props = merge$$module$ReactDOMInput(this.props);
  props.defaultChecked = null;
  props.defaultValue = null;
  props.checked = this.props.checked != null ? this.props.checked : this.state.checked;
  var value = this.getValue();
  props.value = value != null && value !== false ? "" + value : this.state.value;
  props.onChange = this._handleChange;
  return input$$module$ReactDOMInput(props, this.props.children)
}, componentDidMount:function(rootNode) {
  var id = ReactMount$$module$ReactDOMInput.getID(rootNode);
  instancesByReactID$$module$ReactDOMInput[id] = this
}, componentWillUnmount:function() {
  var rootNode = this.getDOMNode();
  var id = ReactMount$$module$ReactDOMInput.getID(rootNode);
  delete instancesByReactID$$module$ReactDOMInput[id]
}, componentDidUpdate:function(prevProps, prevState, rootNode) {
  if(this.props.checked != null) {
    DOMPropertyOperations$$module$ReactDOMInput.setValueForProperty(rootNode, "checked", this.props.checked || false)
  }
  var value = this.getValue();
  if(value != null) {
    DOMPropertyOperations$$module$ReactDOMInput.setValueForProperty(rootNode, "value", value !== false ? "" + value : "")
  }
}, _handleChange:function(event) {
  var returnValue;
  var onChange = this.getOnChange();
  if(onChange) {
    this._isChanging = true;
    returnValue = onChange(event);
    this._isChanging = false
  }
  this.setState({checked:event.target.checked, value:event.target.value});
  var name = this.props.name;
  if(this.props.type === "radio" && name != null) {
    var rootNode = this.getDOMNode();
    var group = document.getElementsByName(name);
    for(var i = 0, groupLen = group.length;i < groupLen;i++) {
      var otherNode = group[i];
      if(otherNode === rootNode || otherNode.nodeName !== "INPUT" || otherNode.type !== "radio" || otherNode.form !== rootNode.form) {
        continue
      }
      var otherID = ReactMount$$module$ReactDOMInput.getID(otherNode);
      invariant$$module$ReactDOMInput(otherID);
      var otherInstance = instancesByReactID$$module$ReactDOMInput[otherID];
      invariant$$module$ReactDOMInput(otherInstance);
      otherInstance.setState({checked:false})
    }
  }
  return returnValue
}});
module$ReactDOMInput.module$exports = ReactDOMInput$$module$ReactDOMInput;
if(module$ReactDOMInput.module$exports) {
  module$ReactDOMInput = module$ReactDOMInput.module$exports
}
goog.provide("module$ReactDOMOption");
var module$ReactDOMOption = {};
goog.require("module$ReactDOM");
goog.require("module$ReactCompositeComponent");
var ReactCompositeComponent$$module$ReactDOMOption = module$ReactCompositeComponent;
var ReactDOM$$module$ReactDOMOption = module$ReactDOM;
var option$$module$ReactDOMOption = ReactDOM$$module$ReactDOMOption.option;
var ReactDOMOption$$module$ReactDOMOption = ReactCompositeComponent$$module$ReactDOMOption.createClass({componentWillMount:function() {
  if(this.props.selected != null) {
  }
}, render:function() {
  return option$$module$ReactDOMOption(this.props, this.props.children)
}});
module$ReactDOMOption.module$exports = ReactDOMOption$$module$ReactDOMOption;
if(module$ReactDOMOption.module$exports) {
  module$ReactDOMOption = module$ReactDOMOption.module$exports
}
goog.provide("module$ReactDOMSelect");
var module$ReactDOMSelect = {};
goog.require("module$merge");
goog.require("module$invariant");
goog.require("module$ReactDOM");
goog.require("module$ReactCompositeComponent");
goog.require("module$LinkedValueMixin");
var LinkedValueMixin$$module$ReactDOMSelect = module$LinkedValueMixin;
var ReactCompositeComponent$$module$ReactDOMSelect = module$ReactCompositeComponent;
var ReactDOM$$module$ReactDOMSelect = module$ReactDOM;
var invariant$$module$ReactDOMSelect = module$invariant;
var merge$$module$ReactDOMSelect = module$merge;
var select$$module$ReactDOMSelect = ReactDOM$$module$ReactDOMSelect.select;
function selectValueType$$module$ReactDOMSelect(props, propName, componentName) {
  if(props[propName] == null) {
    return
  }
  if(props.multiple) {
    invariant$$module$ReactDOMSelect(Array.isArray(props[propName]))
  }else {
    invariant$$module$ReactDOMSelect(!Array.isArray(props[propName]))
  }
}
function updateOptions$$module$ReactDOMSelect() {
  var propValue = this.getValue();
  var value = propValue != null ? propValue : this.state.value;
  var options = this.getDOMNode().options;
  var selectedValue = "" + value;
  for(var i = 0, l = options.length;i < l;i++) {
    var selected = this.props.multiple ? selectedValue.indexOf(options[i].value) >= 0 : selected = options[i].value === selectedValue;
    if(selected !== options[i].selected) {
      options[i].selected = selected
    }
  }
}
var ReactDOMSelect$$module$ReactDOMSelect = ReactCompositeComponent$$module$ReactDOMSelect.createClass({mixins:[LinkedValueMixin$$module$ReactDOMSelect], propTypes:{defaultValue:selectValueType$$module$ReactDOMSelect, value:selectValueType$$module$ReactDOMSelect}, getInitialState:function() {
  return{value:this.props.defaultValue || (this.props.multiple ? [] : "")}
}, componentWillReceiveProps:function(nextProps) {
  if(!this.props.multiple && nextProps.multiple) {
    this.setState({value:[this.state.value]})
  }else {
    if(this.props.multiple && !nextProps.multiple) {
      this.setState({value:this.state.value[0]})
    }
  }
}, shouldComponentUpdate:function() {
  return!this._isChanging
}, render:function() {
  var props = merge$$module$ReactDOMSelect(this.props);
  props.onChange = this._handleChange;
  props.value = null;
  return select$$module$ReactDOMSelect(props, this.props.children)
}, componentDidMount:updateOptions$$module$ReactDOMSelect, componentDidUpdate:updateOptions$$module$ReactDOMSelect, _handleChange:function(event) {
  var returnValue;
  var onChange = this.getOnChange();
  if(onChange) {
    this._isChanging = true;
    returnValue = onChange(event);
    this._isChanging = false
  }
  var selectedValue;
  if(this.props.multiple) {
    selectedValue = [];
    var options = event.target.options;
    for(var i = 0, l = options.length;i < l;i++) {
      if(options[i].selected) {
        selectedValue.push(options[i].value)
      }
    }
  }else {
    selectedValue = event.target.value
  }
  this.setState({value:selectedValue});
  return returnValue
}});
module$ReactDOMSelect.module$exports = ReactDOMSelect$$module$ReactDOMSelect;
if(module$ReactDOMSelect.module$exports) {
  module$ReactDOMSelect = module$ReactDOMSelect.module$exports
}
goog.provide("module$ReactDOMTextarea");
var module$ReactDOMTextarea = {};
goog.require("module$merge");
goog.require("module$invariant");
goog.require("module$ReactDOM");
goog.require("module$ReactCompositeComponent");
goog.require("module$LinkedValueMixin");
goog.require("module$DOMPropertyOperations");
var DOMPropertyOperations$$module$ReactDOMTextarea = module$DOMPropertyOperations;
var LinkedValueMixin$$module$ReactDOMTextarea = module$LinkedValueMixin;
var ReactCompositeComponent$$module$ReactDOMTextarea = module$ReactCompositeComponent;
var ReactDOM$$module$ReactDOMTextarea = module$ReactDOM;
var invariant$$module$ReactDOMTextarea = module$invariant;
var merge$$module$ReactDOMTextarea = module$merge;
var textarea$$module$ReactDOMTextarea = ReactDOM$$module$ReactDOMTextarea.textarea;
var CONTENT_TYPES$$module$ReactDOMTextarea = {"string":true, "number":true};
var ReactDOMTextarea$$module$ReactDOMTextarea = ReactCompositeComponent$$module$ReactDOMTextarea.createClass({mixins:[LinkedValueMixin$$module$ReactDOMTextarea], getInitialState:function() {
  var defaultValue = this.props.defaultValue;
  var children = this.props.children;
  if(children != null) {
    invariant$$module$ReactDOMTextarea(defaultValue == null);
    if(Array.isArray(children)) {
      invariant$$module$ReactDOMTextarea(children.length <= 1);
      children = children[0]
    }
    invariant$$module$ReactDOMTextarea(CONTENT_TYPES$$module$ReactDOMTextarea[typeof children]);
    defaultValue = "" + children
  }
  if(defaultValue == null) {
    defaultValue = ""
  }
  var value = this.getValue();
  return{initialValue:value != null ? value : defaultValue, value:defaultValue}
}, shouldComponentUpdate:function() {
  return!this._isChanging
}, render:function() {
  var props = merge$$module$ReactDOMTextarea(this.props);
  var value = this.getValue();
  invariant$$module$ReactDOMTextarea(props.dangerouslySetInnerHTML == null);
  props.defaultValue = null;
  props.value = value != null ? value : this.state.value;
  props.onChange = this._handleChange;
  return textarea$$module$ReactDOMTextarea(props, this.state.initialValue)
}, componentDidUpdate:function(prevProps, prevState, rootNode) {
  var value = this.getValue();
  if(value != null) {
    DOMPropertyOperations$$module$ReactDOMTextarea.setValueForProperty(rootNode, "value", value !== false ? "" + value : "")
  }
}, _handleChange:function(event) {
  var returnValue;
  var onChange = this.getOnChange();
  if(onChange) {
    this._isChanging = true;
    returnValue = onChange(event);
    this._isChanging = false
  }
  this.setState({value:event.target.value});
  return returnValue
}});
module$ReactDOMTextarea.module$exports = ReactDOMTextarea$$module$ReactDOMTextarea;
if(module$ReactDOMTextarea.module$exports) {
  module$ReactDOMTextarea = module$ReactDOMTextarea.module$exports
}
goog.provide("module$ReactDefaultInjection");
var module$ReactDefaultInjection = {};
goog.require("module$ReactUpdates");
goog.require("module$ReactDefaultBatchingStrategy");
goog.require("module$MobileSafariClickEventPlugin");
goog.require("module$SimpleEventPlugin");
goog.require("module$ReactInstanceHandles");
goog.require("module$EventPluginHub");
goog.require("module$CompositionEventPlugin");
goog.require("module$ChangeEventPlugin");
goog.require("module$EnterLeaveEventPlugin");
goog.require("module$DefaultEventPluginOrder");
goog.require("module$DOMProperty");
goog.require("module$DefaultDOMPropertyConfig");
goog.require("module$ReactPerf");
goog.require("module$ReactEventTopLevelCallback");
goog.require("module$ReactEventEmitter");
goog.require("module$ReactDOMTextarea");
goog.require("module$ReactDOMSelect");
goog.require("module$ReactDOMOption");
goog.require("module$ReactDOMInput");
goog.require("module$ReactDOMForm");
goog.require("module$ReactDOMButton");
goog.require("module$ReactDOM");
var ReactDOM$$module$ReactDefaultInjection = module$ReactDOM;
var ReactDOMButton$$module$ReactDefaultInjection = module$ReactDOMButton;
var ReactDOMForm$$module$ReactDefaultInjection = module$ReactDOMForm;
var ReactDOMInput$$module$ReactDefaultInjection = module$ReactDOMInput;
var ReactDOMOption$$module$ReactDefaultInjection = module$ReactDOMOption;
var ReactDOMSelect$$module$ReactDefaultInjection = module$ReactDOMSelect;
var ReactDOMTextarea$$module$ReactDefaultInjection = module$ReactDOMTextarea;
var ReactEventEmitter$$module$ReactDefaultInjection = module$ReactEventEmitter;
var ReactEventTopLevelCallback$$module$ReactDefaultInjection = module$ReactEventTopLevelCallback;
var ReactPerf$$module$ReactDefaultInjection = module$ReactPerf;
var DefaultDOMPropertyConfig$$module$ReactDefaultInjection = module$DefaultDOMPropertyConfig;
var DOMProperty$$module$ReactDefaultInjection = module$DOMProperty;
var DefaultEventPluginOrder$$module$ReactDefaultInjection = module$DefaultEventPluginOrder;
var EnterLeaveEventPlugin$$module$ReactDefaultInjection = module$EnterLeaveEventPlugin;
var ChangeEventPlugin$$module$ReactDefaultInjection = module$ChangeEventPlugin;
var CompositionEventPlugin$$module$ReactDefaultInjection = module$CompositionEventPlugin;
var EventPluginHub$$module$ReactDefaultInjection = module$EventPluginHub;
var ReactInstanceHandles$$module$ReactDefaultInjection = module$ReactInstanceHandles;
var SimpleEventPlugin$$module$ReactDefaultInjection = module$SimpleEventPlugin;
var MobileSafariClickEventPlugin$$module$ReactDefaultInjection = module$MobileSafariClickEventPlugin;
var ReactDefaultBatchingStrategy$$module$ReactDefaultInjection = module$ReactDefaultBatchingStrategy;
var ReactUpdates$$module$ReactDefaultInjection = module$ReactUpdates;
function inject$$module$ReactDefaultInjection() {
  ReactEventEmitter$$module$ReactDefaultInjection.TopLevelCallbackCreator = ReactEventTopLevelCallback$$module$ReactDefaultInjection;
  EventPluginHub$$module$ReactDefaultInjection.injection.injectEventPluginOrder(DefaultEventPluginOrder$$module$ReactDefaultInjection);
  EventPluginHub$$module$ReactDefaultInjection.injection.injectInstanceHandle(ReactInstanceHandles$$module$ReactDefaultInjection);
  EventPluginHub$$module$ReactDefaultInjection.injection.injectEventPluginsByName({SimpleEventPlugin:SimpleEventPlugin$$module$ReactDefaultInjection, EnterLeaveEventPlugin:EnterLeaveEventPlugin$$module$ReactDefaultInjection, ChangeEventPlugin:ChangeEventPlugin$$module$ReactDefaultInjection, CompositionEventPlugin:CompositionEventPlugin$$module$ReactDefaultInjection, MobileSafariClickEventPlugin:MobileSafariClickEventPlugin$$module$ReactDefaultInjection});
  ReactDOM$$module$ReactDefaultInjection.injection.injectComponentClasses({button:ReactDOMButton$$module$ReactDefaultInjection, form:ReactDOMForm$$module$ReactDefaultInjection, input:ReactDOMInput$$module$ReactDefaultInjection, option:ReactDOMOption$$module$ReactDefaultInjection, select:ReactDOMSelect$$module$ReactDefaultInjection, textarea:ReactDOMTextarea$$module$ReactDefaultInjection});
  DOMProperty$$module$ReactDefaultInjection.injection.injectDOMPropertyConfig(DefaultDOMPropertyConfig$$module$ReactDefaultInjection);
  ReactUpdates$$module$ReactDefaultInjection.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy$$module$ReactDefaultInjection)
}
module$ReactDefaultInjection.module$exports = {inject:inject$$module$ReactDefaultInjection};
if(module$ReactDefaultInjection.module$exports) {
  module$ReactDefaultInjection = module$ReactDefaultInjection.module$exports
}
goog.provide("module$React");
var module$React = {};
goog.require("module$ReactDefaultInjection");
goog.require("module$ReactServerRendering");
goog.require("module$ReactPropTypes");
goog.require("module$ReactPerf");
goog.require("module$ReactMount");
goog.require("module$ReactDOM");
goog.require("module$ReactComponent");
goog.require("module$ReactCompositeComponent");
var ReactCompositeComponent$$module$React = module$ReactCompositeComponent;
var ReactComponent$$module$React = module$ReactComponent;
var ReactDOM$$module$React = module$ReactDOM;
var ReactMount$$module$React = module$ReactMount;
var ReactPerf$$module$React = module$ReactPerf;
var ReactPropTypes$$module$React = module$ReactPropTypes;
var ReactServerRendering$$module$React = module$ReactServerRendering;
var ReactDefaultInjection$$module$React = module$ReactDefaultInjection;
ReactDefaultInjection$$module$React.inject();
var React$$module$React = {DOM:ReactDOM$$module$React, PropTypes:ReactPropTypes$$module$React, initializeTouchEvents:function(shouldUseTouch) {
  ReactMount$$module$React.useTouchEvents = shouldUseTouch
}, createClass:ReactCompositeComponent$$module$React.createClass, constructAndRenderComponent:ReactMount$$module$React.constructAndRenderComponent, constructAndRenderComponentByID:ReactMount$$module$React.constructAndRenderComponentByID, renderComponent:ReactPerf$$module$React.measure("React", "renderComponent", ReactMount$$module$React.renderComponent), renderComponentToString:ReactServerRendering$$module$React.renderComponentToString, unmountComponentAtNode:ReactMount$$module$React.unmountComponentAtNode, 
unmountAndReleaseReactRootNode:ReactMount$$module$React.unmountAndReleaseReactRootNode, isValidClass:ReactCompositeComponent$$module$React.isValidClass, isValidComponent:ReactComponent$$module$React.isValidComponent};
React$$module$React.version = "0.5.0-alpha";
module$React.module$exports = React$$module$React;
if(module$React.module$exports) {
  module$React = module$React.module$exports
}
var React = module$React;
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while(true) {
    if(cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__5639 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__5639;
      continue
    }else {
      return v__$1
    }
    break
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if(cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v)
  }else {
    return v
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if(function() {
    var or__3943__auto__ = limit <= 0;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return limit >= 2 + cljs.core.count.call(null, s)
    }
  }()) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "")
  }else {
    var pred__5643 = cljs.core._EQ_;
    var expr__5644 = limit;
    if(pred__5643.call(null, 1, expr__5644)) {
      return cljs.core.vector.call(null, s)
    }else {
      if(pred__5643.call(null, 2, expr__5644)) {
        return cljs.core.vector.call(null, "", s)
      }else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c))
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0)
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1)
        }else {
          var temp__4090__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if(cljs.core.truth_(temp__4090__auto__)) {
            var m = temp__4090__auto__;
            var index = s__$1.indexOf(m);
            var G__5646 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__5647 = limit__$1 - 1;
            var G__5648 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__5646;
            limit__$1 = G__5647;
            parts = G__5648;
            continue
          }else {
            return cljs.core.conj.call(null, parts, s__$1)
          }
        }
        break
      }
    }())
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while(true) {
    if(index === 0) {
      return""
    }else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if(function() {
        var or__3943__auto__ = cljs.core._EQ_.call(null, ch, "\n");
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return cljs.core._EQ_.call(null, ch, "\r")
        }
      }()) {
        var G__5649 = index - 1;
        index = G__5649;
        continue
      }else {
        return s.substring(0, index)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s)
};
clojure.string.escape = function escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString()
    }else {
      var ch = s.charAt(index);
      var temp__4090__auto___5650 = cljs.core.get.call(null, cmap, ch);
      if(cljs.core.truth_(temp__4090__auto___5650)) {
        var replacement_5651 = temp__4090__auto___5650;
        buffer.append([cljs.core.str(replacement_5651)].join(""))
      }else {
        buffer.append(ch)
      }
      var G__5652 = index + 1;
      index = G__5652;
      continue
    }
    break
  }
};
goog.provide("pump.template");
goog.require("cljs.core");
goog.require("clojure.string");
var cache_4467 = new Object;
pump.template.dash_to_camel_name = function dash_to_camel_name(k) {
  var or__3943__auto__ = cache_4467[k];
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    var complete = function() {
      var words__2844__auto__ = clojure.string.split.call(null, cljs.core.name.call(null, k), /-/);
      var camels__2845__auto__ = cljs.core.map.call(null, clojure.string.capitalize, cljs.core.rest.call(null, words__2844__auto__));
      var complete__2846__auto__ = cljs.core.apply.call(null, cljs.core.str, cljs.core.first.call(null, words__2844__auto__), camels__2845__auto__);
      return complete__2846__auto__
    }();
    cache_4467[k] = complete;
    return complete
  }
};
pump.template.as_content = function as_content(content) {
  var iter__3643__auto__ = function iter__4472(s__4473) {
    return new cljs.core.LazySeq(null, function() {
      var s__4473__$1 = s__4473;
      while(true) {
        var temp__4092__auto__ = cljs.core.seq.call(null, s__4473__$1);
        if(temp__4092__auto__) {
          var s__4473__$2 = temp__4092__auto__;
          if(cljs.core.chunked_seq_QMARK_.call(null, s__4473__$2)) {
            var c__3641__auto__ = cljs.core.chunk_first.call(null, s__4473__$2);
            var size__3642__auto__ = cljs.core.count.call(null, c__3641__auto__);
            var b__4475 = cljs.core.chunk_buffer.call(null, size__3642__auto__);
            if(function() {
              var i__4474 = 0;
              while(true) {
                if(i__4474 < size__3642__auto__) {
                  var c = cljs.core._nth.call(null, c__3641__auto__, i__4474);
                  cljs.core.chunk_append.call(null, b__4475, c == null ? null : cljs.core.map_QMARK_.call(null, c) ? function() {
                    throw"Maps cannot be used as content";
                  }() : typeof c === "string" ? c : cljs.core.vector_QMARK_.call(null, c) ? pump.template.elem_factory.call(null, c) : cljs.core.seq_QMARK_.call(null, c) ? as_content.call(null, c) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? [cljs.core.str(c)].join("") : null);
                  var G__4476 = i__4474 + 1;
                  i__4474 = G__4476;
                  continue
                }else {
                  return true
                }
                break
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__4475), iter__4472.call(null, cljs.core.chunk_rest.call(null, s__4473__$2)))
            }else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__4475), null)
            }
          }else {
            var c = cljs.core.first.call(null, s__4473__$2);
            return cljs.core.cons.call(null, c == null ? null : cljs.core.map_QMARK_.call(null, c) ? function() {
              throw"Maps cannot be used as content";
            }() : typeof c === "string" ? c : cljs.core.vector_QMARK_.call(null, c) ? pump.template.elem_factory.call(null, c) : cljs.core.seq_QMARK_.call(null, c) ? as_content.call(null, c) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? [cljs.core.str(c)].join("") : null, iter__4472.call(null, cljs.core.rest.call(null, s__4473__$2)))
          }
        }else {
          return null
        }
        break
      }
    }, null, null)
  };
  return iter__3643__auto__.call(null, content)
};
pump.template.re_tag = /([^\s\.#]+)(?:#([^\s\.#]+))?(?:\.([^\s#]+))?/;
pump.template.parse_tag = function parse_tag(tag) {
  if(cljs.core.fn_QMARK_.call(null, tag)) {
    return cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "custom", "custom", 3959783139), tag, null], true)
  }else {
    var vec__4478 = cljs.core.next.call(null, cljs.core.re_matches.call(null, pump.template.re_tag, cljs.core.name.call(null, tag)));
    var tag__$1 = cljs.core.nth.call(null, vec__4478, 0, null);
    var id = cljs.core.nth.call(null, vec__4478, 1, null);
    var class$ = cljs.core.nth.call(null, vec__4478, 2, null);
    return cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "vanilla", "vanilla", 1247006445), React.DOM[tag__$1], cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "id", "id", 1013907597), function() {
      var or__3943__auto__ = id;
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return null
      }
    }(), new cljs.core.Keyword(null, "className", "className", 1004015509), cljs.core.truth_(class$) ? clojure.string.replace.call(null, class$, /\./, " ") : null], true)], true)
  }
};
pump.template.attr_mapping = cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "for", "for", 1014005819), new cljs.core.Keyword(null, "htmlFor", "htmlFor", 2249940112), new cljs.core.Keyword(null, "class", "class", 1108647146), new cljs.core.Keyword(null, "className", "className", 1004015509)], true);
pump.template.normalize_into = function normalize_into(tag_attrs, attrs) {
  var camel_attrs = function() {
    var iter__3643__auto__ = function iter__4487(s__4488) {
      return new cljs.core.LazySeq(null, function() {
        var s__4488__$1 = s__4488;
        while(true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__4488__$1);
          if(temp__4092__auto__) {
            var s__4488__$2 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, s__4488__$2)) {
              var c__3641__auto__ = cljs.core.chunk_first.call(null, s__4488__$2);
              var size__3642__auto__ = cljs.core.count.call(null, c__3641__auto__);
              var b__4490 = cljs.core.chunk_buffer.call(null, size__3642__auto__);
              if(function() {
                var i__4489 = 0;
                while(true) {
                  if(i__4489 < size__3642__auto__) {
                    var vec__4493 = cljs.core._nth.call(null, c__3641__auto__, i__4489);
                    var k = cljs.core.nth.call(null, vec__4493, 0, null);
                    var v = cljs.core.nth.call(null, vec__4493, 1, null);
                    cljs.core.chunk_append.call(null, b__4490, cljs.core.PersistentVector.fromArray([pump.template.dash_to_camel_name.call(null, pump.template.attr_mapping.call(null, k, k)), v], true));
                    var G__4495 = i__4489 + 1;
                    i__4489 = G__4495;
                    continue
                  }else {
                    return true
                  }
                  break
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__4490), iter__4487.call(null, cljs.core.chunk_rest.call(null, s__4488__$2)))
              }else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__4490), null)
              }
            }else {
              var vec__4494 = cljs.core.first.call(null, s__4488__$2);
              var k = cljs.core.nth.call(null, vec__4494, 0, null);
              var v = cljs.core.nth.call(null, vec__4494, 1, null);
              return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([pump.template.dash_to_camel_name.call(null, pump.template.attr_mapping.call(null, k, k)), v], true), iter__4487.call(null, cljs.core.rest.call(null, s__4488__$2)))
            }
          }else {
            return null
          }
          break
        }
      }, null, null)
    };
    return iter__3643__auto__.call(null, attrs)
  }();
  var merged_class = [cljs.core.str((new cljs.core.Keyword(null, "className", "className", 1004015509)).call(null, tag_attrs)), cljs.core.str(" "), cljs.core.str(cljs.core.some.call(null, attrs, cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "class-name", "class-name", 677253426), new cljs.core.Keyword(null, "className", "className", 1004015509), new cljs.core.Keyword(null, "class", "class", 1108647146)], true)))].join("");
  return cljs.core.assoc.call(null, cljs.core.into.call(null, tag_attrs, camel_attrs), new cljs.core.Keyword(null, "className", "className", 1004015509), merged_class)
};
pump.template.exclude_empty = function exclude_empty(attrs) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.filter.call(null, function(p__4498) {
    var vec__4499 = p__4498;
    var k = cljs.core.nth.call(null, vec__4499, 0, null);
    var v = cljs.core.nth.call(null, vec__4499, 1, null);
    return v
  }, attrs))
};
pump.template.normalize_element = function normalize_element(p__4500) {
  var vec__4503 = p__4500;
  var tag = cljs.core.nth.call(null, vec__4503, 0, null);
  var content = cljs.core.nthnext.call(null, vec__4503, 1);
  if(!function() {
    var or__3943__auto__ = tag instanceof cljs.core.Keyword;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      var or__3943__auto____$1 = tag instanceof cljs.core.Symbol;
      if(or__3943__auto____$1) {
        return or__3943__auto____$1
      }else {
        var or__3943__auto____$2 = typeof tag === "string";
        if(or__3943__auto____$2) {
          return or__3943__auto____$2
        }else {
          return cljs.core.fn_QMARK_.call(null, tag)
        }
      }
    }
  }()) {
    throw[cljs.core.str(tag), cljs.core.str(" is not a valid element name.")].join("");
  }else {
  }
  var vec__4504 = pump.template.parse_tag.call(null, tag);
  var tag_type = cljs.core.nth.call(null, vec__4504, 0, null);
  var tag__$1 = cljs.core.nth.call(null, vec__4504, 1, null);
  var tag_attrs = cljs.core.nth.call(null, vec__4504, 2, null);
  var map_attrs = cljs.core.first.call(null, content);
  if(cljs.core.map_QMARK_.call(null, map_attrs)) {
    return cljs.core.PersistentVector.fromArray([tag_type, tag__$1, cljs.core._EQ_.call(null, tag_type, new cljs.core.Keyword(null, "vanilla", "vanilla", 1247006445)) ? pump.template.normalize_into.call(null, tag_attrs, map_attrs) : map_attrs, cljs.core.next.call(null, content)], true)
  }else {
    return cljs.core.PersistentVector.fromArray([tag_type, tag__$1, tag_attrs, content], true)
  }
};
pump.template.elem_factory = function elem_factory(elem_def) {
  var vec__4506 = pump.template.normalize_element.call(null, elem_def);
  var tag_type = cljs.core.nth.call(null, vec__4506, 0, null);
  var tag_fn = cljs.core.nth.call(null, vec__4506, 1, null);
  var attrs = cljs.core.nth.call(null, vec__4506, 2, null);
  var content = cljs.core.nth.call(null, vec__4506, 3, null);
  var attrs__$1 = pump.template.exclude_empty.call(null, attrs);
  var attrs__$2 = cljs.core._EQ_.call(null, tag_type, new cljs.core.Keyword(null, "vanilla", "vanilla", 1247006445)) ? cljs.core.clj__GT_js.call(null, attrs__$1) : attrs__$1;
  if(tag_fn == null) {
    throw[cljs.core.str("Element definition '"), cljs.core.str(cljs.core.pr_str.call(null, elem_def)), cljs.core.str("' could not be parsed")].join("");
  }else {
  }
  return tag_fn.call(null, attrs__$2, cljs.core.clj__GT_js.call(null, pump.template.as_content.call(null, content)))
};
pump.template.html = function() {
  var html__delegate = function(tags) {
    var res = cljs.core.map.call(null, pump.template.elem_factory, tags);
    if(cljs.core.truth_(cljs.core.second.call(null, res))) {
      return res
    }else {
      return cljs.core.first.call(null, res)
    }
  };
  var html = function(var_args) {
    var tags = null;
    if(arguments.length > 0) {
      tags = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return html__delegate.call(this, tags)
  };
  html.cljs$lang$maxFixedArity = 0;
  html.cljs$lang$applyTo = function(arglist__4507) {
    var tags = cljs.core.seq(arglist__4507);
    return html__delegate(tags)
  };
  html.cljs$core$IFn$_invoke$arity$variadic = html__delegate;
  return html
}();
goog.provide("pump.core");
goog.require("cljs.core");
goog.require("pump.template");
goog.require("pump.template");
pump.core.ReactCljMixin = {};
pump.core._ToExtend = {"prototype":pump.core.ReactCljMixin};
pump.core._ToExtend.prototype.cljs$core$IHash$ = true;
pump.core._ToExtend.prototype.cljs$core$IHash$_hash$arity$1 = function(C) {
  return goog.getUid(C)
};
pump.core._ToExtend.prototype.cljs$core$IWatchable$ = true;
pump.core._ToExtend.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(C, old, new$) {
  if(cljs.core.not_EQ_.call(null, old, new$)) {
    return C.forceUpdate()
  }else {
    return null
  }
};
pump.core._ToExtend.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(C, key, f) {
  return null
};
pump.core._ToExtend.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(C, key) {
  return null
};
pump.core._ToExtend.prototype.cljs$core$IPrintWithWriter$ = true;
pump.core._ToExtend.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(C, writer, opts) {
  cljs.core._write.call(null, writer, [cljs.core.str("#\x3c"), cljs.core.str(C.displayName), cljs.core.str(": ")].join(""));
  cljs.core.pr_writer.call(null, C.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e")
};
pump.core._ToExtend.prototype.cljs$core$IMeta$ = true;
pump.core._ToExtend.prototype.cljs$core$IMeta$_meta$arity$1 = function(C) {
  return null
};
pump.core._ToExtend.prototype.cljs$core$IDeref$ = true;
pump.core._ToExtend.prototype.cljs$core$IDeref$_deref$arity$1 = function(C) {
  return C.state
};
pump.core._ToExtend.prototype.cljs$core$IEquiv$ = true;
pump.core._ToExtend.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(C, other) {
  return C === other
};
pump.core.add_first_arguments = function add_first_arguments(f) {
  return function() {
    var G__4434__delegate = function(args) {
      var this$ = this;
      return cljs.core.apply.call(null, f, this$, this$.props, cljs.core.deref.call(null, this$), args)
    };
    var G__4434 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__4434__delegate.call(this, args)
    };
    G__4434.cljs$lang$maxFixedArity = 0;
    G__4434.cljs$lang$applyTo = function(arglist__4435) {
      var args = cljs.core.seq(arglist__4435);
      return G__4434__delegate(args)
    };
    G__4434.cljs$core$IFn$_invoke$arity$variadic = G__4434__delegate;
    return G__4434
  }()
};
pump.core.render_wrapper = function render_wrapper(render) {
  return function(this$, props, state) {
    var res = render.call(null, this$, props, state);
    if(cljs.core.vector_QMARK_.call(null, res)) {
      return pump.template.html.call(null, res)
    }else {
      return res
    }
  }
};
pump.core.wrap_functions = function wrap_functions(props_map) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__3643__auto__ = function iter__4444(s__4445) {
      return new cljs.core.LazySeq(null, function() {
        var s__4445__$1 = s__4445;
        while(true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__4445__$1);
          if(temp__4092__auto__) {
            var s__4445__$2 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, s__4445__$2)) {
              var c__3641__auto__ = cljs.core.chunk_first.call(null, s__4445__$2);
              var size__3642__auto__ = cljs.core.count.call(null, c__3641__auto__);
              var b__4447 = cljs.core.chunk_buffer.call(null, size__3642__auto__);
              if(function() {
                var i__4446 = 0;
                while(true) {
                  if(i__4446 < size__3642__auto__) {
                    var vec__4450 = cljs.core._nth.call(null, c__3641__auto__, i__4446);
                    var k = cljs.core.nth.call(null, vec__4450, 0, null);
                    var val = cljs.core.nth.call(null, vec__4450, 1, null);
                    cljs.core.chunk_append.call(null, b__4447, cljs.core.PersistentVector.fromArray([k, !cljs.core.fn_QMARK_.call(null, val) ? val : pump.core.add_first_arguments.call(null, cljs.core._EQ_.call(null, k, new cljs.core.Keyword(null, "render", "render", 4374279432)) ? pump.core.render_wrapper.call(null, val) : val)], true));
                    var G__4452 = i__4446 + 1;
                    i__4446 = G__4452;
                    continue
                  }else {
                    return true
                  }
                  break
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__4447), iter__4444.call(null, cljs.core.chunk_rest.call(null, s__4445__$2)))
              }else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__4447), null)
              }
            }else {
              var vec__4451 = cljs.core.first.call(null, s__4445__$2);
              var k = cljs.core.nth.call(null, vec__4451, 0, null);
              var val = cljs.core.nth.call(null, vec__4451, 1, null);
              return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([k, !cljs.core.fn_QMARK_.call(null, val) ? val : pump.core.add_first_arguments.call(null, cljs.core._EQ_.call(null, k, new cljs.core.Keyword(null, "render", "render", 4374279432)) ? pump.core.render_wrapper.call(null, val) : val)], true), iter__4444.call(null, cljs.core.rest.call(null, s__4445__$2)))
            }
          }else {
            return null
          }
          break
        }
      }, null, null)
    };
    return iter__3643__auto__.call(null, props_map)
  }())
};
pump.core.add_atom_mixin = function add_atom_mixin(props_map) {
  return cljs.core.merge_with.call(null, cljs.core.concat, props_map, cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "mixins", "mixins", 4235130756), cljs.core.PersistentVector.fromArray([pump.core.ReactCljMixin], true)], true))
};
goog.provide("pump");
goog.require("cljs.core");
goog.require("pump.core");
goog.require("pump.core");
goog.require("React");
pump.prevent = function prevent(e) {
  e.preventDefault();
  return e
};
pump.e_value = function e_value(e) {
  return e.target.value
};
pump.react = function react(body) {
  return React.createClass.call(null, cljs.core.clj__GT_js.call(null, pump.core.add_atom_mixin.call(null, pump.core.wrap_functions.call(null, body))))
};
goog.provide("pump.example");
goog.require("cljs.core");
goog.require("pump");
goog.require("pump");
pump.example.Input = pump.react.call(null, cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "displayName", "displayName", 2728053215), "Input", new cljs.core.Keyword(null, "render", "render", 4374279432), function(C, p__4455, p__4456) {
  var map__4457 = p__4455;
  var map__4457__$1 = cljs.core.seq_QMARK_.call(null, map__4457) ? cljs.core.apply.call(null, cljs.core.hash_map, map__4457) : map__4457;
  var on_submit = cljs.core.get.call(null, map__4457__$1, new cljs.core.Keyword(null, "on-submit", "on-submit", 1076954936));
  var map__4458 = p__4456;
  var map__4458__$1 = cljs.core.seq_QMARK_.call(null, map__4458) ? cljs.core.apply.call(null, cljs.core.hash_map, map__4458) : map__4458;
  var value = cljs.core.get.call(null, map__4458__$1, new cljs.core.Keyword(null, "value", "value", 1125876963));
  return cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "form", "form", 1017053238), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "on-submit", "on-submit", 1076954936), function(p1__4453_SHARP_) {
    pump.prevent.call(null, p1__4453_SHARP_);
    on_submit.call(null, value);
    return cljs.core.swap_BANG_.call(null, C, cljs.core.assoc, new cljs.core.Keyword(null, "value", "value", 1125876963), "")
  }], true), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "input", "input", 1114262332), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "on-change", "on-change", 606853840), function(p1__4454_SHARP_) {
    return cljs.core.swap_BANG_.call(null, C, cljs.core.assoc, new cljs.core.Keyword(null, "value", "value", 1125876963), pump.e_value.call(null, p1__4454_SHARP_))
  }, new cljs.core.Keyword(null, "type", "type", 1017479852), "text", new cljs.core.Keyword(null, "value", "value", 1125876963), value], true)], true), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "input", "input", 1114262332), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "type", "type", 1017479852), "submit", new cljs.core.Keyword(null, "value", "value", 1125876963), "send"], true)], true)], true)
}], true));
pump.example.Output = pump.react.call(null, cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "displayName", "displayName", 2728053215), "Output", new cljs.core.Keyword(null, "render", "render", 4374279432), function(C, p__4459, S) {
  var map__4460 = p__4459;
  var map__4460__$1 = cljs.core.seq_QMARK_.call(null, map__4460) ? cljs.core.apply.call(null, cljs.core.hash_map, map__4460) : map__4460;
  var lines = cljs.core.get.call(null, map__4460__$1, new cljs.core.Keyword(null, "lines", "lines", 1116881521));
  return cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "div", "div", 1014003715), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "ul", "ul", 1013907977), function() {
    var iter__3643__auto__ = function iter__4461(s__4462) {
      return new cljs.core.LazySeq(null, function() {
        var s__4462__$1 = s__4462;
        while(true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__4462__$1);
          if(temp__4092__auto__) {
            var s__4462__$2 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, s__4462__$2)) {
              var c__3641__auto__ = cljs.core.chunk_first.call(null, s__4462__$2);
              var size__3642__auto__ = cljs.core.count.call(null, c__3641__auto__);
              var b__4464 = cljs.core.chunk_buffer.call(null, size__3642__auto__);
              if(function() {
                var i__4463 = 0;
                while(true) {
                  if(i__4463 < size__3642__auto__) {
                    var x = cljs.core._nth.call(null, c__3641__auto__, i__4463);
                    cljs.core.chunk_append.call(null, b__4464, cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "li", "li", 1013907695), x], true));
                    var G__4465 = i__4463 + 1;
                    i__4463 = G__4465;
                    continue
                  }else {
                    return true
                  }
                  break
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__4464), iter__4461.call(null, cljs.core.chunk_rest.call(null, s__4462__$2)))
              }else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__4464), null)
              }
            }else {
              var x = cljs.core.first.call(null, s__4462__$2);
              return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "li", "li", 1013907695), x], true), iter__4461.call(null, cljs.core.rest.call(null, s__4462__$2)))
            }
          }else {
            return null
          }
          break
        }
      }, null, null)
    };
    return iter__3643__auto__.call(null, lines)
  }()], true)], true)
}], true));
pump.example.Root = pump.react.call(null, cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "displayName", "displayName", 2728053215), "Root", new cljs.core.Keyword(null, "render", "render", 4374279432), function(C, P, S) {
  return cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "div", "div", 1014003715), cljs.core.PersistentVector.fromArray([pump.example.Output, S], true), cljs.core.PersistentVector.fromArray([pump.example.Input, cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "on-submit", "on-submit", 1076954936), function(p1__4466_SHARP_) {
    return cljs.core.swap_BANG_.call(null, C, cljs.core.update_in, cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "lines", "lines", 1116881521)], true), cljs.core.conj, p1__4466_SHARP_)
  }], true)], true)], true)
}, new cljs.core.Keyword(null, "getInitialState", "getInitialState", 2219830677), function() {
  return cljs.core.identity.call(null, cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "lines", "lines", 1116881521), cljs.core.PersistentVector.fromArray(["one line", "second line"], true)], true))
}], true));
pump.example.main = function main() {
  var root = React.renderComponent.call(null, pump.example.Root.call(null), document.body);
  return console.log(root)
};
goog.exportSymbol("pump.example.main", pump.example.main);
